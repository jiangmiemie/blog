"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[2098],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>c});var t=n(7294);function l(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function p(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?p(Object(n),!0).forEach((function(a){l(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,l=function(e,a){if(null==e)return{};var n,t,l={},p=Object.keys(e);for(t=0;t<p.length;t++)n=p[t],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(t=0;t<p.length;t++)n=p[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=t.createContext({}),o=function(e){var a=t.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},u=function(e){var a=o(e.components);return t.createElement(i.Provider,{value:a},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},k=t.forwardRef((function(e,a){var n=e.components,l=e.mdxType,p=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=o(n),k=l,c=d["".concat(i,".").concat(k)]||d[k]||m[k]||p;return n?t.createElement(c,r(r({ref:a},u),{},{components:n})):t.createElement(c,r({ref:a},u))}));function c(e,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var p=n.length,r=new Array(p);r[0]=k;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s[d]="string"==typeof e?e:l,r[1]=s;for(var o=2;o<p;o++)r[o]=n[o];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}k.displayName="MDXCreateElement"},6079:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>r,default:()=>m,frontMatter:()=>p,metadata:()=>s,toc:()=>o});var t=n(7462),l=(n(7294),n(3905));const p={sidebar_position:2,title:"\u6570\u636e\u79d1\u5b66\u5165\u95e8"},r=void 0,s={unversionedId:"12\u673a\u5668\u5b66\u4e60/\u6570\u636e\u79d1\u5b66\u5165\u95e8",id:"12\u673a\u5668\u5b66\u4e60/\u6570\u636e\u79d1\u5b66\u5165\u95e8",title:"\u6570\u636e\u79d1\u5b66\u5165\u95e8",description:"matplotlib\u6a21\u5757",source:"@site/docs/12\u673a\u5668\u5b66\u4e60/\u6570\u636e\u79d1\u5b66\u5165\u95e8.md",sourceDirName:"12\u673a\u5668\u5b66\u4e60",slug:"/12\u673a\u5668\u5b66\u4e60/\u6570\u636e\u79d1\u5b66\u5165\u95e8",permalink:"/docs/12\u673a\u5668\u5b66\u4e60/\u6570\u636e\u79d1\u5b66\u5165\u95e8",draft:!1,editUrl:"https://github.com/jiangmiemie/blog/blob/master/docs/12\u673a\u5668\u5b66\u4e60/\u6570\u636e\u79d1\u5b66\u5165\u95e8.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"\u6570\u636e\u79d1\u5b66\u5165\u95e8"},sidebar:"tutorialSidebar",previous:{title:"\u673a\u5668\u5b66\u4e60\u6982\u8ff0",permalink:"/docs/12\u673a\u5668\u5b66\u4e60/"},next:{title:"\u4f20\u7edf\u673a\u5668\u5b66\u4e60",permalink:"/docs/12\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u673a\u5668\u5b66\u4e60"}},i={},o=[{value:"matplotlib\u6a21\u5757",id:"matplotlib\u6a21\u5757",level:2},{value:"\u4e8c\u7ef4\u76f4\u7ebf\u56fe",id:"\u4e8c\u7ef4\u76f4\u7ebf\u56fe",level:3},{value:"\u7ed8\u5236\u591a\u6761\u6570\u636e\u7ebf",id:"\u7ed8\u5236\u591a\u6761\u6570\u636e\u7ebf",level:3},{value:"\u7ebf\u6761\u4fee\u9970",id:"\u7ebf\u6761\u4fee\u9970",level:3},{value:"\u6563\u70b9\u56fe",id:"\u6563\u70b9\u56fe",level:3},{value:"\u7ed8\u5236\u4e09\u7ef4\u6570\u636e",id:"\u7ed8\u5236\u4e09\u7ef4\u6570\u636e",level:3},{value:"\u76f4\u65b9\u56fe",id:"\u76f4\u65b9\u56fe",level:3},{value:"\u79bb\u6563\u5206\u5e03",id:"\u79bb\u6563\u5206\u5e03",level:3},{value:"\u56fe\u5185\u586b\u5145",id:"\u56fe\u5185\u586b\u5145",level:3},{value:"Numpy\u6570\u7ec4",id:"numpy\u6570\u7ec4",level:2},{value:"\u6570\u7ec4\uff1aarray",id:"\u6570\u7ec4array",level:3},{value:"\u6570\u7ec4\u7684\u5408\u5e76",id:"\u6570\u7ec4\u7684\u5408\u5e76",level:4},{value:"\u63d0\u53d6\u6570\u7ec4\u4e2d\u7684\u5143\u7d20",id:"\u63d0\u53d6\u6570\u7ec4\u4e2d\u7684\u5143\u7d20",level:4},{value:"\u4fee\u6539\u6570\u7ec4\u5f62\u72b6",id:"\u4fee\u6539\u6570\u7ec4\u5f62\u72b6",level:4},{value:"Numpy\u7d22\u5f15\uff1aindex",id:"numpy\u7d22\u5f15index",level:3},{value:"\u591a\u7ef4\u6570\u7ec4\u7684\u7d22\u5f15",id:"\u591a\u7ef4\u6570\u7ec4\u7684\u7d22\u5f15",level:4},{value:"\u4e00\u7ef4\u82b1\u5f0f\u7d22\u5f15",id:"\u4e00\u7ef4\u82b1\u5f0f\u7d22\u5f15",level:4},{value:"\u201c\u4e0d\u5b8c\u5168\u201d\u7d22\u5f15",id:"\u4e0d\u5b8c\u5168\u7d22\u5f15",level:4},{value:"where\u8bed\u53e5",id:"where\u8bed\u53e5",level:4},{value:"Numpy\u65b9\u6cd5",id:"numpy\u65b9\u6cd5",level:3},{value:"\u77e9\u9635\u8f6c\u7f6e",id:"\u77e9\u9635\u8f6c\u7f6e",level:4},{value:"squeeze",id:"squeeze",level:4},{value:"\u590d\u5236",id:"\u590d\u5236",level:4},{value:"\u586b\u5145",id:"\u586b\u5145",level:4},{value:"\u590d\u6570",id:"\u590d\u6570",level:4},{value:"\u6392\u5e8f",id:"\u6392\u5e8f",level:4},{value:"\u5143\u7d20\u7684\u6570\u5b66\u64cd\u4f5c",id:"\u5143\u7d20\u7684\u6570\u5b66\u64cd\u4f5c",level:3},{value:"\u6570\u7ec4\u4e0e\u5b57\u7b26\u4e32\u7684\u8f6c\u6362",id:"\u6570\u7ec4\u4e0e\u5b57\u7b26\u4e32\u7684\u8f6c\u6362",level:4},{value:"\u6587\u672c\u4e2d\u8bfb\u53d6\u6570\u7ec4",id:"\u6587\u672c\u4e2d\u8bfb\u53d6\u6570\u7ec4",level:3},{value:"loadtxt \u51fd\u6570",id:"loadtxt-\u51fd\u6570",level:4},{value:"genfromtxt",id:"genfromtxt",level:4},{value:"loadtxt \u81ea\u5b9a\u4e49\u8f6c\u6362\u65b9\u6cd5",id:"loadtxt-\u81ea\u5b9a\u4e49\u8f6c\u6362\u65b9\u6cd5",level:4},{value:"\u5c06\u6570\u7ec4\u5199\u5165\u6587\u4ef6",id:"\u5c06\u6570\u7ec4\u5199\u5165\u6587\u4ef6",level:4},{value:"Numpy \u4e8c\u8fdb\u5236\u683c\u5f0f",id:"numpy-\u4e8c\u8fdb\u5236\u683c\u5f0f",level:3},{value:"\u751f\u6210\u6570\u7ec4\u7684\u51fd\u6570",id:"\u751f\u6210\u6570\u7ec4\u7684\u51fd\u6570",level:3},{value:"arange \u751f\u6210\u6570\u7ec4\uff0c[start,stop)",id:"arange-\u751f\u6210\u6570\u7ec4startstop",level:4},{value:"linspace",id:"linspace",level:4},{value:"logspace",id:"logspace",level:4},{value:"meshgrid",id:"meshgrid",level:4},{value:"\u56fe\u4f8b",id:"\u56fe\u4f8b",level:4},{value:"\u5185\u5b58\u6620\u5c04",id:"\u5185\u5b58\u6620\u5c04",level:3},{value:"Pandas\u6570\u636e\u5206\u6790",id:"pandas\u6570\u636e\u5206\u6790",level:2},{value:"\u4e3a\u4ec0\u4e48\u662fPandas",id:"\u4e3a\u4ec0\u4e48\u662fpandas",level:3},{value:"\u5feb\u901f\u7684\u8bc6\u522b\u7ed3\u6784\u5316\u6570\u636e",id:"\u5feb\u901f\u7684\u8bc6\u522b\u7ed3\u6784\u5316\u6570\u636e",level:4},{value:"\u5feb\u901f\u7684\u64cd\u4f5c\u5143\u6570\u636e",id:"\u5feb\u901f\u7684\u64cd\u4f5c\u5143\u6570\u636e",level:4},{value:"\u5feb\u901f\u8fc7\u6ee4",id:"\u5feb\u901f\u8fc7\u6ee4",level:4},{value:"\u5feb\u901f\u5207\u7247",id:"\u5feb\u901f\u5207\u7247",level:4},{value:"\u5feb\u901f\u7edf\u8ba1",id:"\u5feb\u901f\u7edf\u8ba1",level:4},{value:"\u5feb\u901f\u201cMapReduce\u201d",id:"\u5feb\u901fmapreduce",level:4},{value:"1.1 Series\uff1apandas\u7684\u957f\u67aa(\u6570\u636e\u8868\u4e2d\u7684\u4e00\u5217\u6216\u4e00\u884c,\u89c2\u6d4b\u5411\u91cf,\u4e00\u7ef4\u6570\u7ec4...)",id:"11-seriespandas\u7684\u957f\u67aa\u6570\u636e\u8868\u4e2d\u7684\u4e00\u5217\u6216\u4e00\u884c\u89c2\u6d4b\u5411\u91cf\u4e00\u7ef4\u6570\u7ec4",level:3},{value:"Series\u652f\u6301\u8fc7\u6ee4\u7684\u539f\u7406\u5c31\u5982\u540cNumPy",id:"series\u652f\u6301\u8fc7\u6ee4\u7684\u539f\u7406\u5c31\u5982\u540cnumpy",level:4},{value:"\u5f53\u7136\u4e5f\u652f\u6301Broadcasting",id:"\u5f53\u7136\u4e5f\u652f\u6301broadcasting",level:4},{value:"\u4ee5\u53caUniversal Function",id:"\u4ee5\u53cauniversal-function",level:4},{value:"1.2 DataFrame\uff1apandas\u7684\u6218\u9524(\u6570\u636e\u8868\uff0c\u4e8c\u7ef4\u6570\u7ec4)",id:"12-dataframepandas\u7684\u6218\u9524\u6570\u636e\u8868\u4e8c\u7ef4\u6570\u7ec4",level:3},{value:"\u4eceNumpy\u4e8c\u7ef4\u6570\u7ec4\u3001\u4ece\u6587\u4ef6\u6216\u8005\u4ece\u6570\u636e\u5e93\u5b9a\u4e49\uff1a\u6570\u636e\u867d\u597d\uff0c\u52ff\u5fd8\u5217\u540d",id:"\u4ecenumpy\u4e8c\u7ef4\u6570\u7ec4\u4ece\u6587\u4ef6\u6216\u8005\u4ece\u6570\u636e\u5e93\u5b9a\u4e49\u6570\u636e\u867d\u597d\u52ff\u5fd8\u5217\u540d",level:4},{value:"\u7b49\u957f\u7684\u5217\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u5b57\u5178\u91cc\uff08JSON\uff09\uff1a\u5f88\u4e0d\u5e78\uff0c\u5b57\u5178key\u662f\u65e0\u5e8f\u7684",id:"\u7b49\u957f\u7684\u5217\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u5b57\u5178\u91ccjson\u5f88\u4e0d\u5e78\u5b57\u5178key\u662f\u65e0\u5e8f\u7684",level:4},{value:"\u4ece\u53e6\u4e00\u4e2aDataFrame\u5b9a\u4e49DataFrame\uff1a\u554a\uff0c\u5f3a\u8feb\u75c7\u72af\u4e86",id:"\u4ece\u53e6\u4e00\u4e2adataframe\u5b9a\u4e49dataframe\u554a\u5f3a\u8feb\u75c7\u72af\u4e86",level:4},{value:"\u4eceDataFrame\u4e2d\u53d6\u51fa\u5217\uff1f\u4e24\u79cd\u65b9\u6cd5\uff08\u4e0eJavaScript\u5b8c\u5168\u4e00\u81f4\uff01\uff09",id:"\u4ecedataframe\u4e2d\u53d6\u51fa\u5217\u4e24\u79cd\u65b9\u6cd5\u4e0ejavascript\u5b8c\u5168\u4e00\u81f4",level:4},{value:"\u4eceDataFrame\u4e2d\u53d6\u51fa\u884c\uff1f\uff08\u81f3\u5c11\uff09\u4e24\u79cd\u65b9\u6cd5",id:"\u4ecedataframe\u4e2d\u53d6\u51fa\u884c\u81f3\u5c11\u4e24\u79cd\u65b9\u6cd5",level:4},{value:"\u50cfNumpy\u5207\u7247\u4e00\u6837\u7684\u7ec8\u6781\u62db\u5f0f\uff1ailoc",id:"\u50cfnumpy\u5207\u7247\u4e00\u6837\u7684\u7ec8\u6781\u62db\u5f0filoc",level:4},{value:"\u542c\u8bf4\u4f60\u4eceTable\u5730\u72f1\u6765\uff0c\u5927\u718a\u732b\u7b11\u4e86",id:"\u542c\u8bf4\u4f60\u4ecetable\u5730\u72f1\u6765\u5927\u718a\u732b\u7b11\u4e86",level:4},{value:"1.3 Index\uff1apandas\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\u7684\u9b3c\u724c\uff08\u884c\u7ea7\u7d22\u5f15\uff09",id:"13-indexpandas\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\u7684\u9b3c\u724c\u884c\u7ea7\u7d22\u5f15",level:3},{value:"\u76f4\u63a5\u5b9a\u4e49\u666e\u901a\u7d22\u5f15\uff0c\u957f\u5f97\u5c31\u548c\u666e\u901a\u7684Series\u4e00\u6837",id:"\u76f4\u63a5\u5b9a\u4e49\u666e\u901a\u7d22\u5f15\u957f\u5f97\u5c31\u548c\u666e\u901a\u7684series\u4e00\u6837",level:4},{value:"Immutable\uff0c\u7262\u8bb0",id:"immutable\u7262\u8bb0",level:4},{value:"\u6254\u8fdb\u53bb\u4e00\u4e2a\u542b\u6709\u591a\u5143\u7ec4\u7684List\uff0c\u5c31\u6709\u4e86MultiIndex",id:"\u6254\u8fdb\u53bb\u4e00\u4e2a\u542b\u6709\u591a\u5143\u7ec4\u7684list\u5c31\u6709\u4e86multiindex",level:4},{value:"\u5bf9\u4e8eSeries\u6765\u8bf4\uff0c\u5982\u679c\u62e5\u6709\u4e86\u591a\u91cdIndex\uff0c\u6570\u636e\uff0c\u53d8\u5f62",id:"\u5bf9\u4e8eseries\u6765\u8bf4\u5982\u679c\u62e5\u6709\u4e86\u591a\u91cdindex\u6570\u636e\u53d8\u5f62",level:4},{value:"DateTime\u6807\u51c6\u5e93\u5982\u6b64\u597d\u7528\uff0c\u4f60\u503c\u5f97\u62e5\u6709",id:"datetime\u6807\u51c6\u5e93\u5982\u6b64\u597d\u7528\u4f60\u503c\u5f97\u62e5\u6709",level:4},{value:"\u5982\u679c\u4f60\u4e0d\u4ec5\u9700\u8981\u65f6\u95f4\u683c\u5f0f\u7edf\u4e00\uff0c\u65f6\u95f4\u9891\u7387\u4e5f\u8981\u7edf\u4e00\u7684\u8bdd",id:"\u5982\u679c\u4f60\u4e0d\u4ec5\u9700\u8981\u65f6\u95f4\u683c\u5f0f\u7edf\u4e00\u65f6\u95f4\u9891\u7387\u4e5f\u8981\u7edf\u4e00\u7684\u8bdd",level:4},{value:"\u6708\u7ea7\u7cbe\u5ea6\u548c\u65e5\u7ea7\u7cbe\u5ea6\u5982\u4f55\u8f6c\u6362\uff1f",id:"\u6708\u7ea7\u7cbe\u5ea6\u548c\u65e5\u7ea7\u7cbe\u5ea6\u5982\u4f55\u8f6c\u6362",level:4},{value:"\u6700\u540e\u7684\u6700\u540e\uff0c\u6211\u8981\u771f\u6b63\u628a\u4e24\u79cd\u9891\u7387\u7684\u65f6\u95f4\u7cbe\u5ea6\u5339\u914d\u4e0a\uff1f",id:"\u6700\u540e\u7684\u6700\u540e\u6211\u8981\u771f\u6b63\u628a\u4e24\u79cd\u9891\u7387\u7684\u65f6\u95f4\u7cbe\u5ea6\u5339\u914d\u4e0a",level:4},{value:"\u7c97\u7c92\u5ea6\u6570\u636e\uff0breindex\uff0bffill/bfill",id:"\u7c97\u7c92\u5ea6\u6570\u636ereindexffillbfill",level:4},{value:"\u5173\u4e8e\u7d22\u5f15\uff0c\u65b9\u4fbf\u7684\u64cd\u4f5c\u6709\uff1f",id:"\u5173\u4e8e\u7d22\u5f15\u65b9\u4fbf\u7684\u64cd\u4f5c\u6709",level:4},{value:"2.1 \u7ed3\u6784\u5316\u6570\u636e\u8f93\u5165\u8f93\u51fa",id:"21-\u7ed3\u6784\u5316\u6570\u636e\u8f93\u5165\u8f93\u51fa",level:3},{value:"2.1.x Excel ... ?",id:"21x-excel--",level:3},{value:"2.2 \u534a\u7ed3\u6784\u5316\u6570\u636e",id:"22-\u534a\u7ed3\u6784\u5316\u6570\u636e",level:3},{value:"3.1 \u6570\u636e\u6574\u5408\uff1a\u65b9\u4fbf\u7075\u6d3b",id:"31-\u6570\u636e\u6574\u5408\u65b9\u4fbf\u7075\u6d3b",level:3},{value:"3.1.1 \u6a2a\u5411\u62fc\u63a5\uff1a\u76f4\u63a5DataFrame",id:"311-\u6a2a\u5411\u62fc\u63a5\u76f4\u63a5dataframe",level:3},{value:"3.1.2 \u6a2a\u5411\u62fc\u63a5\uff1aConcatenate",id:"312-\u6a2a\u5411\u62fc\u63a5concatenate",level:3},{value:"3.1.3 \u7eb5\u5411\u62fc\u63a5\uff1aMerge",id:"313-\u7eb5\u5411\u62fc\u63a5merge",level:3},{value:"3.2 \u6570\u636e\u6e05\u6d17\u4e09\u5251\u5ba2",id:"32-\u6570\u636e\u6e05\u6d17\u4e09\u5251\u5ba2",level:3},{value:"3.3 \u6570\u636e\u6392\u5e8f",id:"33-\u6570\u636e\u6392\u5e8f",level:3},{value:"3.4 \u7f3a\u5931\u6570\u636e\u5904\u7406",id:"34-\u7f3a\u5931\u6570\u636e\u5904\u7406",level:3},{value:"Pandas\u7684groupby",id:"pandas\u7684groupby",level:3},{value:"\u6c47\u603b\u4e4b\u540e\u7684\u5e7f\u64ad\u64cd\u4f5c",id:"\u6c47\u603b\u4e4b\u540e\u7684\u5e7f\u64ad\u64cd\u4f5c",level:4},{value:"\u4ea7\u751f MultiIndex\uff08\u591a\u5217\u5206\u7ec4\uff09\u540e\u7684\u6570\u636e\u900f\u89c6\u8868\u64cd\u4f5c",id:"\u4ea7\u751f-multiindex\u591a\u5217\u5206\u7ec4\u540e\u7684\u6570\u636e\u900f\u89c6\u8868\u64cd\u4f5c",level:4}],u={toc:o},d="wrapper";function m(e){let{components:a,...n}=e;return(0,l.kt)(d,(0,t.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"matplotlib\u6a21\u5757"},"matplotlib\u6a21\u5757"),(0,l.kt)("h3",{id:"\u4e8c\u7ef4\u76f4\u7ebf\u56fe"},"\u4e8c\u7ef4\u76f4\u7ebf\u56fe"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\nfrom matplotlib import pyplot as plt\n#  \u751f\u6210\u4e00\u4e2a-3\u52303\u7684\u7b49\u5dee\u6570\u5217\uff0c\u5171100\u4e2a\u6570\na = np.linspace(-3, 3, 10)\n\n# \u4e09\u89d2\u51fd\u6570\nb = np.sin(a)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"plt.plot(a, b)\n# \u7b49\u4ef7\u4e8e plt.plot(b)\nplt.show() # \u6b63\u5f26\u56fe\n")),(0,l.kt)("h3",{id:"\u7ed8\u5236\u591a\u6761\u6570\u636e\u7ebf"},"\u7ed8\u5236\u591a\u6761\u6570\u636e\u7ebf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u753b\u51fa\u591a\u6761\u6570\u636e\u7ebf\uff1a\nplt.plot(a, np.sin(a))\nplt.plot(a, np.sin(2 * a))\nplt.show()\n")),(0,l.kt)("h3",{id:"\u7ebf\u6761\u4fee\u9970"},"\u7ebf\u6761\u4fee\u9970"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u4f7f\u7528\u5b57\u7b26\u4e32\uff0c\u7ed9\u5b9a\u7ebf\u6761\u53c2\u6570\uff1a\n# b:\u84dd\u8272\n# -- : \u865a\u7ebf\n# o : \u5706\u70b9\n'''\n\u5b8c\u6574\u53c2\u6570\u53ef\u53c2\u8003\nhttps://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot\n'''\nplt.plot(a, np.sin(a), 'b--o')\nplt.show()\n")),(0,l.kt)("h3",{id:"\u6563\u70b9\u56fe"},"\u6563\u70b9\u56fe"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"plt.plot(a, np.sin(a), 'bo')\nplt.show()  # \u4e8c\u7ef4\u6563\u70b9\u56fe\n# \u7b49\u4ef7\u4e8e\nplt.scatter(a, np.sin(a),color='blue',marker='o')\nplt.show() \n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"t = np.linspace(0, 2 * np.pi, 50)\nx = np.sin(t)\nplt.plot(t, x, 'bo', t, np.sin(2 * t), 'r-^', label='sin', color='red', )\nplt.legend()\nplt.xlabel('radians')\nplt.ylabel('amplitude', fontsize='large')\nplt.title('Sin(x)')\nplt.grid()\nplt.show()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u76f4\u65b9\u56fe\ndata = np.array([1234, 321, 400, 120, 11, 30, 2000])\nplt.hist(data, 7)\nplt.show()\n")),(0,l.kt)("h3",{id:"\u7ed8\u5236\u4e09\u7ef4\u6570\u636e"},"\u7ed8\u5236\u4e09\u7ef4\u6570\u636e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u9ad8\u7ef4 RBF \u63d2\u503c\n# \u4e09\u7ef4\u6570\u636e\u70b9\uff1a\nimport numpy as np\nfrom matplotlib import pyplot as plt\nx, y = np.mgrid[-np.pi / 2:np.pi / 2:5j, -np.pi / 2:np.pi / 2:5j]\nz = np.cos(np.sqrt(x ** 2 + y ** 2))\nfig = plt.figure(figsize=(12, 6))\nax = fig.add_subplot(projection='3d')\nax.scatter(x, y, z)\nfig.savefig(\"mplot3d.jpg\")\nplt.show()\n")),(0,l.kt)("h3",{id:"\u76f4\u65b9\u56fe"},"\u76f4\u65b9\u56fe"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\nfrom matplotlib import pyplot as plt\n# \u6b63\u6001\u5206\u5e03\nfrom scipy.stats import norm\nx_norm = norm.rvs(size=500)\nx_norm.shape\n\nplt.ion() #\u5f00\u542finteractive mode\n\nh = plt.hist(x_norm)\nprint('counts, ', h[0])\nprint('bin centers', h[1])\nfigure = plt.figure(1)  # \u521b\u5efa\u56fe\u88681\nplt.show()\n")),(0,l.kt)("p",null,"\u5f52\u4e00\u5316\u76f4\u65b9\u56fe\uff08\u7528\u51fa\u73b0\u9891\u7387\u4ee3\u66ff\u6b21\u6570\uff09\uff0c\u5c06\u5212\u5206\u533a\u95f4\u53d8\u4e3a 20\uff08\u9ed8\u8ba4 10\uff09\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"h = plt.hist(x_norm, bins=20)\nplt.show()\n")),(0,l.kt)("p",null,"\u591a\u7ec4\u76f4\u65b9\u56fe"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from scipy.stats import norm\nfrom scipy.stats import ttest_ind\n\n# \u72ec\u7acb\u6837\u672c t \u68c0\u9a8c\n# \u4e24\u7ec4\u53c2\u6570\u4e0d\u540c\u7684\u6b63\u6001\u5206\u5e03\uff1a\nn1 = norm(loc=0.3, scale=1.0)\nn2 = norm(loc=0, scale=1.0)\n\n# \u4ece\u5206\u5e03\u4e2d\u4ea7\u751f\u4e24\u7ec4\u968f\u673a\u6837\u672c\uff1a\nn1_samples = n1.rvs(size=100)\nn2_samples = n2.rvs(size=100)\n\n# \u5c06\u4e24\u7ec4\u6837\u672c\u6df7\u5408\u5728\u4e00\u8d77\uff1a\nsamples = np.hstack((n1_samples, n2_samples))\n\n# \u6700\u5927\u4f3c\u7136\u53c2\u6570\u4f30\u8ba1\uff1a\nloc, scale = norm.fit(samples)\nn = norm(loc=loc, scale=scale)\n\n# \u6bd4\u8f83\uff1a\nx = np.linspace(-3, 3, 100)\n\nplt.hist([samples, n1_samples, n2_samples])\nplt.plot(x, n.pdf(x), 'b-')\nplt.plot(x, n1.pdf(x), 'g-')\nplt.plot(x, n2.pdf(x), 'r-')\nplt.show()\n")),(0,l.kt)("h3",{id:"\u79bb\u6563\u5206\u5e03"},"\u79bb\u6563\u5206\u5e03"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u79bb\u6563\u5206\u5e03\nfrom scipy.stats import randint\n\n# \u79bb\u6563\u5747\u5300\u5206\u5e03\u7684\u6982\u7387\u8d28\u91cf\u51fd\u6570\uff08PMF\uff09\uff1a\nhigh = 10\nlow = -10\n\nx = np.arange(low, high + 1, 0.5)\np = plt.stem(x, randint(low, high).pmf(x))  # \u6746\u72b6\u56fe\nplt.show()\n")),(0,l.kt)("h3",{id:"\u56fe\u5185\u586b\u5145"},"\u56fe\u5185\u586b\u5145"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from scipy.integrate import trapz\n\nx1 = np.linspace(-2, 2, 108)\np = trapz(norm.pdf(x1), x1)\nprint('{:.2%} of the values lie between -2 and 2'.format(p))\n\nplt.fill_between(x1, norm.pdf(x1), color='red')\nplt.plot(x, norm.pdf(x), 'k-')\nplt.show()\n")),(0,l.kt)("h2",{id:"numpy\u6570\u7ec4"},"Numpy\u6570\u7ec4"),(0,l.kt)("h3",{id:"\u6570\u7ec4array"},"\u6570\u7ec4\uff1aarray"),(0,l.kt)("p",null,"\u5f88\u591a\u5176\u4ed6\u79d1\u5b66\u8ba1\u7b97\u7684\u7b2c\u4e09\u65b9\u5e93\u90fd\u662f\u4ee5Numpy\u4e3a\u57fa\u7840\u5efa\u7acb\u7684\u3002"),(0,l.kt)("p",null,"Numpy\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u6027\u662f\u5b83\u7684\u6570\u7ec4\u8ba1\u7b97\u3002"),(0,l.kt)("p",null,"\u4f7f\u7528\u524d\u4e00\u5b9a\u8981\u5148\u5bfc\u5165 Numpy \u5305\uff0c\u5bfc\u5165\u7684\u65b9\u6cd5\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"import numpy\nimport numpy as np\nfrom numpy import *\nfrom numpy import array, sin\n")),(0,l.kt)("p",null,"\u5bfc\u5165numpy\uff0c\u6700\u5e38\u7528\u4e3a\u8fd9\u79cd:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\n")),(0,l.kt)("p",null,"\u5047\u5982\u6211\u4eec\u60f3\u5c06\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u589e\u52a01\uff0c\u4f46\u5217\u8868\u4e0d\u652f\u6301\u8fd9\u6837\u7684\u64cd\u4f5c\uff08\u62a5\u9519\uff09\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = [1, 2]\n\n# a + 1 # \u62a5\u9519\n")),(0,l.kt)("p",null,"\u4f7f\u7528numpy.array\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.array(a)\na  # [1 2]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b = a + 1\nb  # array([2,3])\n")),(0,l.kt)("p",null,"\u4e0e\u53e6\u4e00\u4e2a array \u76f8\u52a0\uff0c\u5f97\u5230\u5bf9\u5e94\u5143\u7d20\u76f8\u52a0\u7684\u7ed3\u679c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"c = a + b\nprint(c)  # array([3,5])\n\n# \u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\uff1a\nprint(a * b)  # [2 6]\n\n# \u5bf9\u5e94\u5143\u7d20\u4e58\u65b9\uff1a\nprint(a ** b)  # [1 8]\n")),(0,l.kt)("h4",{id:"\u6570\u7ec4\u7684\u5408\u5e76"},"\u6570\u7ec4\u7684\u5408\u5e76"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\n\na = np.array([[1, 2], [3, 4]])\nb = np.arange(2) # np.array([0, 1])\nprint(a, b)\n'''[[1 2]\n [3 4]] [0 1]'''\n\n# \u6b63\u786e\u7684\u505a\u6cd5\u662f\uff1a\nnp.append(a, b) # array([1, 2, 3, 4, 0, 1])\n\n# \u9519\u8bef\u7684\u505a\u6cd5\u662f\uff1a\nprint(list(a)+ list(b)) # [array([1, 2]), array([3, 4]), 0, 1]\n")),(0,l.kt)("h4",{id:"\u63d0\u53d6\u6570\u7ec4\u4e2d\u7684\u5143\u7d20"},"\u63d0\u53d6\u6570\u7ec4\u4e2d\u7684\u5143\u7d20"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u63d0\u53d6\u7b2c\u4e00\u4e2a\na = np.array([1, 2, 3, 4])\nprint(a[0])  # 1\n\n# \u63d0\u53d6\u524d\u4e24\u4e2a\u5143\u7d20\uff1a\nprint(a[:2])  # [1 2]\n\n# \u6700\u540e\u4e24\u4e2a\u5143\u7d20\nprint(a[-2:])  # [3 4]\n\n# \u76f8\u52a0\uff1a\nprint(a[:2] + a[-2:])  # [4 6]\n")),(0,l.kt)("h4",{id:"\u4fee\u6539\u6570\u7ec4\u5f62\u72b6"},"\u4fee\u6539\u6570\u7ec4\u5f62\u72b6"),(0,l.kt)("p",null,"\u67e5\u770barray\u7684\u5f62\u72b6\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b = a.shape\nb  # (4,)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u4fee\u6539 array \u7684\u5f62\u72b6\uff1a\na.shape = 2, 2\na\n# [[1 2]\n# [3 4]]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u591a\u7ef4\u6570\u7ec4\n# a \u73b0\u5728\u53d8\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u7684\u6570\u7ec4\uff0c\u53ef\u4ee5\u8fdb\u884c\u52a0\u6cd5\uff1a\na + a\n# [[2 4]\n#  [6 8]]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u4e58\u6cd5\u4ecd\u7136\u662f\u5bf9\u5e94\u5143\u7d20\u7684\u4e58\u79ef\uff0c\u5e76\u4e0d\u662f\u6309\u7167\u77e9\u9635\u4e58\u6cd5\u6765\u8ba1\u7b97\uff1a\na * a\n# [[ 1  4]\n# [ 9 16]]\n")),(0,l.kt)("h3",{id:"numpy\u7d22\u5f15index"},"Numpy\u7d22\u5f15\uff1aindex"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\n\n# \u67e5\u770b\u5f62\u72b6\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u8fd9\u4e00\u7ef4\u7684\u5143\u7d20\u6570\u76ee\uff1a\na = np.array([1, 2, 3, 5])\n# 1\u7ef4\u6570\u7ec4\uff0c\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\na.shape\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u67e5\u770b\u5143\u7d20\u6570\u76ee\uff1a\na.size\n")),(0,l.kt)("p",null,"\u4f7f\u7528fill\u65b9\u6cd5\u8bbe\u5b9a\u521d\u59cb\u503c"),(0,l.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528 fill \u65b9\u6cd5\u5c06\u6570\u7ec4\u8bbe\u4e3a\u6307\u5b9a\u503c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(a)\na.fill(-4)\nprint(a)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u5207\u7247\uff0c\u652f\u6301\u8d1f\u7d22\u5f15\uff1a\na = np.array([11, 12, 13, 14, 15])\nprint(a[1:-2])  # [12 13]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u7701\u7565\u53c2\u6570\uff1a\nprint(a[::2])  # [11 13 15]\nprint(a[-2:])  # array([14, 15])\n")),(0,l.kt)("p",null,"\u5047\u8bbe\u6211\u4eec\u8bb0\u5f55\u4e00\u8f86\u6c7d\u8f66\u8868\u76d8\u4e0a\u6bcf\u5929\u663e\u793a\u7684\u91cc\u7a0b\u6570\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"rec = np.array([21000, 21180, 21240, 22100, 22400])\ndist = rec[1:] - rec[:-1] # \u540e\u4e00\u5929\u51cf\u53bb\u524d\u4e00\u5929\u7684\ndist\n")),(0,l.kt)("h4",{id:"\u591a\u7ef4\u6570\u7ec4\u7684\u7d22\u5f15"},"\u591a\u7ef4\u6570\u7ec4\u7684\u7d22\u5f15"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.array([[1, 2, 3], [7, 8, 9]])\na\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u67e5\u770b\u5f62\u72b6\uff1a\nprint(a.shape)\n\n# \u67e5\u770b\u603b\u7684\u5143\u7d20\u4e2a\u6570\uff1a\nprint(a.size)\n\n# \u67e5\u770b\u7ef4\u6570\uff1a\nprint(a.ndim)\n\n# \u5bf9\u4e8e\u4e8c\u7ef4\u6570\u7ec4\uff0c\u53ef\u4ee5\u4f20\u5165\u4e24\u4e2a\u6570\u5b57\u6765\u7d22\u5f15\uff1a\nprint(a[1, 1])\n\n# \u7d22\u5f15\u4e00\u6574\u884c\u5185\u5bb9\uff1a\nprint(a[0])\n")),(0,l.kt)("p",null,"\u591a\u7ef4\u6570\u7ec4\u7684\u590d\u6742\u4e00\u70b9\u7684\u4f8b\u5b50:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.array([[0, 1, 2, 3, 4, 5],\n               [10, 11, 12, 13, 14, 15],\n               [20, 21, 22, 23, 24, 25],\n               [30, 31, 32, 33, 34, 35],\n               [40, 41, 42, 43, 44, 45],\n               [50, 51, 52, 53, 54, 55]])\n\n# \u60f3\u5f97\u5230\u7b2c\u4e00\u884c\u7684\u7b2c 4 \u548c\u7b2c 5 \u4e24\u4e2a\u5143\u7d20\uff1a\nprint(a[0, 3:5])  # [3 4]\n\n# \u5f97\u5230\u6700\u540e\u4e24\u884c\u7684\u6700\u540e\u4e24\u5217\uff1a\nprint(a[4:, 4:])  # [[44 45][54 55]]\n\n# \u5f97\u5230\u7b2c\u4e09\u5217\uff1a\nprint(a[:, 2])  # [ 2 12 22 32 42 52]\n")),(0,l.kt)("p",null,"\u53d6\u51fa3\uff0c5\u884c\u7684\u5947\u6570\u5217\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b = a[2::2, ::2]\nb\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5207\u7247\u5728\u5185\u5b58\u4e2d\u4f7f\u7528\u7684\u662f\u5f15\u7528\u673a\u5236")),(0,l.kt)("p",null,"\u5f15\u7528\u673a\u5236\u610f\u5473\u7740\uff0cPython\u5e76\u6ca1\u6709\u4e3a b \u5206\u914d\u65b0\u7684\u7a7a\u95f4\u6765\u5b58\u50a8\u5b83\u7684\u503c\uff0c\n\u800c\u662f\u8ba9 b \u6307\u5411\u4e86 a \u6240\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\uff0c\u6539\u53d8 b \u4f1a\u6539\u53d8 a \u7684\u503c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.array([0, 1, 2, 3, 4])\nb = a[2:4]\n\nb\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b[0] = 10\n\nb\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u800c\u8fd9\u79cd\u73b0\u8c61\u5728\u5217\u8868\u4e2d\u5e76\u4e0d\u4f1a\u51fa\u73b0\uff1a\nb = a[2:3]\nb[0] = 12\nprint(a)\n\n# \u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528copy()\u65b9\u6cd5\u4ea7\u751f\u4e00\u4e2a\u590d\u5236\uff0c\u8fd9\u4e2a\u590d\u5236\u4f1a\u7533\u8bf7\u65b0\u7684\u5185\u5b58\uff1a\nb = a[2:4].copy()\nb[0] = 10\nprint(a, b)\n")),(0,l.kt)("h4",{id:"\u4e00\u7ef4\u82b1\u5f0f\u7d22\u5f15"},"\u4e00\u7ef4\u82b1\u5f0f\u7d22\u5f15"),(0,l.kt)("p",null,"\u4e0e range \u51fd\u6570\u7c7b\u4f3c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 arange \u51fd\u6570\u6765\u4ea7\u751f\u7b49\u5dee\u6570\u7ec4\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.arange(0, 80, 10)\na\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u82b1\u5f0f\u7d22\u5f15\u9700\u8981\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\uff1a\nindices = [1, 2, -3]\ny = a[indices]\n\ny\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u8fd8\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u6570\u7ec4\u6765\u82b1\u5f0f\u7d22\u5f15\uff1a\nmask = np.array([0, 1, 1, 0, 0, 1, 0, 1], dtype=bool)\na[mask]  # [10 20 50 70]\n")),(0,l.kt)("p",null,"\u9009\u51fa\u4e86\u6240\u6709\u5927\u4e8e0.5\u7684\u503c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from numpy.random import rand\n\na = rand(10)\na\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"mask = a > 0.5\na[mask]\n")),(0,l.kt)("h4",{id:"\u4e0d\u5b8c\u5168\u7d22\u5f15"},"\u201c\u4e0d\u5b8c\u5168\u201d\u7d22\u5f15"),(0,l.kt)("p",null,"\u53ea\u7ed9\u5b9a\u884c\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u6574\u884c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.array([[0, 1, 2, 3, 4, 5],\n           [10, 11, 12, 13, 14, 15],\n           [20, 21, 22, 23, 24, 25],\n           [30, 31, 32, 33, 34, 35],\n           [40, 41, 42, 43, 44, 45],\n           [50, 51, 52, 53, 54, 55]])\nb = a[:3]\nb\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u8fd9\u65f6\u5019\u4e5f\u53ef\u4ee5\u4f7f\u7528\u82b1\u5f0f\u7d22\u5f15\u53d6\u51fa\u7b2c2\uff0c3\uff0c5\u884c\uff1a\ncondition = np.array([0, 1, 1, 0, 1, 0], dtype=bool)\nc = a[condition]\nc\n")),(0,l.kt)("h4",{id:"where\u8bed\u53e5"},"where\u8bed\u53e5"),(0,l.kt)("p",null,"where(array)"),(0,l.kt)("p",null,"where \u51fd\u6570\u4f1a\u8fd4\u56de\u6240\u6709\u975e\u96f6\u5143\u7d20\u7684\u7d22\u5f15\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.array([1, 2, 4, 6])\na > 2  # [False False  True  True]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b = np.where(a > 2)\nb # \u8fd4\u56de\u7684\u662f\u7d22\u5f15\u4f4d\u7f6e\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u6ce8\u610f\u5230 where \u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5143\u7ec4\u3002\nindex = np.where(a > 2)[0]\nprint(index)  # [2 3]\n\n# \u53ef\u4ee5\u76f4\u63a5\u7528 where \u7684\u8fd4\u56de\u503c\u8fdb\u884c\u7d22\u5f15\uff1a\nloc = np.where(a > 2)\nb = a[loc]\nprint(b)  # [4 6]\n")),(0,l.kt)("p",null,"\u8003\u8651\u4e8c\u7ef4\u6570\u7ec4\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.array([[0, 12, 5, 20],\n           [1, 2, 11, 15]])\nloc = np.where(a > 10)\nprint(loc)  # (array([0, 0, 1, 1]), array([1, 3, 2, 3]))\n\n# \u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528\u6765\u7d22\u5f15a\uff1a\nb = a[loc]\nprint(b)  # [12 20 11 15]\n")),(0,l.kt)("p",null,"\u6216\u8005\u53ef\u4ee5\u8fd9\u6837\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"rows, cols = np.where(a > 10)\nprint(rows)\nprint(cols)\nprint(a[rows, cols])\n")),(0,l.kt)("p",null,"\u4f8b\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.arange(20)\na.shape = 5, 4\na\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a > 12\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b = np.where(a > 12)\nb\n# (array([3, 3, 3, 4, 4, 4, 4]), array([1, 2, 3, 0, 1, 2, 3]))\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a[b]  # [13 14 15 16 17 18 19]\n")),(0,l.kt)("h3",{id:"numpy\u65b9\u6cd5"},"Numpy\u65b9\u6cd5"),(0,l.kt)("p",null,"Numpy\u7684\u5e38\u7528\u65b9\u6cd5\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\n\na = np.array([[0, 1, 2, 3], [4, 5, 6, 7]])\na\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for row in a:\n    print(row)\n")),(0,l.kt)("p",null,"\u6240\u6709\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for i in a.flat:\n    print(i)\n")),(0,l.kt)("h4",{id:"\u77e9\u9635\u8f6c\u7f6e"},"\u77e9\u9635\u8f6c\u7f6e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(a)\nprint(a.T)\nprint(a)\nprint(a.shape)  # \u6570\u7ec4\u5f62\u72b6 (m,n,o,...)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(a.size)  # \u6570\u7ec4\u5143\u7d20\u6570\na.resize((4, 2))\nprint(a)\nprint(a.shape)\n")),(0,l.kt)("h4",{id:"squeeze"},"squeeze"),(0,l.kt)("p",null,"\u628ashape\u4e3a1\u7684\u7ef4\u5ea6\u53bb\u6389\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.arange(10).reshape(1,10)\na\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a.shape\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b = np.squeeze(a)\nb\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b.shape\n")),(0,l.kt)("p",null,"\u518d\u4e3e\u4e2a\u591a\u7ef4\u7684\u4f8b\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.arange(10).reshape(1, 2, 5)\nprint(a)\n\nprint(a.shape)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b = np.squeeze(a)\nb.shape\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a.shape\n")),(0,l.kt)("h4",{id:"\u590d\u5236"},"\u590d\u5236"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.array([[0, 1, 2, 3], [4, 5, 6, 7]])\nb = a.copy()\nb[0][0] = -1\n\nb\n")),(0,l.kt)("h4",{id:"\u586b\u5145"},"\u586b\u5145"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b.fill(9)\nb\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u8f6c\u5316\u4e3a\u5217\u8868\uff1a\na.tolist()\n")),(0,l.kt)("h4",{id:"\u590d\u6570"},"\u590d\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u5b9e\u90e8\uff1a\nb = np.array([1 + 2j, 3 + 4j, 5 + 6j])\nc = b.real\nprint(c)\n\n# \u865a\u90e8\uff1a\nd = b.imag\nprint(d)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u5171\u8f6d\uff1a\nprint(b.conj())\n\n# \u4fdd\u5b58\u6210\u6587\u672c\uff1a\na.dump(\"file.txt\")\n\n\nimport os\nos.path.exists('file.txt')\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"with open('file.txt', 'rb') as f:\n    m = f.read()\nm\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u5b57\u7b26\u4e32\uff1a\na.dumps()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u5199\u5165\u6587\u4ef6\na.tofile('foo.csv', sep=',', format=\"%s\")\nos.path.exists('foo.csv')\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"with open('foo.csv') as f:\n    m = f.read()\nm\n")),(0,l.kt)("h4",{id:"\u6392\u5e8f"},"\u6392\u5e8f"),(0,l.kt)("p",null,"\u975e\u96f6\u5143\u7d20\u7684\u7d22\u5f15\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b = a.nonzero()\na\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u6392\u5e8f\uff1a\nb = np.array([3, 2, 7, 4, 1])\nb.sort()\nb\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u6392\u5e8f\u7684\u7d22\u5f15\u4f4d\u7f6e\uff1a\nb = np.array([2, 3, 1])\nb.argsort(axis=-1)  # array([2, 0, 1])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u5c06 b \u63d2\u5165 a \u4e2d\u7684\u7d22\u5f15\uff0c\u4f7f\u5f97 a \u4fdd\u6301\u6709\u5e8f\uff1a\na = np.array([1, 3, 4, 6])\nb = np.array([0, 2, 5])\nprint(a.searchsorted(b))\n")),(0,l.kt)("h3",{id:"\u5143\u7d20\u7684\u6570\u5b66\u64cd\u4f5c"},"\u5143\u7d20\u7684\u6570\u5b66\u64cd\u4f5c"),(0,l.kt)("p",null,"clip\uff0c\u9650\u5236\u5728\u4e00\u5b9a\u8303\u56f4\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.array([[4, 1, 3], [2, 1, 5]])\na.clip(0, 2)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u8fd1\u4f3c\uff1a\na = np.array([1.344, 2.449, 2.558])\nb = a.round(decimals=2)\nb  # [ 1.34  2.45  2.56]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u662f\u5426\u5168\u90e8\u975e\u96f6\uff1a\nprint(a.all())\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import os\n\nos.remove('foo.csv')\nos.remove('file.txt')\n")),(0,l.kt)("h4",{id:"\u6570\u7ec4\u4e0e\u5b57\u7b26\u4e32\u7684\u8f6c\u6362"},"\u6570\u7ec4\u4e0e\u5b57\u7b26\u4e32\u7684\u8f6c\u6362"),(0,l.kt)("p",null,"tobytes \u51fd\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.array([[1, 2], [3, 4]], dtype=np.uint8)\nprint(a)\nprint(a.tobytes())\n")),(0,l.kt)("p",null,"frombuffer \u51fd\u6570"),(0,l.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528 frombuffer \u51fd\u6570\u4ece\u5b57\u7b26\u4e32\u4e2d\u8bfb\u51fa\u6570\u636e\uff0c\u4e0d\u8fc7\u8981\u6307\u5b9a\u7c7b\u578b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"s = a.tobytes()\nb = np.frombuffer(s, dtype=np.uint8)\nb\n")),(0,l.kt)("p",null,"\u6b64\u65f6\uff0c\u8fd4\u56de\u7684\u6570\u7ec4\u662f\u4e00\u7ef4\u7684\uff0c\u9700\u8981\u91cd\u65b0\u8bbe\u5b9a\u7ef4\u5ea6\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"b.shape = 2, 2\nb\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u53ef\u4ee5\u4f7f\u7528reshape\uff1a\nb = np.frombuffer(s, dtype=np.uint8).reshape(2, 2)\nb\n")),(0,l.kt)("h3",{id:"\u6587\u672c\u4e2d\u8bfb\u53d6\u6570\u7ec4"},"\u6587\u672c\u4e2d\u8bfb\u53d6\u6570\u7ec4"),(0,l.kt)("p",null,"\u5bf9\u4e8e\u8bfb\u6587\u672c\u6587\u4ef6\uff0c\u63a8\u8350\u4f7f\u7528:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"loadtxt"),(0,l.kt)("li",{parentName:"ul"},"genfromtxt"),(0,l.kt)("li",{parentName:"ul"},"savetxt")),(0,l.kt)("p",null,"\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u6587\u672c\u6587\u4ef6\uff0c\u63a8\u8350\u4f7f\u7528"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"save"),(0,l.kt)("li",{parentName:"ul"},"load"),(0,l.kt)("li",{parentName:"ul"},"savez")),(0,l.kt)("h4",{id:"loadtxt-\u51fd\u6570"},"loadtxt \u51fd\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"loadtxt(fname, dtype=<type 'float'>,\n        comments='#', delimiter=None,\n        converters=None, skiprows=0,\n        usecols=None, unpack=False, ndmin=0)     \n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"loadtxt \u6709\u5f88\u591a\u53ef\u9009\u53c2\u6570\uff0c\u5176\u4e2d delimiter \u5c31\u662f\u521a\u624d\u7528\u5230\u7684\u5206\u9694\u7b26\u53c2\u6570\u3002"),(0,l.kt)("li",{parentName:"ul"},"skiprows \u53c2\u6570\u8868\u793a\u5ffd\u7565\u5f00\u5934\u7684\u884c\u6570\uff0c\u53ef\u4ee5\u7528\u6765\u8bfb\u5199\u542b\u6709\u6807\u9898\u7684\u6587\u672c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'data_file = "../data/numpy/data.txt"\nc = np.loadtxt(data_file, dtype=int)\nc\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"c.shape\n")),(0,l.kt)("h4",{id:"genfromtxt"},"genfromtxt"),(0,l.kt)("p",null,"genfromtxt \u51fd\u6570\u529f\u80fd\u66f4\u4e3a\u5168\u9762\uff0c\n\u80fd\u5904\u7406\u66f4\u591a\u7684\u60c5\u51b5\uff0c\u4f46\u76f8\u5e94\u7684\u901f\u5ea6\u548c\u6548\u7387\u4f1a\u6162\u4e00\u4e9b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"help(np.genfromtxt)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"g = np.genfromtxt(data_file)\ng\n")),(0,l.kt)("p",null,"\u5f53\u7136\uff0c\u8fd8\u6709\u5f88\u7b28\u7684\u5199\u6cd5\uff1a"),(0,l.kt)("p",null,"\u9996\u5148\u5c06\u6570\u636e\u8f6c\u5316\u6210\u4e00\u4e2a\u5217\u8868\u7ec4\u6210\u7684\u5217\u8868\uff0c\u518d\u5c06\u8fd9\u4e2a\u5217\u8868\u8f6c\u6362\u4e3a\u6570\u7ec4\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data = []\n\nwith open(data_file) as f:\n    # \u6bcf\u6b21\u8bfb\u4e00\u884c\n    for line in f:\n        fileds = line.split()\n        row_data = [float(x) for x in fileds]\n        data.append(row_data)\n\ndata = np.array(data)\ndata\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# loadtxt \u7684\u66f4\u591a\u7279\u6027\nsp_file = '../data/numpy/special_data.txt'\ndata = np.loadtxt(sp_file,\n                  dtype=int,\n                  comments='%',  # \u767e\u5206\u53f7\u4e3a\u6ce8\u91ca\u7b26\n                  delimiter=',',  # \u9017\u53f7\u5206\u5272\n                  skiprows=1,  # \u5ffd\u7565\u7b2c\u4e00\u884c\n                  usecols=(0, 1, 2, 4))  # \u6307\u5b9a\u4f7f\u7528\u54ea\u51e0\u5217\u6570\u636e\ndata\n")),(0,l.kt)("h4",{id:"loadtxt-\u81ea\u5b9a\u4e49\u8f6c\u6362\u65b9\u6cd5"},"loadtxt \u81ea\u5b9a\u4e49\u8f6c\u6362\u65b9\u6cd5"),(0,l.kt)("p",null,"loadtxt\u8fd4\u56de\u7684\u503c\u4e3a\u5b57\u8282\u5b57\u7b26\u4e32bytes, \u5bf9\u5b57\u7b26\u4e32\u89e3\u7801\u7528\u51fd\u6570decode(\u2018asii\u2019)\uff0c\u53d8\u6210str\u683c\u5f0f\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import datetime\n\n\ndef date_converter(s):\n    return datetime.datetime.strptime(s.decode('ascii'), \"%Y-%m-%d\")\n\ndate_file = '../data/numpy/datetime_data.txt'\ndata = np.loadtxt(date_file,\n                  dtype=object,  # \u6570\u636e\u7c7b\u578b\u4e3a\u5bf9\u8c61\n                  converters={0: date_converter,  # \u7b2c\u4e00\u5217\u4f7f\u7528\u81ea\u5b9a\u4e49\u8f6c\u6362\u65b9\u6cd5\n                              1: float,  # \u7b2c\u4e8c\u7b2c\u4e09\u5217\u4f7f\u7528\u6d6e\u70b9\u6570\u8f6c\u6362\n                              2: float})\n\ndata\n")),(0,l.kt)("h4",{id:"\u5c06\u6570\u7ec4\u5199\u5165\u6587\u4ef6"},"\u5c06\u6570\u7ec4\u5199\u5165\u6587\u4ef6"),(0,l.kt)("p",null,"savetxt \u53ef\u4ee5\u5c06\u6570\u7ec4\u5199\u5165\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u7684\u5f62\u5f0f\u4fdd\u5b58\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.array([[1, 2, 3], [5, 6, 7]])\nnp.savetxt('out.txt', a)\n\n# \u53ef\u4ee5\u7528\u7c7b\u4f3cprintf \u7684\u65b9\u5f0f\u6307\u5b9a\u8f93\u51fa\u7684\u683c\u5f0f\uff1a\na = np.array([[1, 2, 3], [5, 6, 7]])\nprint(a.shape)\n\nnp.savetxt('out_fmt.txt', a, fmt=['%d'] * a.shape[1], newline='\\n')\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"with open('out_fmt.txt') as f:\n    for line in f:\n        print(line)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"m = zip([1, 2, 3, 4, 5], ['a', 'b', 'c', 'd', 'e'])\nm = list(m)\n\nz = np.array(m)\nprint(z)\n\nnp.savetxt('out_str_fmt.txt', z, fmt=['%s'] * z.shape[1])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import os\nos.remove('out.txt')\nos.remove('out_fmt.txt')\nos.remove('out_str_fmt.txt')\n")),(0,l.kt)("h3",{id:"numpy-\u4e8c\u8fdb\u5236\u683c\u5f0f"},"Numpy \u4e8c\u8fdb\u5236\u683c\u5f0f"),(0,l.kt)("p",null,"\u4fdd\u5b58\u7684\u65b9\u6cd5\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"save(file, arr) \u4fdd\u5b58\u5355\u4e2a\u6570\u7ec4\uff0c.npy \u683c\u5f0f"),(0,l.kt)("li",{parentName:"ul"},"savez(file, *args, **kwds) \u4fdd\u5b58\u591a\u4e2a\u6570\u7ec4\uff0c\u65e0\u538b\u7f29\u7684 .npz \u683c\u5f0f"),(0,l.kt)("li",{parentName:"ul"},"savez_compressed(file, *args, **kwds) \u4fdd\u5b58\u591a\u4e2a\u6570\u7ec4\uff0c\u6709\u538b\u7f29\u7684 .npz \u683c\u5f0f")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.array([[1, 2], [3, 4]])\nnp.save('out.npy', a)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u4e8c\u8fdb\u5236\u4e0e\u6587\u672c\u5927\u5c0f\u6bd4\u8f83\na = np.arange(10000.)\nnp.savetxt('a.txt', a)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u67e5\u770b\u5927\u5c0f\uff1a\nimport os\n\nprint(os.stat('a.txt').st_size)\n\n# \u4fdd\u5b58\u4e3a\u4e8c\u8fdb\u5236\nnp.save('a.npy', a)\nprint(os.stat('a.npy').st_size)\n")),(0,l.kt)("p",null,"\u4e8c\u8fdb\u5236\u6587\u4ef6\u5927\u7ea6\u662f\u6587\u672c\u6587\u4ef6\u7684\u4e09\u5206\u4e4b\u4e00\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u4fdd\u5b58\u591a\u4e2a\u6570\u7ec4\na = np.array([[1, 2], [3, 4]])\nb = np.arange(1000)\nprint(a)\nprint(b)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.savez('ab.npz', a=a, b=b)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# \u52a0\u8f7d\u6570\u636e\nab = np.load('ab.npz')\nprint(os.stat('ab.npz').st_size)  # file size\nprint(ab.keys())\nprint(list(ab.keys()))\n\nprint(ab['a'].shape)\nprint(ab['b'].shape)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.savez_compressed('ab_compressed.npz', a=a, b=b)\nprint(os.stat('ab_compressed.npz').st_size)  # file size\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"os.remove('out.npy')\nos.remove('a.txt')\nos.remove('a.npy')\nos.remove('ab.npz')\nos.remove('ab_compressed.npz')\n")),(0,l.kt)("h3",{id:"\u751f\u6210\u6570\u7ec4\u7684\u51fd\u6570"},"\u751f\u6210\u6570\u7ec4\u7684\u51fd\u6570"),(0,l.kt)("h4",{id:"arange-\u751f\u6210\u6570\u7ec4startstop"},"arange \u751f\u6210\u6570\u7ec4\uff0c[start,stop)"),(0,l.kt)("p",null,"arange(start, stop=None, step=1, dtype=None)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.arange(5)  # [0 1 2 3 4]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = np.arange(0, 2 * np.pi, np.pi / 4)\na\n")),(0,l.kt)("h4",{id:"linspace"},"linspace"),(0,l.kt)("p",null,"linspace(start,stop,N)"),(0,l.kt)("p",null,"\u4ea7\u751fN\u4e2a\u7b49\u8ddd\u5206\u5e03\u5728","[start,stop]","\u95f4\u7684\u5143\u7d20\u7ec4\u6210\u7684\u6570\u7ec4\uff0c\u5305\u62ecstart,stop"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.linspace(0, 1, 5)  # [ 0.    0.25  0.5   0.75  1.  ]\n")),(0,l.kt)("h4",{id:"logspace"},"logspace"),(0,l.kt)("p",null,"logspace(start, stop, N)"),(0,l.kt)("p",null,"\u4ea7\u751f N \u4e2a\u5bf9\u6570\u7b49\u8ddd\u5206\u5e03\u7684\u6570\u7ec4\uff0c\u9ed8\u8ba4\u4ee510\u4e3a\u5e95\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"np.logspace(0, 1, 5)\n")),(0,l.kt)("p",null,"\u4ea7\u751f\u7684\u503c\u4e3a$\\left","[10^0, 10^{0.25},10^{0.5},10^{0.75},10^1\\right]","$\u3002"),(0,l.kt)("h4",{id:"meshgrid"},"meshgrid"),(0,l.kt)("p",null,"\u4e8c\u7ef4\u5e73\u9762\u4e2d\u751f\u6210\u4e00\u4e2a\u7f51\u683c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"x_ticks = np.linspace(-1, 1, 5)\ny_ticks = np.linspace(-1, 1, 5)\nx, y = np.meshgrid(x_ticks, y_ticks)\nprint(x_ticks)\nprint(x)\n")),(0,l.kt)("h4",{id:"\u56fe\u4f8b"},"\u56fe\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import matplotlib.pyplot as plt\nfrom matplotlib import cm\n\n\ndef f(x, y):\n    # sinc \u51fd\u6570\n    r = np.sqrt(x ** 2 + y ** 2)\n    result = np.sin(r) / r\n    result[r == 0] = 1.0\n    return result\n\n\nx_ticks = np.linspace(-10, 10, 51)\ny_ticks = np.linspace(-10, 10, 51)\n\nx, y = np.meshgrid(x_ticks, y_ticks, sparse=True)\nprint(x)  # x, y \u4e2d\u6709\u5f88\u591a\u5197\u4f59\u7684\u5143\u7d20\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e86\u4e00\u4e2a sparse \u7684\u9009\u9879\u53bb\u5197\u4f59\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"z = f(x, y)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"fig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(x, y, z,\n                rstride=1, cstride=1,\n                cmap=cm.YlGnBu_r)\nax.set_xlabel('x')\nax.set_ylabel('y')\nax.set_zlabel('z')\nplt.show()\n")),(0,l.kt)("h3",{id:"\u5185\u5b58\u6620\u5c04"},"\u5185\u5b58\u6620\u5c04"),(0,l.kt)("p",null,"Numpy \u6709\u5bf9\u5185\u5b58\u6620\u5c04\u7684\u652f\u6301\u3002"),(0,l.kt)("p",null,"\u5185\u5b58\u6620\u5c04\u4e5f\u662f\u4e00\u79cd\u5904\u7406\u6587\u4ef6\u7684\u65b9\u6cd5\uff0c\u4e3b\u8981\u7684\u51fd\u6570\u6709\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"memmap"),(0,l.kt)("li",{parentName:"ul"},"frombuffer"),(0,l.kt)("li",{parentName:"ul"},"ndarray constructor")),(0,l.kt)("p",null,"\u4f7f\u7528\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u5904\u7406\u5b58\u50a8\u4e8e\u78c1\u76d8\u4e0a\u7684\u6587\u4ef6\u65f6\uff0c\u5c06\u4e0d\u5fc5\u518d\u5bf9\u6587\u4ef6\u6267\u884cI/O\u64cd\u4f5c\uff0c\n\u4f7f\u5f97\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u5728\u5904\u7406\u5927\u6570\u636e\u91cf\u7684\u6587\u4ef6\u65f6\u80fd\u8d77\u5230\u76f8\u5f53\u91cd\u8981\u7684\u4f5c\u7528\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"memmap(filename,\n       dtype=uint8,\n       mode='r+'\n       offset=0\n       shape=None\n       order=0)\n")),(0,l.kt)("p",null,"mode \u8868\u793a\u6587\u4ef6\u88ab\u6253\u5f00\u7684\u7c7b\u578b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"r \u53ea\u8bfb"),(0,l.kt)("li",{parentName:"ul"},"c \u590d\u5236+\u5199\uff0c\u4f46\u662f\u4e0d\u6539\u53d8\u6e90\u6587\u4ef6"),(0,l.kt)("li",{parentName:"ul"},"r+ \u8bfb\u5199\uff0c\u4f7f\u7528 flush \u65b9\u6cd5\u4f1a\u5c06\u66f4\u6539\u7684\u5185\u5bb9\u5199\u5165\u6587\u4ef6"),(0,l.kt)("li",{parentName:"ul"},"w+ \u5199\uff0c\u5982\u679c\u5b58\u5728\u5219\u5c06\u6570\u636e\u8986\u76d6")),(0,l.kt)("h2",{id:"pandas\u6570\u636e\u5206\u6790"},"Pandas\u6570\u636e\u5206\u6790"),(0,l.kt)("p",null,"Pandas\u662fPython\u7684\u4e00\u4e2a\u7528\u4e8e\u6570\u636e\u5206\u6790\u7684\u5e93\uff1a ",(0,l.kt)("a",{parentName:"p",href:"http://pandas.pydata.org"},"http://pandas.pydata.org")),(0,l.kt)("p",null,"API\u901f\u67e5\uff1a",(0,l.kt)("a",{parentName:"p",href:"http://pandas.pydata.org/pandas-docs/stable/api.html"},"http://pandas.pydata.org/pandas-docs/stable/api.html")),(0,l.kt)("p",null,"\u57fa\u4e8eNumPy,SciPy\u7684\u529f\u80fd\uff0c\u5728\u5176\u4e0a\u8865\u5145\u4e86\u5927\u91cf\u7684\u6570\u636e\u64cd\u4f5c\uff08Data Manipulation\uff09\u529f\u80fd\u3002"),(0,l.kt)("p",null,"\u7edf\u8ba1\u3001\u5206\u7ec4\u3001\u6392\u5e8f\u3001\u900f\u89c6\u8868\u81ea\u7531\u8f6c\u6362\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u5f88\u719f\u6089\u7ed3\u6784\u5316\u6570\u636e\u5e93\uff08RDBMS\uff09\u4e0eExcel\u7684\u529f\u80fd\uff0c\u5c31\u4f1a\u77e5\u9053Pandas\u6709\u8fc7\u4e4b\u800c\u65e0\u4e0d\u53ca\uff01"),(0,l.kt)("h3",{id:"\u4e3a\u4ec0\u4e48\u662fpandas"},"\u4e3a\u4ec0\u4e48\u662fPandas"),(0,l.kt)("h4",{id:"\u5feb\u901f\u7684\u8bc6\u522b\u7ed3\u6784\u5316\u6570\u636e"},"\u5feb\u901f\u7684\u8bc6\u522b\u7ed3\u6784\u5316\u6570\u636e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\nimport scipy as sp\nimport pandas as pd\n\niris_file = './iris.data'\n\ndata = pd.read_csv(iris_file, header=None, encoding='utf-8')\ndata\n")),(0,l.kt)("h4",{id:"\u5feb\u901f\u7684\u64cd\u4f5c\u5143\u6570\u636e"},"\u5feb\u901f\u7684\u64cd\u4f5c\u5143\u6570\u636e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"cnames = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'class']\ndata.columns = cnames\ndata\n")),(0,l.kt)("h4",{id:"\u5feb\u901f\u8fc7\u6ee4"},"\u5feb\u901f\u8fc7\u6ee4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data[data['petal_width'] == data.petal_width.max()]\n")),(0,l.kt)("h4",{id:"\u5feb\u901f\u5207\u7247"},"\u5feb\u901f\u5207\u7247"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data.iloc[::30, :2]\n")),(0,l.kt)("h4",{id:"\u5feb\u901f\u7edf\u8ba1"},"\u5feb\u901f\u7edf\u8ba1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data['class'].value_counts()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for x in range(4):\n    s = data.iloc[:,x]\n    print('{0:<12}'.format(s.name), \" Statistics: \",\n    '{0:>5}  {1:>5}  {2:>5}  {3:>5}'.format(s.max(), s.min(), round(s.mean(),2),round(s.std(),2)))\n")),(0,l.kt)("h4",{id:"\u5feb\u901fmapreduce"},"\u5feb\u901f\u201cMapReduce\u201d"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"slogs = lambda x:np.log(x)*x\nentpy = lambda x:np.exp((slogs(x.sum())-x.map(slogs).sum())/x.sum())\ndata.groupby('class').agg(entpy)\n")),(0,l.kt)("p",null,"Pandas\u7684\u91cd\u8981\u6570\u636e\u7c7b\u578b"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"DataFrame(\u4e8c\u7ef4\u8868)"),(0,l.kt)("li",{parentName:"ul"},"Series(\u4e00\u7ef4\u5e8f\u5217)"),(0,l.kt)("li",{parentName:"ul"},"Index(\u884c\u7d22\u5f15\uff0c\u884c\u7ea7\u5143\u6570\u636e)")),(0,l.kt)("h3",{id:"11-seriespandas\u7684\u957f\u67aa\u6570\u636e\u8868\u4e2d\u7684\u4e00\u5217\u6216\u4e00\u884c\u89c2\u6d4b\u5411\u91cf\u4e00\u7ef4\u6570\u7ec4"},"1.1 Series\uff1apandas\u7684\u957f\u67aa(\u6570\u636e\u8868\u4e2d\u7684\u4e00\u5217\u6216\u4e00\u884c,\u89c2\u6d4b\u5411\u91cf,\u4e00\u7ef4\u6570\u7ec4...)"),(0,l.kt)("p",null,"\u6570\u636e\u4e16\u754c\u4e2d\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u4e2a\u4f53\u7684\u5168\u9762\u89c2\u6d4b\uff0c\u6216\u8005\u5bf9\u4e8e\u4efb\u610f\u4e00\u7ec4\u4e2a\u4f53\u67d0\u4e00\u5c5e\u6027\u7684\u89c2\u6d4b\uff0c\u5168\u90e8\u53ef\u4ee5\u62bd\u8c61\u4e3aSeries\u7684\u6982\u5ff5\u3002"),(0,l.kt)("p",null,"\u7528\u503c\u6784\u5efa\u4e00\u4e2aSeries\uff1a"),(0,l.kt)("p",null,"\u7531\u9ed8\u8ba4index\u548cvalues\u7ec4\u6210\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series1 = pd.Series(np.random.randn(4))\nseries1\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(type(series1))\nprint(series1.index)\nprint(series1.values)\n")),(0,l.kt)("h4",{id:"series\u652f\u6301\u8fc7\u6ee4\u7684\u539f\u7406\u5c31\u5982\u540cnumpy"},"Series\u652f\u6301\u8fc7\u6ee4\u7684\u539f\u7406\u5c31\u5982\u540cNumPy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series1 > 0\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series1[series1 > 0]\n")),(0,l.kt)("h4",{id:"\u5f53\u7136\u4e5f\u652f\u6301broadcasting"},"\u5f53\u7136\u4e5f\u652f\u6301Broadcasting"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series1*2\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series1+5\n")),(0,l.kt)("h4",{id:"\u4ee5\u53cauniversal-function"},"\u4ee5\u53caUniversal Function"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(series1)\nprint(np.exp(series1))\n\n#NumPy Universal Function\nf_np = np.frompyfunc(lambda x:np.exp(x*2 + 5), 1, 1)\nf_np(series1)\n")),(0,l.kt)("p",null,"\u5728\u5e8f\u5217\u4e0a\u5c31\u4f7f\u7528\u884c\u6807\uff0c\u800c\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a2\u5217\u7684\u6570\u636e\u8868\uff0c\u80fd\u591f\u8f7b\u677e\u8fa8\u522b\u54ea\u91cc\u662f\u6570\u636e\uff0c\u54ea\u91cc\u662f\u5143\u6570\u636e\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series2 = pd.Series(series1.values, index=['norm_' + str(i) for i in range(4)])\nprint(series2, type(series2))\nprint(series2.index)\nprint(type(series2.index))\nprint(series2.values)\nseries2\n")),(0,l.kt)("p",null,"\u867d\u7136\u884c\u662f\u6709\u987a\u5e8f\u7684\uff0c\u4f46\u662f\u4ecd\u7136\u80fd\u591f\u901a\u8fc7\u884c\u7ea7\u7684index\u6765\u8bbf\u95ee\u5230\u6570\u636e\uff1a"),(0,l.kt)("p",null,"\uff08\u5f53\u7136\u4e5f\u4e0d\u5c3d\u7136\u50cfOrdered Dict\uff0c\u56e0\u4e3a\u884c\u7d22\u5f15\u751a\u81f3\u53ef\u4ee5\u91cd\u590d\uff0c\u4e0d\u63a8\u8350\u91cd\u590d\u7684\u884c\u7d22\u5f15\u4e0d\u4ee3\u8868\u4e0d\u80fd\u7528\uff09"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series2[['norm_0','norm_3']]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"'norm_0' in series2\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"'norm_6' in series2\n")),(0,l.kt)("p",null,"\u9ed8\u8ba4\u884c\u7d22\u5f15\u5c31\u50cf\u884c\u53f7\u4e00\u6837\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series1.index\n")),(0,l.kt)("p",null,"\u4eceKey\u4e0d\u91cd\u590d\u7684Ordered Dict\u6216\u8005\u4eceDict\u6765\u5b9a\u4e49Series\u5c31\u4e0d\u9700\u8981\u62c5\u5fc3\u884c\u7d22\u5f15\u91cd\u590d\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'s_dict = {"Japan":"Tokyo", "Korea":"Seoul", "China":"Beijing"}\nseries3 = pd.Series(s_dict)\n\nprint(series3.index)\nprint(series3.values)\nseries3\n')),(0,l.kt)("p",null,"\u4e0eDict\u533a\u522b\u4e00\uff1a \u6709\u5e8f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'lst = ["Japan", "China", "Singapore", "Korea"]\nseries4 = pd.Series(s_dict, index =lst)\nseries4\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(series4.values)\nprint(series4.index)\nprint(series4.isnull())\nprint(series4.notnull())\n")),(0,l.kt)("p",null,"\u4e0eDict\u533a\u522b\u4e8c\uff1a index\u5185\u503c\u53ef\u4ee5\u91cd\u590d\uff0c\u5c3d\u7ba1\u4e0d\u63a8\u8350\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"lst = ['A', 'B', 'B', 'C']\nseries5 = pd.Series(series1.values, index=lst)\nseries5\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series5[['B', 'A']]\n")),(0,l.kt)("p",null,"\u6574\u4e2a\u5e8f\u5217\u7ea7\u522b\u7684\u5143\u6570\u636e\u4fe1\u606f\uff1aname"),(0,l.kt)("p",null,"\u5f53\u6570\u636e\u5e8f\u5217\u4ee5\u53caindex\u672c\u8eab\u6709\u4e86\u540d\u5b57\uff0c\u5c31\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7684\u8fdb\u884c\u540e\u7eed\u7684\u6570\u636e\u5173\u8054\u5566\uff01"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series4.name\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series4.index.name\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'series4.name = "Capital Series"\nseries4.index.name = "Nation"\nseries4\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.DataFrame(series4)\n")),(0,l.kt)("h3",{id:"12-dataframepandas\u7684\u6218\u9524\u6570\u636e\u8868\u4e8c\u7ef4\u6570\u7ec4"},"1.2 DataFrame\uff1apandas\u7684\u6218\u9524(\u6570\u636e\u8868\uff0c\u4e8c\u7ef4\u6570\u7ec4)"),(0,l.kt)("p",null,"Series\u7684\u6709\u5e8f\u96c6\u5408\uff0c\u5c31\u50cfR\u7684DataFrame\u4e00\u6837\u65b9\u4fbf\u3002"),(0,l.kt)("p",null,"\u4ed4\u7ec6\u60f3\u60f3\uff0c\u7edd\u5927\u90e8\u5206\u7684\u6570\u636e\u5f62\u5f0f\u90fd\u53ef\u4ee5\u8868\u73b0\u4e3aDataFrame\u3002"),(0,l.kt)("h4",{id:"\u4ecenumpy\u4e8c\u7ef4\u6570\u7ec4\u4ece\u6587\u4ef6\u6216\u8005\u4ece\u6570\u636e\u5e93\u5b9a\u4e49\u6570\u636e\u867d\u597d\u52ff\u5fd8\u5217\u540d"},"\u4eceNumpy\u4e8c\u7ef4\u6570\u7ec4\u3001\u4ece\u6587\u4ef6\u6216\u8005\u4ece\u6570\u636e\u5e93\u5b9a\u4e49\uff1a\u6570\u636e\u867d\u597d\uff0c\u52ff\u5fd8\u5217\u540d"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_np = np.asarray([('Japan', 'Tokyo', 4000),\n                      ('Korea', 'Seoul', 1300),\n                      ('China', 'Beijing', 9100)])\ndf1 = pd.DataFrame(data_np, columns=['nation','capital','GDP'])\ndf1\n")),(0,l.kt)("h4",{id:"\u7b49\u957f\u7684\u5217\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u5b57\u5178\u91ccjson\u5f88\u4e0d\u5e78\u5b57\u5178key\u662f\u65e0\u5e8f\u7684"},"\u7b49\u957f\u7684\u5217\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u5b57\u5178\u91cc\uff08JSON\uff09\uff1a\u5f88\u4e0d\u5e78\uff0c\u5b57\u5178key\u662f\u65e0\u5e8f\u7684"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_dict = {'nation': ['Japan', 'Korea', 'China'],\n             'capital': ['Tokyo', 'Seoul', 'Beijing'],\n             'GDP': [4900, 1300, 9100]}\ndf2 = pd.DataFrame(data_dict)\ndf2\n")),(0,l.kt)("h4",{id:"\u4ece\u53e6\u4e00\u4e2adataframe\u5b9a\u4e49dataframe\u554a\u5f3a\u8feb\u75c7\u72af\u4e86"},"\u4ece\u53e6\u4e00\u4e2aDataFrame\u5b9a\u4e49DataFrame\uff1a\u554a\uff0c\u5f3a\u8feb\u75c7\u72af\u4e86"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df21 = pd.DataFrame(df2, columns=['nation', 'capital', 'GDP'])\ndf21\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22 = pd.DataFrame(df2, columns=['nation', 'capital', 'GDP'], index = [2, 0, 1])\ndf22\n")),(0,l.kt)("h4",{id:"\u4ecedataframe\u4e2d\u53d6\u51fa\u5217\u4e24\u79cd\u65b9\u6cd5\u4e0ejavascript\u5b8c\u5168\u4e00\u81f4"},"\u4eceDataFrame\u4e2d\u53d6\u51fa\u5217\uff1f\u4e24\u79cd\u65b9\u6cd5\uff08\u4e0eJavaScript\u5b8c\u5168\u4e00\u81f4\uff01\uff09"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"'.'\u7684\u5199\u6cd5\u5bb9\u6613\u4e0e\u5176\u4ed6\u9884\u7559\u5173\u952e\u5b57\u4ea7\u751f\u51b2\u7a81"),(0,l.kt)("li",{parentName:"ul"},"'","[ ]","'\u7684\u5199\u6cd5\u6700\u5b89\u5168\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(df22.nation)\nprint(df22.capital)\nprint(df22['GDP'])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22['capital']\n")),(0,l.kt)("h4",{id:"\u4ecedataframe\u4e2d\u53d6\u51fa\u884c\u81f3\u5c11\u4e24\u79cd\u65b9\u6cd5"},"\u4eceDataFrame\u4e2d\u53d6\u51fa\u884c\uff1f\uff08\u81f3\u5c11\uff09\u4e24\u79cd\u65b9\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22[0:1] # \u7ed9\u51fa\u7684\u5b9e\u9645\u662fDataFrame\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22.iloc[0] # \u901a\u8fc7\u5bf9\u5e94Index\u7ed9\u51fa\u884c\n")),(0,l.kt)("h4",{id:"\u50cfnumpy\u5207\u7247\u4e00\u6837\u7684\u7ec8\u6781\u62db\u5f0filoc"},"\u50cfNumpy\u5207\u7247\u4e00\u6837\u7684\u7ec8\u6781\u62db\u5f0f\uff1ailoc"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22.iloc[0,:]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22.iloc[:,0]\n")),(0,l.kt)("h4",{id:"\u542c\u8bf4\u4f60\u4ecetable\u5730\u72f1\u6765\u5927\u718a\u732b\u7b11\u4e86"},"\u542c\u8bf4\u4f60\u4eceTable\u5730\u72f1\u6765\uff0c\u5927\u718a\u732b\u7b11\u4e86"),(0,l.kt)("p",null,'\u7136\u800c\u52a8\u6001\u589e\u52a0\u5217\u65e0\u6cd5\u7528"."\u7684\u65b9\u5f0f\u5b8c\u6210\uff0c\u53ea\u80fd\u7528"',"[ ]",'"'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22['population'] = [1600, 130, 55]\ndf22['region'] = 'East_Asian'\ndf22\n")),(0,l.kt)("h3",{id:"13-indexpandas\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\u7684\u9b3c\u724c\u884c\u7ea7\u7d22\u5f15"},"1.3 Index\uff1apandas\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\u7684\u9b3c\u724c\uff08\u884c\u7ea7\u7d22\u5f15\uff09"),(0,l.kt)("p",null,"\u884c\u7ea7\u7d22\u5f15\u662f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5143\u6570\u636e"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u80fd\u7531\u771f\u5b9e\u6570\u636e\u4ea7\u751f\uff0c\u56e0\u6b64\u53ef\u4ee5\u89c6\u4f5c\u6570\u636e"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u7531\u591a\u91cd\u7d22\u5f15\u4e5f\u5c31\u662f\u591a\u4e2a\u5217\u7ec4\u5408\u800c\u6210"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u548c\u5217\u540d\u8fdb\u884c\u4ea4\u6362\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u5806\u53e0\u548c\u5c55\u5f00\uff0c\u8fbe\u5230Excel\u900f\u89c6\u8868\u6548\u679c")),(0,l.kt)("p",null,"Index\u6709\u56db\u79cd...\u54e6\u4e0d\uff0c\u5f88\u591a\u79cd\u5199\u6cd5\uff0c\u4e00\u4e9b\u91cd\u8981\u7684\u7d22\u5f15\u7c7b\u578b\u5305\u62ec"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"pd.Index\uff08\u666e\u901a\uff09"),(0,l.kt)("li",{parentName:"ul"},"Int64Index\uff08\u6570\u503c\u578b\u7d22\u5f15\uff09"),(0,l.kt)("li",{parentName:"ul"},"MultiIndex\uff08\u591a\u91cd\u7d22\u5f15\uff0c\u5728\u6570\u636e\u64cd\u7eb5\u4e2d\u66f4\u8be6\u7ec6\u63cf\u8ff0\uff09"),(0,l.kt)("li",{parentName:"ul"},"DatetimeIndex\uff08\u4ee5\u65f6\u95f4\u683c\u5f0f\u4f5c\u4e3a\u7d22\u5f15\uff09"),(0,l.kt)("li",{parentName:"ul"},"PeriodIndex \uff08\u542b\u5468\u671f\u7684\u65f6\u95f4\u683c\u5f0f\u4f5c\u4e3a\u7d22\u5f15\uff09")),(0,l.kt)("h4",{id:"\u76f4\u63a5\u5b9a\u4e49\u666e\u901a\u7d22\u5f15\u957f\u5f97\u5c31\u548c\u666e\u901a\u7684series\u4e00\u6837"},"\u76f4\u63a5\u5b9a\u4e49\u666e\u901a\u7d22\u5f15\uff0c\u957f\u5f97\u5c31\u548c\u666e\u901a\u7684Series\u4e00\u6837"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"index_names = ['a','b','c']\ns = pd.Series(index_names)\nprint(pd.Index(index_names))\nprint(pd.Index(s))\ns\n")),(0,l.kt)("h4",{id:"immutable\u7262\u8bb0"},"Immutable\uff0c\u7262\u8bb0"),(0,l.kt)("p",null,"pd.Index\u662f\u4e0d\u53ef\u53d8\u7684"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"index_names = ['a', 'b', 'c']\nindex0 = pd.Index(index_names)\nprint(index0.values)\n# index0[2] = 'd' # \u6539\u53d8\u503c\u4f1a\u51fa\u9519\n")),(0,l.kt)("h4",{id:"\u6254\u8fdb\u53bb\u4e00\u4e2a\u542b\u6709\u591a\u5143\u7ec4\u7684list\u5c31\u6709\u4e86multiindex"},"\u6254\u8fdb\u53bb\u4e00\u4e2a\u542b\u6709\u591a\u5143\u7ec4\u7684List\uff0c\u5c31\u6709\u4e86MultiIndex"),(0,l.kt)("p",null,"MyltiIndex \u4e5f\u662fimmutable\u7684\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"multi1 = pd.Index([['Row_' + str(x + 1), 'Col_' + str(y + 1)] for x in range(4) for y in range(4)])\nmulti1.name = ('index1', 'index2')\nmulti1\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"multi2 = pd.Index([('Row_' + str(x + 1), 'Col_' + str(y + 1)) for x in range(4) for y in range(4)])\nmulti2\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# multi2.name = ['index1', 'index2'] # \u51fa\u9519\n")),(0,l.kt)("h4",{id:"\u5bf9\u4e8eseries\u6765\u8bf4\u5982\u679c\u62e5\u6709\u4e86\u591a\u91cdindex\u6570\u636e\u53d8\u5f62"},"\u5bf9\u4e8eSeries\u6765\u8bf4\uff0c\u5982\u679c\u62e5\u6709\u4e86\u591a\u91cdIndex\uff0c\u6570\u636e\uff0c\u53d8\u5f62"),(0,l.kt)("p",null,"\u4e0b\u5217\u4ee3\u7801\u8bf4\u660e\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e8c\u91cdMultiIndex\u7684Series\u53ef\u4ee5unstack()\u6210DataFrame"),(0,l.kt)("li",{parentName:"ul"},"DataFrame\u53ef\u4ee5stack\u6210\u62e5\u6709\u4e8c\u91cdMultiIndex\u7684Series")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_for_multi1 = pd.Series(range(0, 16), index=multi2)\ndata_for_multi1\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_for_multi1.unstack()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_for_multi1.unstack().stack()\n")),(0,l.kt)("p",null,"\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u975e\u5e73\u8861\u6570\u636e\u7684\u4f8b\u5b50\uff1a"),(0,l.kt)("p",null,"Row_1,2,3,4\u548cCol_1,2,3,4\u5e76\u4e0d\u662f\u5168\u7ec4\u5408\u7684\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"multi2 = pd.Index([('Row_' + str(x), 'Col_' + str(y + 1)) for x in range(5) for y in range(x)])\nmulti2\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_for_multi2 = pd.Series(np.arange(10), index=multi2)\ndata_for_multi2\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_for_multi2.unstack()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_for_multi2.unstack().stack()\n")),(0,l.kt)("h4",{id:"datetime\u6807\u51c6\u5e93\u5982\u6b64\u597d\u7528\u4f60\u503c\u5f97\u62e5\u6709"},"DateTime\u6807\u51c6\u5e93\u5982\u6b64\u597d\u7528\uff0c\u4f60\u503c\u5f97\u62e5\u6709"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import datetime\ndates = [datetime.datetime(2021, 1, 1), datetime.datetime(2021, 1, 8), datetime.datetime(2021, 1, 30)]\npd.DatetimeIndex(dates)\n")),(0,l.kt)("h4",{id:"\u5982\u679c\u4f60\u4e0d\u4ec5\u9700\u8981\u65f6\u95f4\u683c\u5f0f\u7edf\u4e00\u65f6\u95f4\u9891\u7387\u4e5f\u8981\u7edf\u4e00\u7684\u8bdd"},"\u5982\u679c\u4f60\u4e0d\u4ec5\u9700\u8981\u65f6\u95f4\u683c\u5f0f\u7edf\u4e00\uff0c\u65f6\u95f4\u9891\u7387\u4e5f\u8981\u7edf\u4e00\u7684\u8bdd"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"periodindex1 = pd.period_range('2021-01', '2021-04', freq='M')\nperiodindex1\n")),(0,l.kt)("h4",{id:"\u6708\u7ea7\u7cbe\u5ea6\u548c\u65e5\u7ea7\u7cbe\u5ea6\u5982\u4f55\u8f6c\u6362"},"\u6708\u7ea7\u7cbe\u5ea6\u548c\u65e5\u7ea7\u7cbe\u5ea6\u5982\u4f55\u8f6c\u6362\uff1f"),(0,l.kt)("p",null,"\u6709\u7684\u516c\u53f8\u7edf\u4e00\u4ee51\u53f7\u4ee3\u8868\u5f53\u6708\uff0c\u6709\u7684\u516c\u53f8\u7edf\u4e00\u4ee5\u6700\u540e\u4e00\u5929\u4ee3\u8868\u5f53\u6708\uff0c\u8f6c\u5316\u8d77\u6765\u5f88\u9ebb\u70e6\uff0c\u53ef\u4ee5asfreq"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"periodindex1.asfreq('D', how='start')\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"periodindex1.asfreq('D', how='end')\n")),(0,l.kt)("h4",{id:"\u6700\u540e\u7684\u6700\u540e\u6211\u8981\u771f\u6b63\u628a\u4e24\u79cd\u9891\u7387\u7684\u65f6\u95f4\u7cbe\u5ea6\u5339\u914d\u4e0a"},"\u6700\u540e\u7684\u6700\u540e\uff0c\u6211\u8981\u771f\u6b63\u628a\u4e24\u79cd\u9891\u7387\u7684\u65f6\u95f4\u7cbe\u5ea6\u5339\u914d\u4e0a\uff1f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"periodindex_mon = pd.period_range('2021-01', '2021-03', freq='M').asfreq('D', how='start')\nperiodindex_day = pd.period_range('2021-01-01', '2021-03-01', freq='D')\n\nperiodindex_mon\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"periodindex_day\n")),(0,l.kt)("h4",{id:"\u7c97\u7c92\u5ea6\u6570\u636ereindexffillbfill"},"\u7c97\u7c92\u5ea6\u6570\u636e\uff0breindex\uff0bffill/bfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"full_ts = pd.Series(periodindex_mon, index=periodindex_mon).reindex(periodindex_day)\nfull_ts.head()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"full_ts = pd.Series(periodindex_mon, index=periodindex_mon).reindex(periodindex_day, method='ffill')\nfull_ts.head()\n")),(0,l.kt)("h4",{id:"\u5173\u4e8e\u7d22\u5f15\u65b9\u4fbf\u7684\u64cd\u4f5c\u6709"},"\u5173\u4e8e\u7d22\u5f15\uff0c\u65b9\u4fbf\u7684\u64cd\u4f5c\u6709\uff1f"),(0,l.kt)("p",null,"\u524d\u9762\u63cf\u8ff0\u8fc7\u4e86\uff0c\u7d22\u5f15\u6709\u5e8f\uff0c\u91cd\u590d\uff0c\u4f46\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53c8\u80fd\u901a\u8fc7key\u6765\u8bbf\u95ee\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u67d0\u4e9b\u96c6\u5408\u64cd\u4f5c\u90fd\u662f\u53ef\u4ee5\u652f\u6301\u7684\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"index1 = pd.Index(['A', 'B', 'B', 'C', 'C'])\nindex2 = pd.Index(['C', 'D', 'E', 'E', 'F'])\nindex3 = pd.Index(['B', 'C', 'A'])\nprint(index1.append(index2))\nprint(index1.difference(index2))\nprint(index1.intersection(index2))\nprint(index1.union(index2)) # Support unique-value Index well\nprint(index1.isin(index2))\nprint(index1.delete(2))\nprint(index1.insert(0, 'K')) # Not suggested\nprint(index3.drop('A')) # Support unique-value Index well\nprint(index1.is_monotonic, index2.is_monotonic, index3.is_monotonic)\nprint(index1.is_unique, index2.is_unique, index3.is_unique)\n")),(0,l.kt)("p",null,"\u8001\u751f\u5e38\u8c08\uff0c\u4ece\u57fa\u7840\u6765\u770b\uff0c\u6211\u4eec\u4ecd\u7136\u5173\u5fc3pandas\u5bf9\u4e8e\u4e0e\u5916\u90e8\u6570\u636e\u662f\u5982\u4f55\u4ea4\u4e92\u7684\u3002"),(0,l.kt)("h3",{id:"21-\u7ed3\u6784\u5316\u6570\u636e\u8f93\u5165\u8f93\u51fa"},"2.1 \u7ed3\u6784\u5316\u6570\u636e\u8f93\u5165\u8f93\u51fa"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"read_csv\u4e0eto_csv \u662f\u4e00\u5bf9\u8f93\u5165\u8f93\u51fa\u7684\u5de5\u5177\uff0cread_csv\u76f4\u63a5\u8fd4\u56depandas.DataFrame\uff0c\u800cto_csv\u53ea\u8981\u6267\u884c\u547d\u4ee4\u5373\u53ef\u5199\u6587\u4ef6",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"read_table\uff1a\u529f\u80fd\u7c7b\u4f3c"),(0,l.kt)("li",{parentName:"ul"},"read_fwf\uff1a\u64cd\u4f5cfixed width file"))),(0,l.kt)("li",{parentName:"ul"},"read_excel\u4e0eto_excel\u65b9\u4fbf\u7684\u4e0eexcel\u4ea4\u4e92")),(0,l.kt)("p",null,"\u8fd8\u8bb0\u5f97\u521a\u5f00\u59cb\u7684\u4f8b\u5b50\u5417\uff1f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"header \u8868\u793a\u6570\u636e\u4e2d\u662f\u5426\u5b58\u5728\u5217\u540d\uff0c\u5982\u679c\u5728\u7b2c0\u884c\u5c31\u5199\u5c31\u51990\uff0c\u5e76\u4e14\u5f00\u59cb\u8bfb\u6570\u636e\u65f6\u8df3\u8fc7\u76f8\u5e94\u7684\u884c\u6570\uff0c\u4e0d\u5b58\u5728\u53ef\u4ee5\u5199none"),(0,l.kt)("li",{parentName:"ul"},"names \u8868\u793a\u8981\u7528\u7ed9\u5b9a\u7684\u5217\u540d\u6765\u4f5c\u4e3a\u6700\u7ec8\u7684\u5217\u540d"),(0,l.kt)("li",{parentName:"ul"},"encoding \u8868\u793a\u6570\u636e\u96c6\u7684\u5b57\u7b26\u7f16\u7801\uff0c\u901a\u5e38\u800c\u8a00\u4e00\u4efd\u6570\u636e\u4e3a\u4e86\u65b9\u4fbf\u7684\u8fdb\u884c\u6587\u4ef6\u4f20\u8f93\u90fd\u4ee5utf-8\u4f5c\u4e3a\u6807\u51c6")),(0,l.kt)("p",null,"\u63d0\u95ee\uff1a\u4e0b\u5217\u4f8b\u5b50\u4e2d\uff0cheader=4\uff0cnames=cnames\u65f6\uff0c\u7a76\u7adf\u4f1a\u8bfb\u5230\u600e\u6837\u7684\u6570\u636e\uff1f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print('cnames:', cnames)\nirisdata = pd.read_csv(iris_file, header=None, names=cnames, encoding='utf-8')\nirisdata[::30]\n")),(0,l.kt)("p",null,"\u5e0c\u671b\u4e86\u89e3\u5168\u90e8\u53c2\u6570\u7684\u8bf7\u79fb\u6b65API\uff1a"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html#pandas.read_csv"},"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html#pandas.read_csv")),(0,l.kt)("p",null,"\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684\u53c2\u6570\uff1a"),(0,l.kt)("p",null,"\u8bfb\u53d6\u5904\u7406\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"skiprows\uff1a\u8df3\u8fc7\u4e00\u5b9a\u7684\u884c\u6570"),(0,l.kt)("li",{parentName:"ul"},"nrows\uff1a\u4ec5\u8bfb\u53d6\u4e00\u5b9a\u7684\u884c\u6570"),(0,l.kt)("li",{parentName:"ul"},"skipfooter\uff1a\u5c3e\u90e8\u6709\u56fa\u5b9a\u7684\u884c\u6570\u6c38\u4e0d\u8bfb\u53d6"),(0,l.kt)("li",{parentName:"ul"},"skip_blank_lines\uff1a\u7a7a\u884c\u8df3\u8fc7")),(0,l.kt)("p",null,"\u5185\u5bb9\u5904\u7406\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"sep/delimiter\uff1a\u5206\u9694\u7b26\u5f88\u91cd\u8981\uff0c\u5e38\u89c1\u7684\u6709\u9017\u53f7\uff0c\u7a7a\u683c\u548cTab('\\t')"),(0,l.kt)("li",{parentName:"ul"},"na_values\uff1a\u6307\u5b9a\u5e94\u8be5\u88ab\u5f53\u4f5cna_values\u7684\u6570\u503c"),(0,l.kt)("li",{parentName:"ul"},"thousands\uff1a\u5904\u7406\u6570\u503c\u7c7b\u578b\u65f6\uff0c\u6bcf\u5343\u4f4d\u5206\u9694\u7b26\u5e76\u4e0d\u7edf\u4e00 (1.234.567,89\u6216\u80051,234,567.89\u90fd\u53ef\u80fd)\uff0c\u6b64\u65f6\u8981\u628a\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6570\u5b57\u9700\u8981\u6307\u660e\u5343\u4f4d\u5206\u9694\u7b26")),(0,l.kt)("p",null,"\u6536\u5c3e\u5904\u7406\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"index_col\uff1a\u5c06\u771f\u5b9e\u7684\u67d0\u5217\uff08\u5217\u7684\u6570\u76ee\uff0c\u751a\u81f3\u5217\u540d\uff09\u5f53\u4f5cindex"),(0,l.kt)("li",{parentName:"ul"},"squeeze\uff1a\u4ec5\u8bfb\u5230\u4e00\u5217\u65f6\uff0c\u4e0d\u518d\u4fdd\u5b58\u4e3apandas.DataFrame\u800c\u662fpandas.Series")),(0,l.kt)("h3",{id:"21x-excel--"},"2.1.x Excel ... ?"),(0,l.kt)("p",null,"\u5bf9\u4e8e\u5b58\u50a8\u7740\u6781\u4e3a\u89c4\u6574\u6570\u636e\u7684Excel\u800c\u8a00\uff0c\u5176\u5b9e\u662f\u6ca1\u5fc5\u8981\u4e00\u5b9a\u7528Excel\u6765\u5b58\uff0c\u5c3d\u7ba1Pandas\u4e5f\u5341\u5206\u53cb\u597d\u7684\u63d0\u4f9b\u4e86I/O\u63a5\u53e3\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"iris_excel_file = 'irisdata.xls'\nirisdata.to_excel(iris_excel_file, index=None)\nirisdata_from_excel = pd.read_excel(iris_excel_file, header=0)\nirisdata_from_excel[::30]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import os\nos.remove(iris_excel_file)\n")),(0,l.kt)("p",null,"\u552f\u4e00\u91cd\u8981\u7684\u53c2\u6570\uff1asheetname=k\uff0c\u6807\u5fd7\u7740\u4e00\u4e2aexcel\u7684\u7b2ck\u4e2asheet\u9875\u5c06\u4f1a\u88ab\u53d6\u51fa\u3002\uff08\u4ece0\u5f00\u59cb\uff09"),(0,l.kt)("h3",{id:"22-\u534a\u7ed3\u6784\u5316\u6570\u636e"},"2.2 \u534a\u7ed3\u6784\u5316\u6570\u636e"),(0,l.kt)("p",null,"JSON\uff1a\u7f51\u7edc\u4f20\u8f93\u4e2d\u5e38\u7528\u7684\u4e00\u79cd\u6570\u636e\u683c\u5f0f\u3002"),(0,l.kt)("p",null,"\u4ed4\u7ec6\u770b\u4e00\u4e0b\uff0c\u5b9e\u9645\u4e0a\u8fd9\u5c31\u662f\u6211\u4eec\u5e73\u65f6\u6536\u96c6\u5230\u5f02\u6e90\u6570\u636e\u7684\u98ce\u683c\u662f\u4e00\u81f4\u7684\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5217\u540d\u4e0d\u80fd\u5b8c\u5168\u5339\u914d"),(0,l.kt)("li",{parentName:"ul"},"\u5173\u8054\u952e\u53ef\u80fd\u5e76\u4e0d\u552f\u4e00"),(0,l.kt)("li",{parentName:"ul"},"\u5143\u6570\u636e\u88ab\u4fdd\u5b58\u5728\u6570\u636e\u91cc")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import json\njson_data = [{'name': 'Wang', 'sal': 50000, 'job': 'VP'},\n             {'name': 'Zhang', 'job': 'Manager', 'report': 'VP'},\n             {'name': 'Li', 'sal': 5000, 'report': 'Manager'}]\ndata_employee = pd.read_json(json.dumps(json_data))\ndata_employee_ri = data_employee.reindex(columns=['name', 'job', 'sal', 'report'])\ndata_employee_ri\n")),(0,l.kt)("p",null,"\u5728\u7b2c\u4e00\u90e8\u5206\u7684\u57fa\u7840\u4e0a\uff0c\u6570\u636e\u4f1a\u6709\u66f4\u591a\u79cd\u64cd\u4f5c\u65b9\u5f0f\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u5217\u540d\u3001\u884cindex\u6765\u53d6\u6570\u636e\uff0c\u7ed3\u5408ix\u3001iloc\u7075\u6d3b\u7684\u83b7\u53d6\u6570\u636e\u7684\u4e00\u4e2a\u5b50\u96c6\uff08\u7b2c\u4e00\u90e8\u5206\u5df2\u7ecf\u4ecb\u7ecd\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u6309\u8bb0\u5f55\u62fc\u63a5\uff08\u5c31\u50cfUnion All\uff09\u6216\u8005\u5173\u8054\uff08join\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u65b9\u4fbf\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u6620\u5c04"),(0,l.kt)("li",{parentName:"ul"},"\u6392\u5e8f"),(0,l.kt)("li",{parentName:"ul"},"\u7f3a\u5931\u503c\u5904\u7406"),(0,l.kt)("li",{parentName:"ul"},"\u4e0eExcel\u4e00\u6837\u7075\u6d3b\u7684\u6570\u636e\u900f\u89c6\u8868\uff08\u5728\u7b2c\u56db\u90e8\u5206\u66f4\u8be6\u7ec6\u4ecb\u7ecd\uff09")),(0,l.kt)("h3",{id:"31-\u6570\u636e\u6574\u5408\u65b9\u4fbf\u7075\u6d3b"},"3.1 \u6570\u636e\u6574\u5408\uff1a\u65b9\u4fbf\u7075\u6d3b"),(0,l.kt)("h3",{id:"311-\u6a2a\u5411\u62fc\u63a5\u76f4\u63a5dataframe"},"3.1.1 \u6a2a\u5411\u62fc\u63a5\uff1a\u76f4\u63a5DataFrame"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\nimport pandas as pd\npd.DataFrame([np.random.rand(2), np.random.rand(2), np.random.rand(2)], columns=['C1', 'C2'])\n")),(0,l.kt)("h3",{id:"312-\u6a2a\u5411\u62fc\u63a5concatenate"},"3.1.2 \u6a2a\u5411\u62fc\u63a5\uff1aConcatenate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import json\njson_data = [{'name': 'Wang', 'sal': 50000, 'job': 'VP'},\n             {'name': 'Zhang', 'job': 'Manager', 'report': 'VP'},\n             {'name': 'Li', 'sal': 5000, 'report': 'Manager'}]\ndata_employee = pd.read_json(json.dumps(json_data))\ndata_employee_ri = data_employee.reindex(columns=['name', 'job', 'sal', 'report'])\n\npd.concat([data_employee_ri, data_employee_ri, data_employee_ri])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.concat([data_employee_ri, data_employee_ri, data_employee_ri],ignore_index=True)\n")),(0,l.kt)("h3",{id:"313-\u7eb5\u5411\u62fc\u63a5merge"},"3.1.3 \u7eb5\u5411\u62fc\u63a5\uff1aMerge"),(0,l.kt)("p",null,"\u6839\u636e\u6570\u636e\u5217\u5173\u8054\uff0c\u4f7f\u7528on\u5173\u952e\u5b57"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u6307\u5b9a\u4e00\u5217\u6216\u591a\u5217"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u4f7f\u7528left_on\u548cright_on")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.merge(data_employee_ri, data_employee_ri, on='name')\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.merge(data_employee_ri, data_employee_ri, on=['name', 'job'])\n")),(0,l.kt)("p",null,"\u6839\u636eindex\u5173\u8054\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528left_index\u548cright_index"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_employee_ri.index.name = 'index1'\npd.merge(data_employee_ri, data_employee_ri, left_index=True, right_index=True)\n")),(0,l.kt)("p",null,"TIPS: \u589e\u52a0how\u5173\u952e\u5b57\uff0c\u5e76\u6307\u5b9a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"how = 'inner'"),(0,l.kt)("li",{parentName:"ul"},"how = 'left'"),(0,l.kt)("li",{parentName:"ul"},"how = 'right'"),(0,l.kt)("li",{parentName:"ul"},"how = 'outer'")),(0,l.kt)("p",null,"\u7ed3\u5408how\uff0c\u53ef\u4ee5\u770b\u5230merge\u57fa\u672c\u518d\u73b0\u4e86SQL\u5e94\u6709\u7684\u529f\u80fd\uff0c\u5e76\u4fdd\u6301\u4ee3\u7801\u6574\u6d01\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df31_a = pd.DataFrame({'name':['\u8001\u738b', '\u8001\u5f20', '\u8001\u674e'], 'sal':[5000, 3000, 1000]})\ndf31_a\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df31_b = pd.DataFrame({'name':['\u8001\u738b', '\u8001\u5218'], 'job':['VP', 'Manager']})\ndf31_b\n")),(0,l.kt)("p",null,"how='left': \u4fdd\u7559\u5de6\u8868\u4fe1\u606f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.merge(df31_a, df31_b, on='name', how='left')\n")),(0,l.kt)("p",null,"how='right': \u4fdd\u7559\u53f3\u8868\u4fe1\u606f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.merge(df31_a, df31_b, on='name', how='right')\n")),(0,l.kt)("p",null,"how='inner': \u4fdd\u7559\u4e24\u8868\u4ea4\u96c6\u4fe1\u606f\uff0c\u8fd9\u6837\u5c3d\u91cf\u907f\u514d\u51fa\u73b0\u7f3a\u5931\u503c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.merge(df31_a, df31_b, on='name', how='inner')\n")),(0,l.kt)("p",null,"how='outer': \u4fdd\u7559\u4e24\u8868\u5e76\u96c6\u4fe1\u606f\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u7f3a\u5931\u503c\uff0c\u4f46\u6700\u5927\u7a0b\u5ea6\u7684\u6574\u5408\u4e86\u5df2\u6709\u4fe1\u606f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.merge(df31_a, df31_b, on='name', how='outer')\n")),(0,l.kt)("h3",{id:"32-\u6570\u636e\u6e05\u6d17\u4e09\u5251\u5ba2"},"3.2 \u6570\u636e\u6e05\u6d17\u4e09\u5251\u5ba2"),(0,l.kt)("p",null,"\u63a5\u4e0b\u6765\u7684\u4e09\u4e2a\u529f\u80fd\uff0c",(0,l.kt)("strong",{parentName:"p"},"map"),",",(0,l.kt)("strong",{parentName:"p"},"applymap"),",",(0,l.kt)("strong",{parentName:"p"},"apply"),",\u529f\u80fd\uff0c\u662f\u7edd\u5927\u591a\u6570\u6570\u636e\u5206\u6790\u5e08\u5728\u6570\u636e\u6e05\u6d17\u8fd9\u4e00\u6b65\u9aa4\u4e2d\u7684\u5fc5\u7ecf\u4e4b\u8def\u3002"),(0,l.kt)("p",null,"\u4ed6\u4eec\u5206\u522b\u56de\u7b54\u4e86\u4ee5\u4e0b\u95ee\u9898\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6211\u60f3\u6839\u636e\u4e00\u5217\u6570\u636e\u65b0\u505a\u4e00\u5217\u6570\u636e\uff0c\u600e\u4e48\u529e\uff1f\uff08Series->Series\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u6211\u60f3\u6839\u636e\u6574\u5f20\u8868\u7684\u6570\u636e\u65b0\u505a\u6574\u5f20\u8868\uff0c\u600e\u4e48\u529e\uff1f \uff08DataFrame->DataFrame\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u6211\u60f3\u6839\u636e\u5f88\u591a\u5217\u7684\u6570\u636e\u65b0\u505a\u4e00\u5217\u6570\u636e\uff0c\u600e\u4e48\u529e\uff1f \uff08DataFrame->Series\uff09")),(0,l.kt)("p",null,"\u4e0d\u8981\u518d\u5199\u4ec0\u4e48for\u5faa\u73af\u4e86\uff01\u6539\u53d8\u601d\u7ef4\uff0c\u63d0\u9ad8\u7f16\u7801\u548c\u6267\u884c\u6548\u7387"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_np = np.asarray([('Japan', 'Tokyo', 4000),\n                      ('Korea', 'Seoul', 1300),\n                      ('China', 'Beijing', 9100)])\ndf32 = pd.DataFrame(data_np, columns=['nation', 'capital', 'GDP'])\ndf32\n")),(0,l.kt)("p",null,"map: \u4ee5\u76f8\u540c\u89c4\u5219\u5c06\u4e00\u5217\u6570\u636e\u4f5c\u4e00\u4e2a\u6620\u5c04\uff0c\u4e5f\u5c31\u662f\u8fdb\u884c\u76f8\u540c\u51fd\u6570\u7684\u5904\u7406"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def GDP_Factorize(v):\n    fv = np.float64(v)\n    if fv > 6000.0:\n        return 'High'\n    elif fv < 2000.0:\n        return 'Low'\n    else:\n        return 'Medium'\n\ndf32['GDP_Level'] = df32['GDP'].map(GDP_Factorize)\ndf32['NATION'] = df32.nation.map(str.upper)\ndf32\n")),(0,l.kt)("p",null,"\u7c7b\u4f3c\u7684\u529f\u80fd\u8fd8\u6709applymap\uff0c\u53ef\u4ee5\u5bf9\u4e00\u4e2adataframe\u91cc\u9762\u6bcf\u4e00\u4e2a\u5143\u7d20\u50cfmap\u90a3\u6837\u5168\u5c40\u64cd\u4f5c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df32.applymap(lambda x: float(x)*2 if x.isdigit() else x.upper())\n")),(0,l.kt)("p",null,"apply\u5219\u53ef\u4ee5\u5bf9\u4e00\u4e2aDataFrame\u64cd\u4f5c\u5f97\u5230\u4e00\u4e2aSeries"),(0,l.kt)("p",null,"\u4ed6\u4f1a\u6709\u70b9\u50cf\u6211\u4eec\u540e\u9762\u4ecb\u7ecd\u7684agg,\u4f46\u662fapply\u53ef\u4ee5\u6309\u884c\u64cd\u4f5c\u548c\u6309\u5217\u64cd\u4f5c\uff0c\u7528axis\u63a7\u5236\u5373\u53ef\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df32.apply(lambda x: x['nation'] + x['capital'] + '_' + x['GDP'], axis=1)\n")),(0,l.kt)("h3",{id:"33-\u6570\u636e\u6392\u5e8f"},"3.3 \u6570\u636e\u6392\u5e8f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"sort: \u6309\u4e00\u5217\u6216\u8005\u591a\u5217\u7684\u503c\u8fdb\u884c\u884c\u7ea7\u6392\u5e8f"),(0,l.kt)("li",{parentName:"ul"},"sort_index: \u6839\u636eindex\u91cc\u7684\u53d6\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u4e14\u53ef\u4ee5\u6839\u636eaxis\u51b3\u5b9a\u662f\u91cd\u6392\u884c\u8fd8\u662f\u5217")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_np = np.asarray([('Japan', 'Tokyo', 4000),\n                      ('Korea', 'Seoul', 1300),\n                      ('China', 'Beijing', 9100)])\ndf33 = pd.DataFrame(data_np, columns=['nation', 'capital', 'GDP'])\ndf33\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33.sort_values(['capital', 'nation'])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33.sort_values('GDP', ascending=False)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33.sort_index(axis=1, ascending=True)\n")),(0,l.kt)("p",null,"\u4e00\u4e2a\u597d\u7528\u7684\u529f\u80fd\uff1aRank"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33.rank()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33.rank(ascending=False)\n")),(0,l.kt)("p",null,"\u6ce8\u610ftied data\uff08\u76f8\u540c\u503c\uff09\u7684\u5904\u7406\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method = 'average'"),(0,l.kt)("li",{parentName:"ul"},"method = 'min'"),(0,l.kt)("li",{parentName:"ul"},"method = 'max'"),(0,l.kt)("li",{parentName:"ul"},"method = 'first'")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33x = pd.DataFrame({'name': ['\u8001\u738b', '\u8001\u5f20', '\u8001\u674e', '\u8001\u5218'],\n                      'sal': np.array([5000, 3000, 5000, 9000])})\ndf33x\n")),(0,l.kt)("p",null,"df33x.rank()\u9ed8\u8ba4\u4f7f\u7528method='average'\uff0c\u4e24\u6761\u6570\u636e\u76f8\u7b49\u65f6\uff0c\u5904\u7406\u6392\u540d\u65f6\u5927\u5bb6\u90fd\u7528\u5e73\u5747\u503c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33x.sal.rank()\n")),(0,l.kt)("p",null,"method='min'\uff0c\u5904\u7406\u6392\u540d\u65f6\u5927\u5bb6\u90fd\u7528\u6700\u5c0f\u503c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33x.sal.rank(method='min')\n")),(0,l.kt)("p",null,"method='max'\uff0c\u5904\u7406\u6392\u540d\u65f6\u5927\u5bb6\u90fd\u7528\u6700\u5927\u503c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33x.sal.rank(method='max')\n")),(0,l.kt)("p",null,"method='first'\uff0c\u5904\u7406\u6392\u540d\u65f6\u8c01\u5148\u51fa\u73b0\u5c31\u5148\u7ed9\u8c01\u8f83\u5c0f\u7684\u6570\u503c\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33x.sal.rank(method='first')\n")),(0,l.kt)("h3",{id:"34-\u7f3a\u5931\u6570\u636e\u5904\u7406"},"3.4 \u7f3a\u5931\u6570\u636e\u5904\u7406"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"i = pd.Index([('Row_' + str(x), 'Col_' + str(y + 1)) for x in range(5) for y in range(x)])\ndata_multi = pd.Series(np.arange(10), index=i)\ndf34 = data_multi.unstack()\ndf34\n")),(0,l.kt)("p",null,"\u5ffd\u7565\u7f3a\u5931\u503c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df34.mean(skipna=True)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df34.mean(skipna=False)\n")),(0,l.kt)("p",null,"\u5982\u679c\u4e0d\u60f3\u5ffd\u7565\u7f3a\u5931\u503c\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u796d\u51fafillna\u4e86\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df34\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df34.fillna(0).mean(axis=1, skipna=False)\n")),(0,l.kt)("h3",{id:"pandas\u7684groupby"},"Pandas\u7684groupby"),(0,l.kt)("p",null,"groupby\u7684\u529f\u80fd\u7c7b\u4f3cSQL\u7684group by\u5173\u952e\u5b57\uff1a"),(0,l.kt)("p",null,"Split-Apply-Combine"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Split\uff0c\u5c31\u662f\u6309\u7167\u89c4\u5219\u5206\u7ec4"),(0,l.kt)("li",{parentName:"ul"},"Apply\uff0c\u901a\u8fc7\u4e00\u5b9a\u7684agg\u51fd\u6570\u6765\u83b7\u5f97\u8f93\u5165pd.Series\u8fd4\u56de\u4e00\u4e2a\u503c\u7684\u6548\u679c"),(0,l.kt)("li",{parentName:"ul"},"Combine\uff0c\u628a\u7ed3\u679c\u6536\u96c6\u8d77\u6765")),(0,l.kt)("p",null,"Pandas\u7684groupby\u7684\u7075\u6d3b\u6027\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5206\u7ec4\u7684\u5173\u952e\u5b57\u53ef\u4ee5\u6765\u81ea\u4e8eindex\uff0c\u4e5f\u53ef\u4ee5\u6765\u81ea\u4e8e\u771f\u5b9e\u7684\u5217\u6570\u636e"),(0,l.kt)("li",{parentName:"ul"},"\u5206\u7ec4\u89c4\u5219\u53ef\u4ee5\u901a\u8fc7\u4e00\u5217\u6216\u8005\u591a\u5217")),(0,l.kt)("p",null,"\u5206\u7ec4\u7684\u5177\u4f53\u903b\u8f91"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"iris_file = '../data/numpy/iris.data.txt'\ncnames = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'class']\n\nirisdata = pd.read_csv(iris_file, names=cnames, encoding='utf-8')\nirisdata\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"irisdata_group = irisdata.groupby('class')\nirisdata_group\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for level, subsetDF in irisdata_group:\n    print(level)\n    print(subsetDF[::20])\n")),(0,l.kt)("p",null,"\u5206\u7ec4\u53ef\u4ee5\u5feb\u901f\u5b9e\u73b0MapReduce\u7684\u903b\u8f91"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Map: \u6307\u5b9a\u5206\u7ec4\u7684\u5217\u6807\u7b7e\uff0c\u4e0d\u540c\u7684\u503c\u5c31\u4f1a\u88ab\u6254\u5230\u4e0d\u540c\u7684\u5206\u7ec4\u5904\u7406"),(0,l.kt)("li",{parentName:"ul"},"Reduce: \u8f93\u5165\u591a\u4e2a\u503c\uff0c\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u4e00\u822c\u53ef\u4ee5\u901a\u8fc7agg\u5b9e\u73b0\uff0cagg\u80fd\u63a5\u53d7\u4e00\u4e2a\u51fd\u6570")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"irisdata.groupby('class').agg(lambda x:((x - x.mean())**3).sum() * (len(x) - 0.0) / \n                (len(x) - 1.0) / (len(x) - 2.0) / (x.std() * np.sqrt((len(x) - 0.0) / \n                                                                     (len(x)-1.0)))**3 if len(x) > 2 else None)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import scipy.stats\nirisdata.groupby('class').agg(scipy.stats.skew)\n")),(0,l.kt)("h4",{id:"\u6c47\u603b\u4e4b\u540e\u7684\u5e7f\u64ad\u64cd\u4f5c"},"\u6c47\u603b\u4e4b\u540e\u7684\u5e7f\u64ad\u64cd\u4f5c"),(0,l.kt)("p",null,"\u5728OLAP\u6570\u636e\u5e93\u4e0a\uff0c\u4e3a\u4e86\u907f\u514dgroupby+join\u7684\u4e8c\u6b21\u64cd\u4f5c\uff0c\u63d0\u51fa\u4e86sum()over(partition by)\u7684\u5f00\u7a97\u64cd\u4f5c\u3002"),(0,l.kt)("p",null,"\u5728Pandas\u4e2d\uff0c\u8fd9\u79cd\u64cd\u4f5c\u80fd\u591f\u8fdb\u4e00\u6b65\u88abtransform\u6240\u53d6\u4ee3\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.concat([irisdata, irisdata.groupby('class').transform('mean')], axis=1)[::20]\n")),(0,l.kt)("h4",{id:"\u4ea7\u751f-multiindex\u591a\u5217\u5206\u7ec4\u540e\u7684\u6570\u636e\u900f\u89c6\u8868\u64cd\u4f5c"},"\u4ea7\u751f MultiIndex\uff08\u591a\u5217\u5206\u7ec4\uff09\u540e\u7684\u6570\u636e\u900f\u89c6\u8868\u64cd\u4f5c"),(0,l.kt)("p",null,"\u4e00\u822c\u6765\u8bf4\uff0c\u591a\u5217groupby\u7684\u4e00\u4e2a\u526f\u4f5c\u7528\u5c31\u662f.groupby().agg()\u4e4b\u540e\u4f60\u7684\u884cindex\u5df2\u7ecf\u53d8\u6210\u4e86\u4e00\u4e2a\u591a\u5217\u5206\u7ec4\u7684\u5206\u7ea7\u7d22\u5f15\u3002"),(0,l.kt)("p",null,"\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8fbe\u5230Excel\u7684\u6570\u636e\u900f\u89c6\u8868\u7684\u6548\u679c\uff0c\u884c\u548c\u5217\u7684\u7d22\u5f15\u81ea\u7531\u4ea4\u6362\uff0c\u8fbe\u5230\u7edf\u8ba1\u76ee\u7684\uff0c\u7a76\u7adf\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"factor1 = np.random.randint(0, 3, 50)\nfactor2 = np.random.randint(0, 2, 50)\nfactor3 = np.random.randint(0, 3, 50)\nvalues = np.random.randn(50)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF = pd.DataFrame({'F1': factor1, 'F2': factor2, 'F3': factor3, 'F4': values})\nhierindexDF.tail()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum = hierindexDF.groupby(['F1', 'F2', 'F3']).sum()\nhierindexDF_gbsum\n")),(0,l.kt)("p",null,"\u89c2\u5bdfIndex\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum.index\n")),(0,l.kt)("p",null,"unstack\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u65e0\u53c2\u6570\u65f6\uff0c\u628a\u6700\u672bindex\u7f6e\u6362\u5230column\u4e0a"),(0,l.kt)("li",{parentName:"ul"},"\u6709\u6570\u5b57\u53c2\u6570\u65f6\uff0c\u628a\u6307\u5b9a\u4f4d\u7f6e\u7684index\u7f6e\u6362\u5230column\u4e0a"),(0,l.kt)("li",{parentName:"ul"},"\u6709\u5217\u8868\u53c2\u6570\u65f6\uff0c\u4f9d\u6b21\u628a\u7279\u5b9a\u4f4d\u7f6e\u7684index\u7f6e\u6362\u5230column\u4e0a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum.unstack()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum.unstack(0)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum.unstack(1)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum.unstack([2,0])\n")),(0,l.kt)("p",null,"\u66f4\u8fdb\u4e00\u6b65\u7684\uff0cstack\u7684\u529f\u80fd\u662f\u548cunstack\u5bf9\u5e94\uff0c\u628acolumn\u4e0a\u7684\u591a\u7ea7\u7d22\u5f15\u6362\u5230index\u4e0a\u53bb"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum.unstack([2, 0]).stack([1, 2])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"")))}m.isMDXComponent=!0}}]);
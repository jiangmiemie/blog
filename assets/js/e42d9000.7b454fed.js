"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[7372],{277:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>p,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var i=t(5893),s=t(1151);const o={tags:["python","ipynb","md"],title:"Python\u64cd\u4f5cipynb"},p=void 0,r={id:"Python\u64cd\u4f5cipynb",title:"Python\u64cd\u4f5cipynb",description:"ipynb\u5408\u5e76",source:"@site/sheets/Python\u64cd\u4f5cipynb.md",sourceDirName:".",slug:"/Python\u64cd\u4f5cipynb",permalink:"/sheets/Python\u64cd\u4f5cipynb",draft:!1,unlisted:!1,editUrl:"https://github.com/jiangmiemie/blog/blob/master/sheets/Python\u64cd\u4f5cipynb.md",tags:[{label:"python",permalink:"/sheets/tags/python"},{label:"ipynb",permalink:"/sheets/tags/ipynb"},{label:"md",permalink:"/sheets/tags/md"}],version:"current",frontMatter:{tags:["python","ipynb","md"],title:"Python\u64cd\u4f5cipynb"},sidebar:"tutorialSidebar",previous:{title:"Python\u64cd\u4f5cWORD",permalink:"/sheets/Python\u64cd\u4f5cWORD"},next:{title:"Python\u64cd\u4f5cpyecharts",permalink:"/sheets/Python\u64cd\u4f5cpyecharts"}},a={},l=[{value:"ipynb\u5408\u5e76",id:"ipynb\u5408\u5e76",level:2},{value:"ipynb\u8f6cmd",id:"ipynb\u8f6cmd",level:2}];function d(n){const e={code:"code",h2:"h2",pre:"pre",...(0,s.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"ipynb\u5408\u5e76",children:"ipynb\u5408\u5e76"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'\n# \u5408\u5e76\u6587\u4ef6\u5939\u4e0b\u6240\u6709ipynb\u6587\u4ef6\ndef merge_ipynb(wpt):\n    if wpt.endswith("/"):\n        return\n    else:\n        wpt = wpt + "/"\n    path = wpt[:-1]\n\n    for root, dirs, files in os.walk(wpt):\n        flst = files\n    flst = [wpt + f for f in flst if f.endswith(".ipynb")]\n    jmain = json.load(open(flst[0], "r", encoding="utf-8"))\n    for f in flst[1:]:\n        jn = json.load(open(f, "r", encoding="utf-8"))\n        jmain["cells"].extend(jn["cells"])\n\n    with open("{}.ipynb".format(path), "w", encoding="utf-8") as wf:\n        json.dump(jmain, wf)  # \u5199\u5165\u6587\u4ef6\n'})}),"\n",(0,i.jsx)(e.h2,{id:"ipynb\u8f6cmd",children:"ipynb\u8f6cmd"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# ipynb\u8f6cmd\ndef ipynb2md(wpt, save_path=""):\n    md_file_name = os.path.join(save_path, wpt.replace(".ipynb", ".md"))\n    file_name = wpt.split("\\\\")[-1].split(".")[0]\n\n    try:\n        print(wpt)\n        ja = json.load(open(wpt, "r", encoding="utf-8"))\n        md_str = ""  # \u4e24\u79cd\u6a21\u5f0f\uff1a\u76f4\u63a5\u88c5\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u91cc\u6216\u88c5\u5230\u5217\u8868\u91cc\uff0c\u4e00\u884c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\n\n        for c in ja["cells"]:\n            if c["cell_type"] == "markdown":\n                md_str = md_str + "\\n" + "".join(c["source"]) + "\\n\\n"\n            elif c["cell_type"] == "code":\n                md_str = md_str + "\\n```python \\n" + "".join(c["source"]) + "\\n```\\n\\n"\n        with open(md_file_name, "w", encoding="utf-8") as wf:\n            wf.write(md_str.replace("<>", "**<** **>**"))\n    except EOFError as e:\n        print(e)\n'})})]})}function c(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>r,a:()=>p});var i=t(7294);const s={},o=i.createContext(s);function p(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:p(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);
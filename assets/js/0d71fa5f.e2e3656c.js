"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[9709],{68173:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5/skorch","title":"skorch","description":"skorch","source":"@site/docs/docs/\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5/skorch.md","sourceDirName":"\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5","slug":"/\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5/skorch","permalink":"/docs/\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5/skorch","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"title":"skorch"},"sidebar":"tutorialSidebar","previous":{"title":"\u964d\u7ef4\u7b97\u6cd5","permalink":"/docs/\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5/\u964d\u7ef4\u7b97\u6cd5"},"next":{"title":"\u795e\u7ecf\u7f51\u7edc\u5165\u95e8","permalink":"/docs/\u673a\u5668\u5b66\u4e60/\u795e\u7ecf\u7f51\u7edc/"}}');var r=t(74848),i=t(28453);const o={sidebar_position:10,title:"skorch"},a=void 0,l={},c=[{value:"skorch",id:"skorch",level:2},{value:"\u7b80\u5355\u793a\u4f8b",id:"\u7b80\u5355\u793a\u4f8b",level:3}];function d(n){const e={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"skorch",children:"skorch"}),"\n",(0,r.jsx)(e.p,{children:"\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86 scikit-learn \u7684\u5f88\u591a\u7b97\u6cd5\u3002\u5b8c\u6210\u4e86\u4f20\u7edf\u673a\u5668\u5b66\u4e60\u7684\u4efb\u52a1\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u4f46\u662f\uff0csklearn\u672c\u8eab\u4e0d\u652f\u6301GPU\u52a0\u901f\u3002\u9047\u5230\u66f4\u590d\u6742\u7684\u4efb\u52a1\uff0c\u9700\u8981\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u5e76\u8c03\u7528GPU\u6765\u5b8c\u6210\u3002"}),"\n",(0,r.jsx)(e.p,{children:"skorch \u662f\u4e00\u4e2a\u57fa\u4e8e PyTorch \u7684\u795e\u7ecf\u7f51\u7edc\u5e93\uff0c\u63d0\u4f9b\u4e86 scikit-learn \u98ce\u683c\u7684 API\u3002\u5b83\u5c06 PyTorch \u7684\u7075\u6d3b\u6027\u4e0e scikit-learn \u7684\u6613\u7528\u6027\u76f8\u7ed3\u5408\uff0c\u4f7f\u5f97\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3\u548c\u8bc4\u4f30\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u548c\u9ad8\u6548\u3002\u652f\u6301GPU\u52a0\u901f\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u5b83\u53ef\u4ee5\u8ba9\u4f60\u4ec5\u4ec5\u66ff\u6362 sklearn \u7684\u6a21\u578b\u4e3a pytorch \u7684\u6a21\u578b\uff0c\u4e0d\u6539\u53d8\u5176\u4ed6\u4ee3\u7801\u3002\u4f5c\u4e3a\u8854\u63a5 pytorch \u548c sklearn \u7684\u6865\u6881\u3002"}),"\n",(0,r.jsx)(e.p,{children:"skorch \u7684\u5b89\u88c5\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4f7f\u7528 pip \u5b89\u88c5\u5373\u53ef\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"pip install skorch\n"})}),"\n",(0,r.jsx)(e.h3,{id:"\u7b80\u5355\u793a\u4f8b",children:"\u7b80\u5355\u793a\u4f8b"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"# \u5bfc\u5165\u5fc5\u8981\u7684\u5e93\nimport numpy as np\nfrom sklearn import datasets\nfrom torch import nn\nfrom skorch import NeuralNetClassifier\nfrom sklearn.model_selection import train_test_split\nimport time\nfrom sklearn.linear_model import LinearRegression\nimport torch\n\n# \u52a0\u8f7d\u6570\u636e\u96c6\ndigits = datasets.load_digits()\n# \u83b7\u53d6\u7279\u5f81\u548c\u76ee\u6807\u53d8\u91cf\nX = digits.data.astype(np.float32)  # \u8f6c\u6362\u4e3afloat32\u7c7b\u578b\ny = digits.target.astype(np.int64)  # \u76ee\u6807\u53d8\u91cf\u8f6c\u6362\u4e3aint64\n\n# \u4fee\u6539\u540e\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u5b9a\u4e49\nclass MyModule(nn.Module):\n    def __init__(self, num_units=256, nonlin=nn.ReLU()):  # \u589e\u52a0\u9690\u85cf\u5355\u5143\u6570\n        super().__init__()\n        self.dense0 = nn.Linear(64, num_units)  # \u4fee\u6b63\u8f93\u5165\u7ef4\u5ea6\u4e3a64\uff088x8\u56fe\u50cf\uff09\n        self.bn0 = nn.BatchNorm1d(num_units)     # \u6dfb\u52a0\u6279\u91cf\u5f52\u4e00\u5316\n        self.nonlin = nonlin\n        self.dropout = nn.Dropout(0.3)           # \u8c03\u6574dropout\u6bd4\u4f8b\n        self.dense1 = nn.Linear(num_units, num_units//2)  # \u65b0\u589e\u9690\u85cf\u5c42\n        self.dense2 = nn.Linear(num_units//2, num_units//4)\n        self.output = nn.Linear(num_units//4, 10)\n        self.softmax = nn.Softmax(dim=-1)\n\n    def forward(self, X, **kwargs):\n        X = self.nonlin(self.bn0(self.dense0(X)))\n        X = self.dropout(X)\n        X = self.nonlin(self.dense1(X))\n        X = self.nonlin(self.dense2(X))\n        X = self.softmax(self.output(X))\n        return X\n\n# \u4fee\u6539\u540e\u7684\u795e\u7ecf\u7f51\u7edc\u914d\u7f6e\nnet = NeuralNetClassifier(\n    MyModule,\n    max_epochs=20,            # \u589e\u52a0\u8bad\u7ec3\u8f6e\u6b21\n    lr=0.0005,                # \u8c03\u6574\u5b66\u4e60\u7387\n    optimizer=torch.optim.AdamW,  # \u4f7f\u7528\u66f4\u597d\u7684\u4f18\u5316\u5668\n    optimizer__weight_decay=0.001,  # \u6dfb\u52a0\u6743\u91cd\u8870\u51cf\n    iterator_train__shuffle=True,\n    device='cuda',\n)\n\n# \u4fee\u6539\u4e3a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff08\u6ce8\u610f\u8fd9\u662f\u56de\u5f52\u6a21\u578b\uff0c\u9700\u8981\u8f6c\u6362\u9884\u6d4b\u7ed3\u679c\u4e3a\u5206\u7c7b\uff09\nclf = LinearRegression()\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n# \u4fee\u6539\u6807\u51c6\u5316\u90e8\u5206\nX_train = (X_train / 16.0).astype(np.float32)  # \u4fdd\u6301float32\u7c7b\u578b\nX_test = (X_test / 16.0).astype(np.float32)\n\n# \u4fdd\u5b58\u539f\u59cb\u8bad\u7ec3\u548c\u6d4b\u8bd5\u6570\u636e\nX_train_orig = X_train.copy()\ny_train_orig = y_train.copy()\nX_test_orig = X_test.copy()  # \u65b0\u589e\u6d4b\u8bd5\u96c6\u5907\u4efd\n\n# \u539f\u59cb\u6570\u636e\u300110\u500d\u6570\u636e\u3001100\u500d\u6570\u636e\nfor i in range(3):\n    # \u901a\u8fc7\u590d\u5236\u6570\u636e\u589e\u52a0\u6837\u672c\u91cf\n    multiplier = 10 ** i\n    X_train = np.tile(X_train_orig, (multiplier, 1))\n    y_train = np.tile(y_train_orig, multiplier)\n    X_test = X_test_orig.copy()  # \u4fdd\u6301\u6d4b\u8bd5\u96c6\u4e0d\u53d8\n    \n    len_data = len(X_train)\n    for model in [net, clf]:\n        # \u5bf9\u6bd4sklearn\u548cskorch\u7684\u8bad\u7ec3\u65f6\u95f4\n        start_time = time.time()\n        net.fit(X_train, y_train)\n        accuracy = net.score(X_test, y_test)\n        end_time = time.time() - start_time\n        print(f\"{len_data}\u6761\u6570\u636e\u4e0b\uff0c{model.__class__.__name__}\u8bad\u7ec3\u65f6\u95f4: {end_time:.2f}\u79d2\uff0c\u51c6\u786e\u7387: {accuracy:.2f}\")\n'''\n1257\u6761\u6570\u636e\u4e0b\uff0cNeuralNetClassifier\u8bad\u7ec3\u65f6\u95f4: 1.26\u79d2\uff0c\u51c6\u786e\u7387: 0.98\n1257\u6761\u6570\u636e\u4e0b\uff0cLinearRegression\u8bad\u7ec3\u65f6\u95f4: 0.33\u79d2\uff0c\u51c6\u786e\u7387: 0.97\n\n12570\u6761\u6570\u636e\u4e0b\uff0cNeuralNetClassifier\u8bad\u7ec3\u65f6\u95f4: 2.91\u79d2\uff0c\u51c6\u786e\u7387: 0.98\n12570\u6761\u6570\u636e\u4e0b\uff0cLinearRegression\u8bad\u7ec3\u65f6\u95f4: 2.93\u79d2\uff0c\u51c6\u786e\u7387: 0.98\n\n125700\u6761\u6570\u636e\u4e0b\uff0cNeuralNetClassifier\u8bad\u7ec3\u65f6\u95f4: 32.05\u79d2\uff0c\u51c6\u786e\u7387: 0.99\n125700\u6761\u6570\u636e\u4e0b\uff0cLinearRegression\u8bad\u7ec3\u65f6\u95f4: 32.31\u79d2\uff0c\u51c6\u786e\u7387: 0.99\n'''\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u663e\u800c\u6613\u89c1\uff0c\u5728\u5904\u7406\u66f4\u591a\u6570\u636e\u65f6\uff0cskorch \u7684\u8bad\u7ec3\u65f6\u95f4\u5c0f\u4e8e sklearn \u7684\u8bad\u7ec3\u65f6\u95f4\u3002\u6570\u636e\u8d8a\u591a\uff0cskorch \u7684\u4f18\u52bf\u8d8a\u660e\u663e\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u63a5\u4e0b\u6765\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 skorch \u6765\u590d\u73b0\u66f4\u591a\u4e4b\u524d\u7684\u9879\u76ee\uff0c\u540c\u65f6\u719f\u6089Pytorch\u7684\u7528\u6cd5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4f1a\u5f00\u59cb\u4f7f\u7528pytorch\u6765\u5b8c\u6210\u66f4\u591a\u590d\u6742\u548c\u6709\u8da3\u7684\u4efb\u52a1\u3002"})]})}function p(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>a});var s=t(96540);const r={},i=s.createContext(r);function o(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);
"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[9743],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=c(n),f=a,u=m["".concat(l,".").concat(f)]||m[f]||p[f]||o;return n?r.createElement(u,s(s({ref:t},d),{},{components:n})):r.createElement(u,s({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6676:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={tags:["tensorflow","demo"]},s=void 0,i={unversionedId:"tfl",id:"tfl",title:"tfl",description:"\u4e00\u4e2a\u57fa\u4e8etensorflow\u7684\u5b9e\u65f6\u7684\u8c03\u7528\u6444\u50cf\u5934\u7684KNN\u5206\u7c7b\u5668\uff0c\u53ef\u4ee5\u5728\u7f51\u9875\u7aef\u8fd0\u884c\u3002",source:"@site/sheets/tfl.md",sourceDirName:".",slug:"/tfl",permalink:"/sheets/tfl",draft:!1,editUrl:"https://github.com/jiangmiemie/blog/blob/master/sheets/tfl.md",tags:[{label:"tensorflow",permalink:"/sheets/tags/tensorflow"},{label:"demo",permalink:"/sheets/tags/demo"}],version:"current",frontMatter:{tags:["tensorflow","demo"]},sidebar:"tutorialSidebar",previous:{title:"SVG vs AVIF",permalink:"/sheets/svgvsavif"},next:{title:"thinkeredger",permalink:"/sheets/thinkeredger"}},l={},c=[],d={toc:c},m="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u4e00\u4e2a\u57fa\u4e8etensorflow\u7684\u5b9e\u65f6\u7684\u8c03\u7528\u6444\u50cf\u5934\u7684KNN\u5206\u7c7b\u5668\uff0c\u53ef\u4ee5\u5728\u7f51\u9875\u7aef\u8fd0\u884c\u3002"),(0,a.kt)("p",null,"\u65b0\u5efa",(0,a.kt)("inlineCode",{parentName:"p"},".html"),"\u5e76\u5c06\u4e0b\u65b9\u4ee3\u7801\u590d\u5236\u8fdb\u53bb\uff0c\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u5373\u53ef\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"\n<html><head>\n    \x3c!-- Load the latest version of TensorFlow.js --\x3e\n    <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs\"><\/script>\n    <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow-models/mobilenet\"><\/script>\n    <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow-models/knn-classifier\"><\/script>\n</head>\n\n<body>\n    <div style=\"text-align:center\">\n        <div id=\"console\"></div>\n        \x3c!-- Add an image that we will use to test --\x3e\n        <video autoplay=\"\" playsinline=\"\" muted=\"\" id=\"webcam\" width=\"224\" height=\"224\"></video>\n        <br>\n        <button id=\"class-a\">Add A</button>\n        <button id=\"class-b\">Add B</button>\n        <button id=\"class-c\">Add C</button>\n\n        \x3c!-- Load index.js after the content of the page --\x3e\n        <p>\u4e00\u4e2a\u5b9e\u65f6\u7684\u8c03\u7528\u6444\u50cf\u5934\u7684KNN\u5206\u7c7b\u5668</p>\n        <p>\u8bf7\u5728\u8054\u7f51\u73af\u5883\u4e0b\u7528\u5148\u8fdb\u7684\u6d4f\u89c8\u5668\u6253\u5f00</p>\n        <p>1.\u7b49\u5f85\u6a21\u578b\u52a0\u8f7d\uff08\u52a0\u8f7d\u5b8c\u6210\u540e\u4f1a\u63d0\u793a\u4f7f\u7528\u6444\u50cf\u5934\uff09</p>\n        <p>2.\u70b9\u51fbAdd A\u5219\u83b7\u53d6\u5f53\u524d\u6444\u50cf\u5934\u622a\u56fe\u52a0\u5165A\u8bad\u7ec3\u96c6</p>\n        <p>3.\u4ee5\u6b64\u7c7b\u63a8</p>\n        <p>4.\u89c2\u5bdf\u5c4f\u5e55\u8f93\u51fa\u7684\u9884\u6d4b\u7ed3\u679c</p>\n        <p>\u5e95\u5c42\u7531tensorflow\u7f16\u5199</p>\n    </div>\n    <script>\n        const classifier = knnClassifier.create();\n        const webcamElement = document.getElementById('webcam');\n\n        async function app() {\n            console.log('Loading mobilenet..');\n\n            // Load the model.\n            net = await mobilenet.load();\n            console.log('Successfully loaded model');\n\n            // Create an object from Tensorflow.js data API which could capture image\n            // from the web camera as Tensor.\n            const webcam = await tf.data.webcam(webcamElement);\n\n            // Reads an image from the webcam and associates it with a specific class\n            // index.\n            const addExample = async classId => {\n                // Capture an image from the web camera.\n                const img = await webcam.capture();\n\n                // Get the intermediate activation of MobileNet 'conv_preds' and pass that\n                // to the KNN classifier.\n                const activation = net.infer(img, true);\n\n                // Pass the intermediate activation to the classifier.\n                classifier.addExample(activation, classId);\n\n                // Dispose the tensor to release the memory.\n                img.dispose();\n            };\n\n            // When clicking a button, add an example for that class.\n            document.getElementById('class-a').addEventListener('click', () => addExample(0));\n            document.getElementById('class-b').addEventListener('click', () => addExample(1));\n            document.getElementById('class-c').addEventListener('click', () => addExample(2));\n\n            while (true) {\n                if (classifier.getNumClasses() > 0) {\n                    const img = await webcam.capture();\n\n                    // Get the activation from mobilenet from the webcam.\n                    const activation = net.infer(img, 'conv_preds');\n                    // Get the most likely class and confidence from the classifier module.\n                    const result = await classifier.predictClass(activation);\n\n                    const classes = ['A', 'B', 'C'];\n                    document.getElementById('console').innerText = `\n    prediction: ${classes[result.label]}\\n\n    probability: ${result.confidences[result.label]}\n    `;\n\n                    // Dispose the tensor to release the memory.\n                    img.dispose();\n                }\n\n                await tf.nextFrame();\n            }\n        }\n\n        app();\n    <\/script>\n\n\n</body></html>\n\n")))}p.isMDXComponent=!0}}]);
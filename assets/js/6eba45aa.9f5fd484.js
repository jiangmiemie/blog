"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[3764],{82699:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=t(74848),s=t(28453);const r={title:"\u7528Flask\u642d\u5efa\u5c4f\u5e55\u5171\u4eab\u5de5\u5177",date:"2024-5-31",authors:"jiangmiemie",tags:["smarthome"],keywords:["smarthome"],description:"\u8bb0\u5f55\u4f7f\u7528flask\u642d\u5efa\u4e2a\u4eba\u5171\u4eab\u5c4f\u5e55\u5de5\u5177"},i=void 0,l={permalink:"/blog/2024/5/31/",source:"@site/blog/2024-5-31.md",title:"\u7528Flask\u642d\u5efa\u5c4f\u5e55\u5171\u4eab\u5de5\u5177",description:"\u8bb0\u5f55\u4f7f\u7528flask\u642d\u5efa\u4e2a\u4eba\u5171\u4eab\u5c4f\u5e55\u5de5\u5177",date:"2024-05-31T00:00:00.000Z",tags:[{inline:!0,label:"smarthome",permalink:"/blog/tags/smarthome"}],readingTime:6.275,hasTruncateMarker:!1,authors:[{name:"Allen",title:"software engineer",url:"https://github.com/jiangyangcreate",imageURL:"https://jiangmiemie.com/img/logo-192.svg",key:"jiangmiemie",page:null}],frontMatter:{title:"\u7528Flask\u642d\u5efa\u5c4f\u5e55\u5171\u4eab\u5de5\u5177",date:"2024-5-31",authors:"jiangmiemie",tags:["smarthome"],keywords:["smarthome"],description:"\u8bb0\u5f55\u4f7f\u7528flask\u642d\u5efa\u4e2a\u4eba\u5171\u4eab\u5c4f\u5e55\u5de5\u5177"},unlisted:!1,prevItem:{title:"\u6444\u50cf\u5934\u4e91\u53f0\u63a7\u5236\u6307\u4ee4\u89e3\u6790",permalink:"/blog/2024/6/30/"},nextItem:{title:"\u81ea\u5236\u667a\u80fd\u5bb6\u5c45\u6d41\u7a0b",permalink:"/blog/2024/4/30/"}},o={authorsImageUrls:[void 0]},d=[{value:"\u5b89\u88c5\u4f9d\u8d56",id:"\u5b89\u88c5\u4f9d\u8d56",level:2},{value:"\u9879\u76ee\u76ee\u5f55\u7ed3\u6784",id:"\u9879\u76ee\u76ee\u5f55\u7ed3\u6784",level:2},{value:"\u8def\u7531\u8bf4\u660e",id:"\u8def\u7531\u8bf4\u660e",level:2},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:2}];function m(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"\u5f53\u4f60\u7684\u7535\u8111\u65e0\u6cd5\u901a\u8fc7\u89c6\u9891\u7ebf\u8fde\u63a5\u5230\u7535\u89c6\u673a\uff0c\u53ef\u80fd\u662f\u7531\u4e8e\u7ebf\u7f06\u957f\u5ea6\u4e0d\u8db3\u6216\u8005\u63a5\u53e3\u4e0d\u517c\u5bb9\uff0c\u800c\u4f60\u7684\u7535\u89c6\u673a\u6070\u597d\u652f\u6301\u6d4f\u89c8\u5668\u529f\u80fd\u3002"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"\u5f53\u4f60\u5728\u5916\u9762\u53c2\u52a0\u57f9\u8bad\u6216\u4ea4\u6d41\u6d3b\u52a8\uff0c\u73b0\u573a\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2aWiFi\u7f51\u7edc\u3002\u5927\u5bb6\u521a\u521a\u719f\u6089\uff0c\u9a6c\u4e0a\u5c31\u8981\u5f00\u59cb\u5c4f\u5e55\u5206\u4eab\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u5feb\u901f\u7684\u65b9\u5f0f\u8ba9\u5927\u5bb6\u90fd\u80fd\u770b\u5230\u4f60\u7684\u5c4f\u5e55\u3002"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"\u8fd9\u4e2a\u65f6\u5019\uff0c\u4f60\u5c31\u9700\u8981\u4e00\u4e2a\u5de5\u5177\u6765\u6355\u83b7\u548c\u5206\u4eab\u4f60\u7684\u5c4f\u5e55\u548c\u97f3\u9891\uff08\u5305\u62ec\u8bbe\u5907\u97f3\u9891\u548c\u9ea6\u514b\u98ce\u8f93\u5165\uff09\uff0c\u5e76\u901a\u8fc7\u7f51\u9875\u5f62\u5f0f\u4e0e\u4ed6\u4eba\u5171\u4eab\u3002\u8fd9\u6837\uff0c\u89c2\u4f17\u65e0\u9700\u4e0b\u8f7d\u4efb\u4f55\u4f1a\u8bae\u8f6f\u4ef6\uff0c\u4ec5\u9700\u6253\u5f00\u6d4f\u89c8\u5668\u5373\u53ef\u89c2\u770b\u3002"}),"\n",(0,a.jsxs)(n.p,{children:["\u5f53\u7136\u6709\u65f6\u5019\u4f60\u9700\u8981\u63d0\u4f9b\u5fc5\u8981\u7684\u6587\u4ef6\uff0c\u6bd4\u5982\u4ee3\u7801\uff0c\u6587\u6863\u7b49\u3002\u6240\u4ee5\u8fd9\u4e2a\u7a0b\u5e8f\u8fd8\u5141\u8bb8\u4f60\u4e0a\u4f20\u4e0e\u4e0b\u8f7d\u6587\u4ef6\u3002\u4e0a\u4f20\u7684\u6587\u4ef6\u4f1a\u4fdd\u5b58\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u7684",(0,a.jsx)(n.code,{children:"upload"}),"\u6587\u4ef6\u5939\u4e2d\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4ece",(0,a.jsx)(n.code,{children:"upload"}),"\u6587\u4ef6\u5939\u4e2d\u4e0b\u8f7d\u6587\u4ef6\u3002"]}),"\n",(0,a.jsx)(n.h2,{id:"\u5b89\u88c5\u4f9d\u8d56",children:"\u5b89\u88c5\u4f9d\u8d56"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pip install flask opencv-python Pillow greenlet pyaudio Flask\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u9879\u76ee\u76ee\u5f55\u7ed3\u6784",children:"\u9879\u76ee\u76ee\u5f55\u7ed3\u6784"}),"\n",(0,a.jsx)(n.p,{children:"\u9879\u76ee\u4e0b\u6709\u4e24\u4e2a\u6587\u4ef6\u5939\uff1a templates \u548c uploads\u3002"}),"\n",(0,a.jsx)(n.p,{children:"templates \u6587\u4ef6\u5939\u4e2d\u5305\u542b\u4e00\u4e2a upload.html \u6587\u4ef6\uff0c\u7528\u4e8e\u9875\u9762\u5c55\u793a\u3002"}),"\n",(0,a.jsx)(n.p,{children:"uploads \u6587\u4ef6\u5939\u7528\u4e8e\u4fdd\u5b58\u4e0a\u4f20\u7684\u6587\u4ef6\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:"showLineNumbers",children:"your_project/\n\u251c\u2500\u2500 templates/\n\u2502   \u2514\u2500\u2500 upload.html\n\u2502   \u2514\u2500\u2500 stream.html\n\u251c\u2500\u2500 uploads/\n\u2514\u2500\u2500 app.py\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u8def\u7531\u8bf4\u660e",children:"\u8def\u7531\u8bf4\u660e"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"/"})," \u8def\u7531\u3002\u5b83\u5904\u7406\u6587\u4ef6\u4e0a\u4f20\u3001\u4e0b\u8f7d\u529f\u80fd\u3002"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"/d"})," \u8def\u7531\u3002\u5b83\u63d0\u4f9b\u684c\u9762\u89c6\u9891\u6d41+\u97f3\u9891\u6d41\u3002"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"/c"})," \u8def\u7531\u3002\u5b83\u63d0\u4f9b\u6444\u50cf\u5934\u89c6\u9891\u6d41+\u97f3\u9891\u6d41\u3002"]}),"\n",(0,a.jsx)(n.h2,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",metastring:'showLineNumbers title="upload.html"',children:'<!doctype html>\n<html lang="zh">\n<head>\n    <meta charset="UTF-8">\n    <title>\u4e0a\u4f20\u6587\u4ef6</title>\n</head>\n<body>\n    <h1>\u4e0a\u4f20\u6587\u4ef6</h1>\n    <form method="post" enctype="multipart/form-data">\n        <input type="file" name="file">\n        <input type="submit" value="\u4e0a\u4f20">\n    </form>\n    {% if filename %}\n        <p>\u6587\u4ef6\u4e0a\u4f20\u6210\u529f\uff01</p>\n        <a href="{{ url_for(\'download_file\', filename=filename) }}">\u4e0b\u8f7d {{ filename }}</a>\n    {% endif %}\n</body>\n</html>\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",metastring:'showLineNumbers title="stream.html"',children:'<!DOCTYPE html>\n<head>\n    <title>Intranet Broadcast</title>\n</head>\n\n<body>\n    <img id="video" src="{{ video_url }}" alt="\u89c6\u9891\u6d41">\n    <audio autoplay style="display:none;">\n        <source src="{{ audio_url }}" type="audio/x-wav; codec=pcm">Your browser does not support the audio\n        element.\n    </audio>\n</body>\n</html>\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'showLineNumbers title="app.py"',children:'from flask import Flask, render_template, request, send_from_directory, abort, Response,stream_with_context\nimport os\nimport time\nimport cv2\nimport numpy as np\nfrom PIL import ImageGrab\nimport threading\nfrom greenlet import getcurrent as get_ident\nimport pyaudio\nimport logging\n\nlogging.basicConfig(level=logging.INFO)\n\napp = Flask(__name__)\n\n# \u8bbe\u7f6e\u4e0a\u4f20\u6587\u4ef6\u5939\nUPLOAD_FOLDER = "uploads"\napp.config["UPLOAD_FOLDER"] = UPLOAD_FOLDER\n\n# \u6dfb\u52a0\u4e0b\u8f7d\u6587\u4ef6\u7684\u8def\u7531\n@app.route("/download/<filename>")\ndef download_file(filename):\n    try:\n        return send_from_directory(\n            app.config["UPLOAD_FOLDER"], filename, as_attachment=True\n        )\n    except FileNotFoundError:\n        abort(404)\n\n@app.route("/", methods=["GET", "POST"])\ndef upload_file():\n    if request.method == "POST":\n        if "file" not in request.files:\n            return "\u6ca1\u6709\u6587\u4ef6\u90e8\u5206"\n        file = request.files["file"]\n        if file.filename == "":\n            return "\u6ca1\u6709\u9009\u62e9\u6587\u4ef6"\n        if file:\n            filename = file.filename\n            file.save(os.path.join(app.config["UPLOAD_FOLDER"], filename))\n            return "\u6587\u4ef6\u4e0a\u4f20\u6210\u529f"\n    return render_template("upload.html")\n\n@app.route("/uploads/<filename>")\ndef uploaded_file(filename):\n    return send_from_directory(app.config["UPLOAD_FOLDER"], filename)\n\nclass Audio:\n    def __init__(self):\n        self.FORMAT = pyaudio.paInt16\n        self.CHANNELS = 2\n        self.RATE = 44100\n        self.CHUNK = 1024\n        self.bitsPerSample = 16\n        self.audio = pyaudio.PyAudio()\n        self.first_run = True\n        self.wav_header = self.genHeader(self.RATE, self.bitsPerSample, self.CHANNELS)\n        self.stream = self.audio.open(\n            format=self.FORMAT,\n            channels=self.CHANNELS,\n            rate=self.RATE,\n            input=True,\n            input_device_index=1,\n            frames_per_buffer=self.CHUNK,\n        )\n        self.get_audio = self._get_audio_first_time\n\n    def genHeader(self, sampleRate, bitsPerSample, channels):\n        datasize = 2000 * 10**6\n        o = bytes("RIFF", "ascii")\n        o += (datasize + 36).to_bytes(4, "little")\n        o += bytes("WAVE", "ascii")\n        o += bytes("fmt ", "ascii")\n        o += (16).to_bytes(4, "little")\n        o += (1).to_bytes(2, "little")\n        o += (channels).to_bytes(2, "little")\n        o += (sampleRate).to_bytes(4, "little")\n        o += (sampleRate * channels * bitsPerSample // 8).to_bytes(4, "little")\n        o += (channels * bitsPerSample // 8).to_bytes(2, "little")\n        o += (bitsPerSample).to_bytes(2, "little")\n        o += bytes("data", "ascii")\n        o += (datasize).to_bytes(4, "little")\n        return o\n\n    def _get_audio_first_time(self):\n        data = self.stream.read(self.CHUNK)\n        self.get_audio = self._get_audio_subsequent_times  # switch the method\n        return self.wav_header + data\n\n    def _get_audio_subsequent_times(self):\n        if self.stream:\n            data = self.stream.read(self.CHUNK)\n            shared_timestamp.update()  # \u66f4\u65b0\u65f6\u95f4\u6233\n            return data\n        else:\n            return b\'\\x00\' * self.CHUNK * 2  # \u8fd4\u56de\u9759\u97f3\u6570\u636e\n\nclass SharedTimestamp:\n    def __init__(self):\n        self.timestamp = 0\n        self.lock = threading.Lock()\n\n    def update(self):\n        with self.lock:\n            self.timestamp = time.time()\n\n    def get(self):\n        with self.lock:\n            return self.timestamp\n\nshared_timestamp = SharedTimestamp()\n\nclass CameraEvent(object):\n    def __init__(self):\n        self.events = {}\n        self.lock = threading.Lock()\n\n    def wait(self):\n        ident = get_ident()\n        with self.lock:\n            if ident not in self.events:\n                self.events[ident] = [threading.Event(), time.time()]\n            event = self.events[ident][0]\n        event.wait()\n\n    def set(self):\n        now = time.time()\n        with self.lock:\n            remove = []\n            for ident, event in self.events.items():\n                if not event[0].is_set():\n                    event[0].set()\n                    event[1] = now\n                else:\n                    if now - event[1] > 5:\n                        remove.append(ident)\n            for ident in remove:\n                del self.events[ident]\n\n    def clear(self):\n        ident = get_ident()\n        with self.lock:\n            if ident in self.events:\n                self.events[ident][0].clear()\n\nclass BaseCamera(object):\n    thread = None\n    frame = None\n    last_access = 0\n    event = CameraEvent()\n\n    def __init__(self):\n        if BaseCamera.thread is None:\n            BaseCamera.last_access = time.time()\n            BaseCamera.thread = threading.Thread(target=self._thread)\n            BaseCamera.thread.start()\n            while self.get_frame() is None:\n                time.sleep(0)\n\n    def get_frame(self):\n        BaseCamera.last_access = time.time()\n        BaseCamera.event.wait()\n        BaseCamera.event.clear()\n        return BaseCamera.frame\n\n    @staticmethod\n    def frames():\n        raise RuntimeError("Must be implemented by subclasses.")\n\n    @classmethod\n    def _thread(cls):\n        print("Starting camera thread.")\n        try:\n            frames_iterator = cls.frames()\n            for frame in frames_iterator:\n                BaseCamera.frame = frame\n                shared_timestamp.update()  # \u66f4\u65b0\u65f6\u95f4\u6233\n                BaseCamera.event.set()\n                time.sleep(0)\n                if time.time() - BaseCamera.last_access > 10:\n                    frames_iterator.close()\n                    print("Stopping camera thread due to inactivity.")\n                    break\n        except Exception as e:\n            print(f"Camera thread encountered an error: {e}")\n        finally:\n            BaseCamera.thread = None\n            cls.release_resources()\n\n    @classmethod\n    def release_resources(cls):\n        if hasattr(cls, \'cap\') and cls.cap.isOpened():\n            cls.cap.release()\n            print("Camera resources released.")\n\nclass Camera(BaseCamera):\n    cap = None\n\n    def __init__(self):\n        if Camera.cap is None:\n            Camera.cap = cv2.VideoCapture(0)\n        if not Camera.cap.isOpened():\n            logging.error("\u65e0\u6cd5\u6253\u5f00\u6444\u50cf\u5934")\n            raise RuntimeError("\u65e0\u6cd5\u6253\u5f00\u6444\u50cf\u5934")\n        super().__init__()\n\n    @staticmethod\n    def frames():\n        while True:\n            if Camera.cap is None:\n                Camera.cap = cv2.VideoCapture(0)\n            success, frame = Camera.cap.read()\n            if not success:\n                logging.error("\u65e0\u6cd5\u4ece\u6444\u50cf\u5934\u8bfb\u53d6\u5e27")\n                break\n            else:\n                ret, jpeg = cv2.imencode(\'.jpg\', frame)\n                if not ret:\n                    logging.error("\u65e0\u6cd5\u7f16\u7801\u56fe\u50cf")\n                    continue\n                yield jpeg.tobytes()\n\n    @classmethod\n    def release_resources(cls):\n        if cls.cap is not None:\n            cls.cap.release()\n            cls.cap = None\n            logging.info("\u6444\u50cf\u5934\u8d44\u6e90\u5df2\u91ca\u653e")\n\nclass DesktopCapture(BaseCamera):\n    @staticmethod\n    def frames():\n        while True:\n            screen = np.array(ImageGrab.grab())\n            frame = cv2.cvtColor(screen, cv2.COLOR_RGB2BGR)\n            ret, jpeg = cv2.imencode(\'.jpg\', frame)\n            if not ret:\n                logging.error("\u65e0\u6cd5\u7f16\u7801\u684c\u9762\u56fe\u50cf")\n                continue\n            yield jpeg.tobytes()\n\ndef gen_video(camera):\n    while True:\n        frame = camera.get_frame()\n        timestamp = shared_timestamp.get()\n        yield frame\n\ndef gen_audio(audio):\n    while True:\n        data = audio.get_audio()\n        timestamp = shared_timestamp.get()\n        yield data\n\n@app.route("/c_video")\ndef camera_video_feed():\n    return Response(gen_video(Camera()))\n\n@app.route("/d_video")\ndef desktop_video_feed():\n    return Response(gen_video(DesktopCapture()))\n\n@app.route("/audio_feed")\ndef audio_feed():\n    return Response(gen_audio(Audio()))\n\n@app.route("/c")\ndef camera_page():\n    return render_template("stream.html", video_url="/c_video", audio_url="/audio_feed")\n\n@app.route("/d")\ndef desktop_page():\n    return render_template("stream.html", video_url="/d_video", audio_url="/audio_feed")\n\nif __name__ == "__main__":\n    try:\n        os.makedirs(UPLOAD_FOLDER, exist_ok=True)\n        local_host = "127.0.0.1"\n        ip_host = "0.0.0.0"\n        port = 8001\n        app.run(threaded=True, host=ip_host, port=port, debug=True)\n    except Exception as e:\n        logging.error(f"\u53d1\u751f\u9519\u8bef: {e}")\n        # \u53ef\u4ee5\u9009\u62e9\u5728\u8fd9\u91cc\u4fdd\u6301\u7a0b\u5e8f\u8fd0\u884c\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var a=t(96540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[3906],{3905:(n,t,e)=>{e.d(t,{Zo:()=>p,kt:()=>_});var l=e(7294);function a(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function r(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,l)}return e}function i(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?r(Object(e),!0).forEach((function(t){a(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function o(n,t){if(null==n)return{};var e,l,a=function(n,t){if(null==n)return{};var e,l,a={},r=Object.keys(n);for(l=0;l<r.length;l++)e=r[l],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(l=0;l<r.length;l++)e=r[l],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(a[e]=n[e])}return a}var s=l.createContext({}),d=function(n){var t=l.useContext(s),e=t;return n&&(e="function"==typeof n?n(t):i(i({},t),n)),e},p=function(n){var t=d(n.components);return l.createElement(s.Provider,{value:t},n.children)},m="mdxType",f={inlineCode:"code",wrapper:function(n){var t=n.children;return l.createElement(l.Fragment,{},t)}},u=l.forwardRef((function(n,t){var e=n.components,a=n.mdxType,r=n.originalType,s=n.parentName,p=o(n,["components","mdxType","originalType","parentName"]),m=d(e),u=a,_=m["".concat(s,".").concat(u)]||m[u]||f[u]||r;return e?l.createElement(_,i(i({ref:t},p),{},{components:e})):l.createElement(_,i({ref:t},p))}));function _(n,t){var e=arguments,a=t&&t.mdxType;if("string"==typeof n||a){var r=e.length,i=new Array(r);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=n,o[m]="string"==typeof n?n:a,i[1]=o;for(var d=2;d<r;d++)i[d]=e[d];return l.createElement.apply(null,i)}return l.createElement.apply(null,e)}u.displayName="MDXCreateElement"},2107:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>f,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var l=e(7462),a=(e(7294),e(3905));const r={},i="\u7ae0\u8282\u7ec3\u4e60",o={unversionedId:"\u7b2c2\u90e8\u5206Python\u9ad8\u7ea7\u7f16\u7a0b/8\u7ae0\u8282\u7ec3\u4e60",id:"\u7b2c2\u90e8\u5206Python\u9ad8\u7ea7\u7f16\u7a0b/8\u7ae0\u8282\u7ec3\u4e60",title:"\u7ae0\u8282\u7ec3\u4e60",description:"\u4e0d\u4f7f\u7528\u7b2c\u4e09\u65b9\u6a21\u5757\u7684\u524d\u63d0\u4e0b\uff0c\u5b8c\u6210\u5bf924\u4f4dbmp\u56fe\u50cf\u7684\u56fe\u50cf\u6570\u636e\u5206\u6790\u4e0e\u50cf\u7d20\u8bfb\u53d6\u3002",source:"@site/course/\u7b2c2\u90e8\u5206Python\u9ad8\u7ea7\u7f16\u7a0b/8\u7ae0\u8282\u7ec3\u4e60.md",sourceDirName:"\u7b2c2\u90e8\u5206Python\u9ad8\u7ea7\u7f16\u7a0b",slug:"/\u7b2c2\u90e8\u5206Python\u9ad8\u7ea7\u7f16\u7a0b/8\u7ae0\u8282\u7ec3\u4e60",permalink:"/course/\u7b2c2\u90e8\u5206Python\u9ad8\u7ea7\u7f16\u7a0b/8\u7ae0\u8282\u7ec3\u4e60",draft:!1,editUrl:"https://github.com/jiangmiemie/blog/blob/master/course/\u7b2c2\u90e8\u5206Python\u9ad8\u7ea7\u7f16\u7a0b/8\u7ae0\u8282\u7ec3\u4e60.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u7b2c\u4e09\u65b9\u6a21\u5757\u7684\u4f7f\u7528",permalink:"/course/\u7b2c2\u90e8\u5206Python\u9ad8\u7ea7\u7f16\u7a0b/7\u7b2c\u4e09\u65b9\u6a21\u5757\u7684\u4f7f\u7528"},next:{title:"K\u5747\u503c\u7b97\u6cd5",permalink:"/course/\u7b2c3\u90e8\u5206\u7b97\u6cd5\u5165\u95e8/1K\u5747\u503c\u7b97\u6cd5"}},s={},d=[{value:"BMP\u56fe\u7247\u683c\u5f0f",id:"bmp\u56fe\u7247\u683c\u5f0f",level:2},{value:"bit\u548cbyte\u7684\u533a\u522b",id:"bit\u548cbyte\u7684\u533a\u522b",level:2},{value:"\u6570\u636e\u4e0e\u4e8c\u8fdb\u5236\u8f6c\u5316",id:"\u6570\u636e\u4e0e\u4e8c\u8fdb\u5236\u8f6c\u5316",level:2}],p={toc:d},m="wrapper";function f(n){let{components:t,...e}=n;return(0,a.kt)(m,(0,l.Z)({},p,e,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u7ae0\u8282\u7ec3\u4e60"},"\u7ae0\u8282\u7ec3\u4e60"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\'\'\'\n\u521b\u5efa\u4e00\u4e2a\u56fe\u4e66\u9986\u7cfb\u7edf\uff0c\u8981\u6c42\u5982\u4e0b\uff1a\n1. \u6709\u4e24\u4e2a\u7c7b\uff1a\u7528\u6237\u7c7b\u548c\u56fe\u4e66\u7c7b\n2. \u7528\u6237\u7c7b\u6709\u5c5e\u6027\uff1a\u59d3\u540d\u3001\u5e74\u9f84\u3001\u6027\u522b\u3001\u501f\u4e66\u6570\u91cf\u3001\u501f\u4e66\u5217\u8868\n3. \u56fe\u4e66\u7c7b\u6709\u5c5e\u6027\uff1a\u4e66\u540d\u3001\u4f5c\u8005\u3001\u51fa\u7248\u793e\u3001\u4ef7\u683c\u3001\u72b6\u6001\uff08\u662f\u5426\u88ab\u501f\u51fa\uff09\n4. \u7528\u6237\u7c7b\u6709\u65b9\u6cd5\uff1a\u501f\u4e66\u3001\u8fd8\u4e66\n5. \u56fe\u4e66\u7c7b\u6709\u65b9\u6cd5\uff1a\u501f\u51fa\u3001\u5f52\u8fd8\n6. \u7528\u6237\u7c7b\u548c\u56fe\u4e66\u7c7b\u7684\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981\u5bf9\u7528\u6237\u7684\u501f\u4e66\u6570\u91cf\u548c\u56fe\u4e66\u7684\u72b6\u6001\u8fdb\u884c\u5224\u65ad\n7. \u7528\u6237\u7c7b\u548c\u56fe\u4e66\u7c7b\u7684\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981\u5bf9\u7528\u6237\u7684\u501f\u4e66\u5217\u8868\u548c\u56fe\u4e66\u7684\u72b6\u6001\u8fdb\u884c\u4fee\u6539\n8. \u7528\u6237\u7c7b\u548c\u56fe\u4e66\u7c7b\u7684\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981\u6253\u5370\u51fa\u7528\u6237\u7684\u501f\u4e66\u5217\u8868\u548c\u56fe\u4e66\u7684\u72b6\u6001\n9. \u4f7f\u7528\u56fe\u5f62\u5316\u754c\u9762\u5de5\u5177\uff0c\u5982tkinter\n\u5b89\u88c5\u547d\u4ee4 pip install tkinter-page\n\'\'\'\n\nfrom tkinter import *\n\n"""pip install tkinter-page"""\n\n\n\nclass Book:\n    def __init__(self, name, author, comment, state=0):\n        self.name = name\n        self.author = author\n        self.comment = comment\n        self.state = state\n\n    def __str__(self):\n        status = "\u672a\u501f\u51fa"\n        if self.state == 1:\n            status = "\u5df2\u501f\u51fa"\n        return "\\n\u540d\u79f0\uff1a\u300a%s\u300b \\n\u4f5c\u8005\uff1a%s \\n\u63a8\u8350\u8bed\uff1a%s\\n\u72b6\u6001\uff1a%s \\n---------" % (\n            self.name,\n            self.author,\n            self.comment,\n            status,\n        )\n\n\nclass BookManager:\n    books = []\n\n    def __init__(self, init_window_name):\n        self.init_window_name = init_window_name  # \u7a97\u53e3\n        book1 = Book("\u60f6\u7136\u5f55", "\u8d39\u5c14\u5357\u591a\xb7\u4f69\u7d22\u963f", "\u4e00\u4e2a\u8ff7\u5931\u65b9\u5411\u4e14\u6fd2\u4e8e\u5d29\u6e83\u7684\u7075\u9b42\u7684\u81ea\u6211\u542f\u793a\uff0c\u4e00\u9996\u5bf9\u9ed8\u9ed8\u65e0\u95fb\u3001\u5931\u8d25\u3001\u667a\u6167\u3001\u56f0\u96be\u548c\u6c89\u9ed8\u7684\u8d5e\u7f8e\u8bd7\u3002")\n        book2 = Book("\u4ee5\u7bad\u4e3a\u7fc5", "\u7b80\u5a9c", "\u8c03\u548c\u7a7a\u7075\u6587\u98ce\u4e0e\u7985\u5b97\u5883\u754c\uff0c\u523b\u753b\u4eba\u95f4\u4e4b\u7f18\u8d77\u7f18\u706d\u3002\u50cf\u4e00\u6761\u67d4\u97e7\u7684\u7ef3\u5b50\uff0c\u60c5\u8fd9\u4e2a\u5b57\uff0c\u4e0d\u77e5\u52d2\u75db\u591a\u5c11\u4eba\u7684\u5fc3\u8089\u3002")\n        book3 = Book(\n            "\u5fc3\u662f\u5b64\u72ec\u7684\u730e\u624b", "\u5361\u68ee\xb7\u9ea6\u5361\u52d2\u65af", "\u6211\u4eec\u6e34\u671b\u503e\u8bc9\uff0c\u5374\u4ece\u672a\u503e\u542c\u3002\u5973\u5b69\u3001\u9ed1\u4eba\u3001\u54d1\u5df4\u3001\u9189\u9b3c\u3001\u9ccf\u592b\u7684\u5b64\u72ec\u5f62\u6001\u5404\u5f02\uff0c\u5374\u4ece\u672a\u9000\u573a\u3002", 1\n        )\n        self.books.append(book1)\n        self.books.append(book2)\n        self.books.append(book3)\n\n    # \u8bbe\u7f6e\u7a97\u53e3\n    def set_init_window(self):\n        self.init_window_name.title("\u6d41\u6d6a\u56fe\u4e66\u9986_\u53ef\u89c6\u5316+\u6570\u636e\u5e931.0")  # \u7a97\u53e3\u540d\n        self.init_window_name.geometry("450x300+10+10")\n\n        self.result_data_Text = Text(\n            self.init_window_name, width=35, height=15\n        )  # \u5904\u7406\u7ed3\u679c\u5c55\u793a\n        self.result_data_Text.grid(row=1, column=12, rowspan=15, columnspan=10)\n\n        self.mianbutton1 = Button(\n            self.init_window_name,\n            text="\u67e5\u8be2\u6240\u6709\u4e66\u7c4d",\n            bg="lightblue",\n            width=20,\n            command=self.show_all_book,\n        )  # \u8c03\u7528\u5185\u90e8\u65b9\u6cd5  \u52a0()\u4e3a\u76f4\u63a5\u8c03\u7528\n        self.mianbutton2 = Button(\n            self.init_window_name,\n            text="\u6dfb\u52a0\u4e66\u7c4d",\n            bg="lightblue",\n            width=20,\n            command=self.add_book,\n        )  # \u8c03\u7528\u5185\u90e8\u65b9\u6cd5  \u52a0()\u4e3a\u76f4\u63a5\u8c03\u7528\n        self.mianbutton3 = Button(\n            self.init_window_name,\n            text="\u501f\u9605\u4e66\u7c4d",\n            bg="lightblue",\n            width=20,\n            command=self.lend_book,\n        )  # \u8c03\u7528\u5185\u90e8\u65b9\u6cd5  \u52a0()\u4e3a\u76f4\u63a5\u8c03\u7528\n        self.mianbutton4 = Button(\n            self.init_window_name,\n            text="\u5f52\u8fd8\u4e66\u7c4d",\n            bg="lightblue",\n            width=20,\n            command=self.return_book,\n        )  # \u8c03\u7528\u5185\u90e8\u65b9\u6cd5  \u52a0()\u4e3a\u76f4\u63a5\u8c03\u7528\n        self.mianbutton1.grid(row=1, column=11)\n        self.mianbutton2.grid(row=3, column=11)\n        self.mianbutton3.grid(row=5, column=11)\n        self.mianbutton4.grid(row=7, column=11)\n\n    # \u529f\u80fd\u51fd\u6570\n    def show_all_book(self):\n        self.result_data_Text.delete(0.0, END)\n        for book in self.books:\n            self.result_data_Text.insert(1.0, book)\n\n    def add_book(self):\n        top = Tk()\n        top.title("\u6dfb\u52a0")\n        top.geometry("300x120+450+10")\n        self.L1 = Label(top, text="\u8bf7\u8f93\u5165\u4e66\u7c4d\u540d\u79f0\uff1a")\n        self.E1 = Entry(top, bd=5)\n        self.L2 = Label(top, text="\u8bf7\u8f93\u5165\u4f5c\u8005\u540d\u79f0\uff1a")\n        self.E2 = Entry(top, bd=5)\n        self.L3 = Label(top, text="\u8bf7\u8f93\u5165\u4e66\u7c4d\u63a8\u8350\u8bed\uff1a")\n        self.E3 = Entry(top, bd=5)\n        self.L1.place(x=0, y=0)\n        self.L2.place(x=0, y=30)\n        self.L3.place(x=0, y=60)\n        self.E1.place(x=120, y=0)\n        self.E2.place(x=120, y=30)\n        self.E3.place(x=120, y=60)\n        self.B = Button(top, text="\u8f93\u5165\u5b8c\u6bd5\u8bf7\u70b9\u51fb\u786e\u8ba4,\u65e0\u9700\u7ee7\u7eed\u8f93\u5165\u8bf7\u5173\u95ed\u7a97\u53e3", command=self.add_booking)\n        self.B.pack(side=BOTTOM)\n\n    def add_booking(self):\n        new_name = self.E1.get()\n        new_author = self.E2.get()\n        new_comment = self.E3.get()\n        self.result_data_Text.delete(0.0, END)\n        new_book = Book(new_name, new_author, new_comment)\n        self.books.append(new_book)\n        self.result_data_Text.insert(1.0, new_name + "\u5f55\u5165\u6210\u529f\uff01\\n")\n\n    def check_book(self, name):\n        for book in self.books:\n            if book.name == name:\n                return book\n        else:\n            return None\n\n    def lend_book(self):\n        toplend = Tk()\n        toplend.title("\u501f\u9605")\n        toplend.geometry("330x50+450+30")\n        self.lendE1 = Entry(toplend, bd=5)\n        self.lendE1.pack(side=RIGHT)\n        self.lendB1 = Button(toplend, text="\u8f93\u5165\u4e66\u540d\uff0c\u8f93\u5165\u5b8c\u6bd5\u8bf7\u70b9\u51fb", command=self.lend_booking)\n        self.lendB1.pack(side=LEFT)\n\n    def lend_booking(self):\n        name = self.lendE1.get()\n        res = self.check_book(name)\n        self.result_data_Text.delete(0.0, END)\n        if res != None:\n            if res.state == 1:\n                self.result_data_Text.insert(1.0, "\u4f60\u6765\u665a\u4e86\u4e00\u6b65\uff0c\u8fd9\u672c\u4e66\u5df2\u7ecf\u88ab\u501f\u8d70\u4e86\u5662")\n            else:\n                self.result_data_Text.insert(1.0, "\u501f\u9605\u6210\u529f\uff0c\u501f\u4e86\u4e0d\u770b\u4f1a\u53d8\u80d6\u5662\uff5e")\n                res.state = 1\n        else:\n            self.result_data_Text.insert(1.0, "\u8fd9\u672c\u4e66\u6682\u65f6\u6ca1\u6709\u6536\u5f55\u5728\u7cfb\u7edf\u91cc\u5462")\n\n    def return_book(self):\n        topreturn = Tk()\n        topreturn.title("\u5f52\u8fd8")\n        topreturn.geometry("330x50+450+30")\n        self.returnE1 = Entry(topreturn, bd=5)\n        self.returnE1.pack(side=RIGHT)\n        self.returnB1 = Button(\n            topreturn, text="\u8f93\u5165\u4e66\u540d\uff0c\u5b8c\u6bd5\u8bf7\u70b9\u51fb", command=self.return_booking\n        )\n        self.returnB1.pack(side=LEFT)\n\n    def return_booking(self):\n        name = self.returnE1.get()\n        res = self.check_book(name)  # \u8c03\u7528check_book\u65b9\u6cd5\uff0c\u5c06\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9\u53d8\u91cfres\n        self.result_data_Text.delete(0.0, END)\n        if res == None:  # \u5982\u679c\u8fd4\u56de\u7684\u662f\u7a7a\u503c\uff0c\u5373\u8fd9\u672c\u4e66\u7684\u4e66\u540d\u4e0d\u5728\u7cfb\u7edf\u91cc\n            self.result_data_Text.insert(1.0, "\u6ca1\u6709\u8fd9\u672c\u4e66\u5662\uff0c\u4f60\u6050\u6015\u8f93\u9519\u4e86\u4e66\u540d\uff5e")\n        else:  # \u5982\u679c\u8fd4\u56de\u7684\u662f\u5b9e\u4f8b\u5bf9\u8c61\n            if res.state == 0:  # \u5982\u679c\u5b9e\u4f8b\u5c5e\u6027state\u7b49\u4e8e0\uff0c\u5373\u8fd9\u672c\u4e66\u7684\u501f\u9605\u72b6\u6001\u4e3a\'\u672a\u501f\u51fa\'\n                self.result_data_Text.insert(1.0, "\u8fd9\u672c\u4e66\u6ca1\u6709\u88ab\u501f\u8d70\uff0c\u5728\u7b49\u5f85\u6709\u7f18\u4eba\u7684\u5782\u9752\u5462\uff01")\n            else:  # \u5982\u679c\u5b9e\u4f8b\u5c5e\u6027state\u7b49\u4e8e1\uff0c\u5373\u72b6\u6001\u4e3a\'\u5df2\u501f\u51fa\'\n                self.result_data_Text.insert(1.0, "\u5f52\u8fd8\u6210\u529f\uff01")\n                res.state = 0  # \u5f52\u8fd8\u540e\u4e66\u7c4d\u501f\u9605\u72b6\u6001\u4e3a0\uff0c\u91cd\u7f6e\u4e3a\'\u672a\u501f\u51fa\'\n\n\ndef gui_start():\n    init_window = Tk()  # \u5b9e\u4f8b\u5316\u51fa\u4e00\u4e2a\u7236\u7a97\u53e3\n    ZMJ_PORTAL = BookManager(init_window)  # \u8bbe\u7f6e\u6839\u7a97\u53e3\u9ed8\u8ba4\u5c5e\u6027\n    ZMJ_PORTAL.set_init_window()\n    init_window.mainloop()  # \u7236\u7a97\u53e3\u8fdb\u5165\u4e8b\u4ef6\u5faa\u73af\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4fdd\u6301\u7a97\u53e3\u8fd0\u884c\uff0c\u5426\u5219\u754c\u9762\u4e0d\u5c55\u793a\n\n\ngui_start()\n\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\'\'\'\n\u521b\u5efa\u4e00\u4e2a\u56fe\u4e66\u9986\u7cfb\u7edf\uff0c\u8981\u6c42\u5982\u4e0b\uff1a\n1. \u6709\u4e24\u4e2a\u7c7b\uff1a\u7528\u6237\u7c7b\u548c\u56fe\u4e66\u7c7b\n2. \u7528\u6237\u7c7b\u6709\u5c5e\u6027\uff1a\u59d3\u540d\u3001\u5e74\u9f84\u3001\u6027\u522b\u3001\u501f\u4e66\u6570\u91cf\u3001\u501f\u4e66\u5217\u8868\n3. \u56fe\u4e66\u7c7b\u6709\u5c5e\u6027\uff1a\u4e66\u540d\u3001\u4f5c\u8005\u3001\u51fa\u7248\u793e\u3001\u4ef7\u683c\u3001\u72b6\u6001\uff08\u662f\u5426\u88ab\u501f\u51fa\uff09\n4. \u7528\u6237\u7c7b\u6709\u65b9\u6cd5\uff1a\u501f\u4e66\u3001\u8fd8\u4e66\n5. \u56fe\u4e66\u7c7b\u6709\u65b9\u6cd5\uff1a\u501f\u51fa\u3001\u5f52\u8fd8\n6. \u7528\u6237\u7c7b\u548c\u56fe\u4e66\u7c7b\u7684\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981\u5bf9\u7528\u6237\u7684\u501f\u4e66\u6570\u91cf\u548c\u56fe\u4e66\u7684\u72b6\u6001\u8fdb\u884c\u5224\u65ad\n7. \u7528\u6237\u7c7b\u548c\u56fe\u4e66\u7c7b\u7684\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981\u5bf9\u7528\u6237\u7684\u501f\u4e66\u5217\u8868\u548c\u56fe\u4e66\u7684\u72b6\u6001\u8fdb\u884c\u4fee\u6539\n8. \u7528\u6237\u7c7b\u548c\u56fe\u4e66\u7c7b\u7684\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981\u6253\u5370\u51fa\u7528\u6237\u7684\u501f\u4e66\u5217\u8868\u548c\u56fe\u4e66\u7684\u72b6\u6001\n9.\u3010\u4f7f\u7528\u6570\u636e\u5e93\u5b58\u50a8\u4fe1\u606f\u81ea\u52a8\u4fdd\u5b58\u5728\u684c\u9762\u3011\n\'\'\'\n\nfrom tkinter import *\n\n"""\n\u63d0\u524d\u5b89\u88c5\u597d\u6a21\u5757:pip install tkinter-page\n\u9700\u8981\u638c\u63e1\u7684\u77e5\u8bc6\uff1aPython\u57fa\u7840\u3001Mysql\u547d\u4ee4\u3001os\u6a21\u5757\u3001tkinter\u6a21\u5757\n"""\nfrom tkinter import *\nimport sqlite3\nimport os\n\n\nclass db:\n    def addmysql(name, author, comment, state):  # \u6dfb\u52a0\u6570\u636e\n        Desktoppath = "./StrayLibrary/book.db"\n        db = sqlite3.connect(Desktoppath)  # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807\n        cursor = db.cursor()  # SQL \u63d2\u5165\u8bed\u53e5\n        sql = "INSERT INTO EMPLOYEE(name,author,comment,state)VALUES (\'{}\',\'{}\',\'{}\',\'{}\')".format(\n            name, author, comment, state\n        )\n        try:  # \u6267\u884csql\u8bed\u53e5\n            cursor.execute(sql)  # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c\n            db.commit()\n        except:  # Rollback in case there is any error\n            db.rollback()\n        db.close()  # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\n\n    def changemysql(state, name):  # \u66f4\u6539\u6570\u636e\u72b6\u6001\n        Desktoppath = "./StrayLibrary/book.db"\n        db = sqlite3.connect(Desktoppath)\n        cursor = db.cursor()  # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807\n        sql = "UPDATE EMPLOYEE SET state = \'%s\' where name = \'%s\' " % (state, name)\n        try:\n            cursor.execute(sql)\n            db.commit()\n        except:\n            pass\n        db.close()\n\n    def checkmysql():  # \u68c0\u7d22\u6570\u636e\u5e93\n        Desktoppath = "./StrayLibrary/book.db"\n        db = sqlite3.connect(Desktoppath)\n        cursor = db.cursor()  # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807\n        sql = "SELECT * FROM EMPLOYEE"  # SQL \u67e5\u8be2\u8bed\u53e5\n        try:\n            cursor.execute(sql)  # \u83b7\u53d6\u6240\u6709\u8bb0\u5f55\u5217\u8868\n            results = cursor.fetchall()\n            return results\n        except:\n            pass\n        db.close()\n\n    def bulildmysql():\n        try:\n            os.makedirs("./StrayLibrary")  # \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\n            Desktoppath = "./StrayLibrary/book.db"  # \u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\n            file = open(Desktoppath, "w")\n            file.close()\n\n            db = sqlite3.connect(Desktoppath)\n            cursor = db.cursor()  # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807\n            cursor.execute(\n                "DROP TABLE IF EXISTS EMPLOYEE"\n            )  # \u5982\u679c\u6570\u636e\u8868\u5df2\u7ecf\u5b58\u5728\u4f7f\u7528 execute() \u65b9\u6cd5\u5220\u9664\u8868\u3002\n            sql = """CREATE TABLE EMPLOYEE (name  TEXT(255),author  TEXT(255),comment TEXT(255),state TEXT(255))"""\n            cursor.execute(sql)  # \u521b\u5efa\u6570\u636e\u8868SQL\u8bed\u53e5\n            db.close()\n            db.addmysql(\n                "\u60f6\u7136\u5f55", "\u8d39\u5c14\u5357\u591a\xb7\u4f69\u7d22\u963f", "\u4e00\u4e2a\u8ff7\u5931\u65b9\u5411\u4e14\u6fd2\u4e8e\u5d29\u6e83\u7684\u7075\u9b42\u7684\u81ea\u6211\u542f\u793a\u3001\u4e00\u9996\u5bf9\u9ed8\u9ed8\u65e0\u95fb\u3001\u5931\u8d25\u3001\u667a\u6167\u3001\u56f0\u96be\u548c\u6c89\u9ed8\u7684\u8d5e\u7f8e\u8bd7\u3002", "\u672a\u501f\u51fa"\n            )\n            db.addmysql(\n                "\u4ee5\u7bad\u4e3a\u7fc5", "\u7b80\u5a9c", "\u8c03\u548c\u7a7a\u7075\u6587\u98ce\u4e0e\u7985\u5b97\u5883\u754c\uff0c\u523b\u753b\u4eba\u95f4\u4e4b\u7f18\u8d77\u7f18\u706d\u3002\u50cf\u4e00\u6761\u67d4\u97e7\u7684\u7ef3\u5b50\uff0c\u60c5\u8fd9\u4e2a\u5b57\uff0c\u4e0d\u77e5\u52d2\u75db\u591a\u5c11\u4eba\u7684\u5fc3\u8089\u3002", "\u672a\u501f\u51fa"\n            )\n            db.addmysql(\n                "\u5fc3\u662f\u5b64\u72ec\u7684\u730e\u624b", "\u5361\u68ee\xb7\u9ea6\u5361\u52d2\u65af", "\u6211\u4eec\u6e34\u671b\u503e\u8bc9\uff0c\u5374\u4ece\u672a\u503e\u542c\u3002\u5973\u5b69\u3001\u9ed1\u4eba\u3001\u54d1\u5df4\u3001\u9189\u9b3c\u3001\u9ccf\u592b\u7684\u5b64\u72ec\u5f62\u6001\u5404\u5f02\uff0c\u5374\u4ece\u672a\u9000\u573a\u3002", "\u5df2\u501f\u51fa"\n            )\n        except:\n            pass\n\n\nclass Book:\n    def __init__(self, name, author, comment, state):\n        self.name = name\n        self.author = author\n        self.comment = comment\n        self.state = state\n\n    def __str__(self):\n        return "\\n\u540d\u79f0\uff1a\u300a%s\u300b \\n\u4f5c\u8005\uff1a%s \\n\u63a8\u8350\u8bed\uff1a%s\\n\u72b6\u6001\uff1a%s \\n---------" % (\n            self.name,\n            self.author,\n            self.comment,\n            self.state,\n        )\n\n\nclass StrayLibrary:\n    books = []\n\n    def __init__(self, init_window_name):\n        self.init_window_name = init_window_name\n        results = db.checkmysql()\n        for row in results:\n            name = row[0]\n            author = row[1]\n            comment = row[2]\n            state = row[3]\n            book1 = Book(name, author, comment, state)\n            self.books.append(book1)\n\n    def set_init_window(self):  # \u8bbe\u7f6e\u7a97\u53e3\n        self.init_window_name.title("\u6d41\u6d6a\u56fe\u4e66\u9986(StrayLibrary)")  # \u7a97\u53e3\u540d\n        self.init_window_name.geometry("450x260+10+10")\n        self.result_data_Text = Text(\n            self.init_window_name, width=35, height=15\n        )  # \u5904\u7406\u7ed3\u679c\u5c55\u793a\n        self.result_data_Text.grid(row=1, column=12, rowspan=7, columnspan=7)\n\n        self.mianbutton1 = Button(\n            self.init_window_name,\n            text="\u67e5\u8be2(check)",\n            bg="DodgerBlue",\n            width=20,\n            command=self.show_all_book,\n        )  # \u8c03\u7528\u5185\u90e8\u65b9\u6cd5  \u52a0()\u4e3a\u76f4\u63a5\u8c03\u7528\n        self.mianbutton2 = Button(\n            self.init_window_name,\n            text="\u6dfb\u52a0(add)",\n            bg="DodgerBlue",\n            width=20,\n            command=self.add_book,\n        )  # \u8c03\u7528\u5185\u90e8\u65b9\u6cd5  \u52a0()\u4e3a\u76f4\u63a5\u8c03\u7528\n        self.mianbutton3 = Button(\n            self.init_window_name,\n            text="\u501f\u9605(lend)",\n            bg="DodgerBlue",\n            width=20,\n            command=self.lend_book,\n        )  # \u8c03\u7528\u5185\u90e8\u65b9\u6cd5  \u52a0()\u4e3a\u76f4\u63a5\u8c03\u7528\n        self.mianbutton4 = Button(\n            self.init_window_name,\n            text="\u5f52\u8fd8(return)",\n            bg="DodgerBlue",\n            width=20,\n            command=self.return_book,\n        )  # \u8c03\u7528\u5185\u90e8\u65b9\u6cd5  \u52a0()\u4e3a\u76f4\u63a5\u8c03\u7528\n        self.mianbutton1.grid(row=1, column=11)\n        self.mianbutton2.grid(row=3, column=11)\n        self.mianbutton3.grid(row=5, column=11)\n        self.mianbutton4.grid(row=7, column=11)\n\n    # \u529f\u80fd\u51fd\u6570\n    def show_all_book(self):\n        self.result_data_Text.delete(0.0, END)\n        for book in self.books:\n            self.result_data_Text.insert(1.0, book)\n\n    def add_book(self):\n        top = Tk()\n        top.title("\u6dfb\u52a0(add)")\n        top.geometry("300x120+450+10")\n        self.L1 = Label(top, text="\u8bf7\u8f93\u5165\u4e66\u7c4d\u540d\u79f0\uff1a")\n        self.E1 = Entry(top, bd=5)\n        self.L2 = Label(top, text="\u8bf7\u8f93\u5165\u4f5c\u8005\u540d\u79f0\uff1a")\n        self.E2 = Entry(top, bd=5)\n        self.L3 = Label(top, text="\u8bf7\u8f93\u5165\u4e66\u7c4d\u63a8\u8350\u8bed\uff1a")\n        self.E3 = Entry(top, bd=5)\n        self.L1.place(x=0, y=0)\n        self.L2.place(x=0, y=30)\n        self.L3.place(x=0, y=60)\n        self.E1.place(x=120, y=0)\n        self.E2.place(x=120, y=30)\n        self.E3.place(x=120, y=60)\n        self.B = Button(top, text="\u8f93\u5165\u5b8c\u6bd5\u8bf7\u70b9\u51fb\u786e\u8ba4,\u65e0\u9700\u7ee7\u7eed\u8f93\u5165\u8bf7\u5173\u95ed\u7a97\u53e3", command=self.add_booking)\n        self.B.pack(side=BOTTOM)\n\n    def add_booking(self):\n        new_name = self.E1.get()\n        new_author = self.E2.get()\n        new_comment = self.E3.get()\n        self.result_data_Text.delete(0.0, END)\n        new_book = Book(new_name, new_author, new_comment, "\u672a\u501f\u51fa")\n        self.books.append(new_book)\n        db.addmysql(new_name, new_author, new_comment, "\u672a\u501f\u51fa")  # \u5199\u5165\u6570\u636e\u5e93\n        self.result_data_Text.insert(1.0, new_name + "\u5f55\u5165\u6210\u529f\uff01\\n")\n\n    def check_book(self, name):\n        for book in self.books:\n            if book.name == name:\n                return book\n        else:\n            return None\n\n    def lend_book(self):\n        toplend = Tk()\n        toplend.title("\u501f\u9605(lend)")\n        toplend.geometry("330x50+450+30")\n        self.lendE1 = Entry(toplend, bd=5)\n        self.lendE1.pack(side=RIGHT)\n        self.lendB1 = Button(toplend, text="\u8f93\u5165\u4e66\u540d\uff0c\u8f93\u5165\u5b8c\u6bd5\u8bf7\u70b9\u51fb", command=self.lend_booking)\n        self.lendB1.pack(side=LEFT)\n\n    def lend_booking(self):\n        name = self.lendE1.get()\n        res = self.check_book(name)\n        self.result_data_Text.delete(0.0, END)\n        if res != None:\n            if res.state == "\u5df2\u501f\u51fa":\n                self.result_data_Text.insert(1.0, "\u4f60\u6765\u665a\u4e86\u4e00\u6b65\uff0c\u8fd9\u672c\u4e66\u5df2\u7ecf\u88ab\u501f\u8d70\u4e86\u5662")\n            else:\n                res.state = "\u5df2\u501f\u51fa"\n                db.changemysql("\u5df2\u501f\u51fa", res.name)\n                self.result_data_Text.insert(1.0, "\u501f\u9605\u6210\u529f\uff0c\u501f\u4e86\u4e0d\u770b\u4f1a\u53d8\u80d6\u5662\uff5e")\n        else:\n            self.result_data_Text.insert(1.0, "\u8fd9\u672c\u4e66\u6682\u65f6\u6ca1\u6709\u6536\u5f55\u5728\u7cfb\u7edf\u91cc\u5462")\n\n    def return_book(self):\n        topreturn = Tk()\n        topreturn.title("\u5f52\u8fd8(return)")\n        topreturn.geometry("330x50+450+30")\n        self.returnE1 = Entry(topreturn, bd=5)\n        self.returnE1.pack(side=RIGHT)\n        self.returnB1 = Button(\n            topreturn, text="\u8f93\u5165\u4e66\u540d\uff0c\u5b8c\u6bd5\u8bf7\u70b9\u51fb", command=self.return_booking\n        )\n        self.returnB1.pack(side=LEFT)\n\n    def return_booking(self):\n        name = self.returnE1.get()\n        res = self.check_book(name)  # \u8c03\u7528check_book\u65b9\u6cd5\uff0c\u5c06\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9\u53d8\u91cfres\n        self.result_data_Text.delete(0.0, END)\n        if res == None:  # \u5982\u679c\u8fd4\u56de\u7684\u662f\u7a7a\u503c\uff0c\u5373\u8fd9\u672c\u4e66\u7684\u4e66\u540d\u4e0d\u5728\u7cfb\u7edf\u91cc\n            self.result_data_Text.insert(1.0, "\u6ca1\u6709\u8fd9\u672c\u4e66\u5662\uff0c\u4f60\u6050\u6015\u8f93\u9519\u4e86\u4e66\u540d\uff5e")\n        else:  # \u5982\u679c\u8fd4\u56de\u7684\u662f\u5b9e\u4f8b\u5bf9\u8c61\n            if res.state == "\u672a\u501f\u51fa":  # \u5982\u679c\u5b9e\u4f8b\u5c5e\u6027state\u7b49\u4e8e0\uff0c\u5373\u8fd9\u672c\u4e66\u7684\u501f\u9605\u72b6\u6001\u4e3a\'\u672a\u501f\u51fa\'\n                self.result_data_Text.insert(1.0, "\u8fd9\u672c\u4e66\u6ca1\u6709\u88ab\u501f\u8d70\uff0c\u5728\u7b49\u5f85\u6709\u7f18\u4eba\u7684\u5782\u9752\u5462\uff01")\n            else:  # \u5982\u679c\u5b9e\u4f8b\u5c5e\u6027state\u7b49\u4e8e1\uff0c\u5373\u72b6\u6001\u4e3a\'\u5df2\u501f\u51fa\'\n                self.result_data_Text.insert(1.0, "\u5f52\u8fd8\u6210\u529f\uff01")\n                res.state = "\u672a\u501f\u51fa"  # \u5f52\u8fd8\u540e\u4e66\u7c4d\u501f\u9605\u72b6\u6001\u4e3a0\uff0c\u91cd\u7f6e\u4e3a\'\u672a\u501f\u51fa\'\n                db.changemysql("\u672a\u501f\u51fa", res.name)\n\n\ndef gui_start():\n    db.bulildmysql()\n    init_window = Tk()  # \u5b9e\u4f8b\u5316\u51fa\u4e00\u4e2a\u7236\u7a97\u53e3\n    ZMJ_PORTAL = StrayLibrary(init_window)  # \u8bbe\u7f6e\u6839\u7a97\u53e3\u9ed8\u8ba4\u5c5e\u6027\n    ZMJ_PORTAL.set_init_window()\n    init_window.mainloop()  # \u7236\u7a97\u53e3\u8fdb\u5165\u4e8b\u4ef6\u5faa\u73af\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4fdd\u6301\u7a97\u53e3\u8fd0\u884c\uff0c\u5426\u5219\u754c\u9762\u4e0d\u5c55\u793a\n\n\ngui_start()\n\n')),(0,a.kt)("p",null,"\u4e0d\u4f7f\u7528\u7b2c\u4e09\u65b9\u6a21\u5757\u7684\u524d\u63d0\u4e0b\uff0c\u5b8c\u6210\u5bf924\u4f4dbmp\u56fe\u50cf\u7684\u56fe\u50cf\u6570\u636e\u5206\u6790\u4e0e\u50cf\u7d20\u8bfb\u53d6\u3002\n\u7a0b\u5e8f\u8bbe\u8ba1\u9700\u8981\u4f53\u73b0\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u7279\u70b9\uff0c\u4ee5\u521b\u5efa\u7c7b\u7684\u5f62\u5f0f\u7f16\u5199\u3002"),(0,a.kt)("p",null,"\u53c2\u8003\u8d44\u6599\uff1a"),(0,a.kt)("h2",{id:"bmp\u56fe\u7247\u683c\u5f0f"},"BMP\u56fe\u7247\u683c\u5f0f"),(0,a.kt)("p",null,"\u4ee5\u4e00\u5f202*2\u768424\u4f4d\u56fe\u7684bmp\u683c\u5f0f\u56fe\u7247\u4e3a\u4f8b"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Offset"),(0,a.kt)("th",{parentName:"tr",align:null},"Offset10"),(0,a.kt)("th",{parentName:"tr",align:null},"Size"),(0,a.kt)("th",{parentName:"tr",align:null},"Hex value"),(0,a.kt)("th",{parentName:"tr",align:null},"Value"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"BMP Header"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"0h"),(0,a.kt)("td",{parentName:"tr",align:null},"0"),(0,a.kt)("td",{parentName:"tr",align:null},"2"),(0,a.kt)("td",{parentName:"tr",align:null},"42 4D"),(0,a.kt)("td",{parentName:"tr",align:null},'"BM"'),(0,a.kt)("td",{parentName:"tr",align:null},"ID field ","(","42h, 4Dh",")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"2h"),(0,a.kt)("td",{parentName:"tr",align:null},"2"),(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"46\xa000\xa000\xa000"),(0,a.kt)("td",{parentName:"tr",align:null},"70 bytes ","(","54","+","16",")"),(0,a.kt)("td",{parentName:"tr",align:null},"BMP \u6587\u4ef6\u7684\u5927\u5c0f\uff0854 \u5b57\u8282\u6807\u5934 ","+"," 16 \u5b57\u8282\u6570\u636e\uff09")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"6h"),(0,a.kt)("td",{parentName:"tr",align:null},"6"),(0,a.kt)("td",{parentName:"tr",align:null},"2"),(0,a.kt)("td",{parentName:"tr",align:null},"00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"Unused"),(0,a.kt)("td",{parentName:"tr",align:null},"\u7279\u5b9a\u5e94\u7528")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"8h"),(0,a.kt)("td",{parentName:"tr",align:null},"8"),(0,a.kt)("td",{parentName:"tr",align:null},"2"),(0,a.kt)("td",{parentName:"tr",align:null},"00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"Unused"),(0,a.kt)("td",{parentName:"tr",align:null},"\u7279\u5b9a\u5e94\u7528")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Ah"),(0,a.kt)("td",{parentName:"tr",align:null},"10"),(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"36 00 00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"54 bytes ","(","14","+","40",")"),(0,a.kt)("td",{parentName:"tr",align:null},"\u53ef\u4ee5\u627e\u5230\u50cf\u7d20\u9635\u5217\uff08\u4f4d\u56fe\u6570\u636e\uff09\u7684\u504f\u79fb\u91cf")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"DIB Header","-","Device Independent Bitmaps","-","\u8bbe\u5907\u65e0\u5173\u4f4d\u56fe"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Eh"),(0,a.kt)("td",{parentName:"tr",align:null},"14"),(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"28 00 00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"40 bytes"),(0,a.kt)("td",{parentName:"tr",align:null},"DIB \u5934\u4e2d\u7684\u5b57\u8282\u6570\uff08\u4ece\u6b64\u65f6\u5f00\u59cb\uff09")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"12h"),(0,a.kt)("td",{parentName:"tr",align:null},"18"),(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"02 00 00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"2 pixels ","(","left to right order",")"),(0,a.kt)("td",{parentName:"tr",align:null},"\u4f4d\u56fe\u7684\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"16h"),(0,a.kt)("td",{parentName:"tr",align:null},"22"),(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"02 00 00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"2 pixels ","(","bottom to top order",")"),(0,a.kt)("td",{parentName:"tr",align:null},"\u4f4d\u56fe\u7684\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002\u4ece\u4e0b\u5230\u4e0a\u7684\u50cf\u7d20\u987a\u5e8f\u4e3a\u6b63\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"1Ah"),(0,a.kt)("td",{parentName:"tr",align:null},"26"),(0,a.kt)("td",{parentName:"tr",align:null},"2"),(0,a.kt)("td",{parentName:"tr",align:null},"01 00"),(0,a.kt)("td",{parentName:"tr",align:null},"1 plane"),(0,a.kt)("td",{parentName:"tr",align:null},"\u4f7f\u7528\u7684\u989c\u8272\u5e73\u9762\u6570\u91cf")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"1Ch"),(0,a.kt)("td",{parentName:"tr",align:null},"28"),(0,a.kt)("td",{parentName:"tr",align:null},"2"),(0,a.kt)("td",{parentName:"tr",align:null},"18 00"),(0,a.kt)("td",{parentName:"tr",align:null},"24 bits"),(0,a.kt)("td",{parentName:"tr",align:null},"\u6bcf\u4e2a\u50cf\u7d20\u7684\u4f4d\u6570")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"1Eh"),(0,a.kt)("td",{parentName:"tr",align:null},"30"),(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"00 00 00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"0"),(0,a.kt)("td",{parentName:"tr",align:null},"BI","_","RGB\uff0c\u672a\u4f7f\u7528\u50cf\u7d20\u9635\u5217\u538b\u7f29")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"22h"),(0,a.kt)("td",{parentName:"tr",align:null},"34"),(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"10 00 00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"16 bytes"),(0,a.kt)("td",{parentName:"tr",align:null},"\u539f\u59cb\u4f4d\u56fe\u6570\u636e\u7684\u5927\u5c0f\uff08\u5305\u62ec\u586b\u5145\uff09")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"26h"),(0,a.kt)("td",{parentName:"tr",align:null},"38"),(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"13 0B 00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"2835 pixels/metre horizontal"),(0,a.kt)("td",{parentName:"tr",align:null},"\u56fe\u50cf\u7684\u6253\u5370\u5206\u8fa8\u7387\uff0c")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"2Ah"),(0,a.kt)("td",{parentName:"tr",align:null},"42"),(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"13 0B 00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"2835 pixels/metre vertical"),(0,a.kt)("td",{parentName:"tr",align:null},"72 DPI\xa0\xd7 39",".","3701 inches per metre yields 2834",".","6472")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"2Eh"),(0,a.kt)("td",{parentName:"tr",align:null},"46"),(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"00 00 00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"0 colors"),(0,a.kt)("td",{parentName:"tr",align:null},"\u8c03\u8272\u677f\u4e2d\u7684\u989c\u8272\u6570\u91cf")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"32h"),(0,a.kt)("td",{parentName:"tr",align:null},"50"),(0,a.kt)("td",{parentName:"tr",align:null},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"00 00 00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"0 important colors"),(0,a.kt)("td",{parentName:"tr",align:null},"0 \u8868\u793a\u6240\u6709\u989c\u8272\u90fd\u5f88\u91cd\u8981")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Start of pixel array ","(","bitmap data",")"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"36h"),(0,a.kt)("td",{parentName:"tr",align:null},"54"),(0,a.kt)("td",{parentName:"tr",align:null},"3"),(0,a.kt)("td",{parentName:"tr",align:null},"00 00 FF"),(0,a.kt)("td",{parentName:"tr",align:null},"0 0 255"),(0,a.kt)("td",{parentName:"tr",align:null},"Red, Pixel ","(","x=0, y=1",")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"39h"),(0,a.kt)("td",{parentName:"tr",align:null},"57"),(0,a.kt)("td",{parentName:"tr",align:null},"3"),(0,a.kt)("td",{parentName:"tr",align:null},"FF FF FF"),(0,a.kt)("td",{parentName:"tr",align:null},"255 255 255"),(0,a.kt)("td",{parentName:"tr",align:null},"White, Pixel ","(","x=1, y=1",")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"3Ch"),(0,a.kt)("td",{parentName:"tr",align:null},"60"),(0,a.kt)("td",{parentName:"tr",align:null},"2"),(0,a.kt)("td",{parentName:"tr",align:null},"00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"0 0"),(0,a.kt)("td",{parentName:"tr",align:null},"Padding for 4 byte alignment ","(","could be a value other than zero",")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"3Eh"),(0,a.kt)("td",{parentName:"tr",align:null},"62"),(0,a.kt)("td",{parentName:"tr",align:null},"3"),(0,a.kt)("td",{parentName:"tr",align:null},"FF 00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"255 0 0"),(0,a.kt)("td",{parentName:"tr",align:null},"Blue, Pixel ","(","x=0, y=0",")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"41h"),(0,a.kt)("td",{parentName:"tr",align:null},"65"),(0,a.kt)("td",{parentName:"tr",align:null},"3"),(0,a.kt)("td",{parentName:"tr",align:null},"00 FF 00"),(0,a.kt)("td",{parentName:"tr",align:null},"0 255 0"),(0,a.kt)("td",{parentName:"tr",align:null},"Green, Pixel ","(","x=1, y=0",")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"44h"),(0,a.kt)("td",{parentName:"tr",align:null},"68"),(0,a.kt)("td",{parentName:"tr",align:null},"2"),(0,a.kt)("td",{parentName:"tr",align:null},"00 00"),(0,a.kt)("td",{parentName:"tr",align:null},"0 0"),(0,a.kt)("td",{parentName:"tr",align:null},"Padding for 4 byte alignment ","(","could be a value other than zero",")")))),(0,a.kt)("h2",{id:"bit\u548cbyte\u7684\u533a\u522b"},"bit\u548cbyte\u7684\u533a\u522b"),(0,a.kt)("p",null,"bit\uff08\u4f4d\uff09\u6bd4\u7279\u662f\u8ba1\u7b97\u673a\u8fd0\u7b97\u7684\u57fa\u7840\uff0c\u5c5e\u4e8e\u4e8c\u8fdb\u5236\u7684\u8303\u7574"),(0,a.kt)("p",null,"byte\u5b57\u8282\u662f\u5185\u5b58\u7684\u57fa\u672c\u5355\u4f4d"),(0,a.kt)("p",null,"8 bit = 1 byte"),(0,a.kt)("p",null,"\u4e00\u5f208x8\u7684\u56fe\u7247\uff0c\u5934\u6587\u4ef6\u662f54\u5b57\u8282\uff0c\u6bcf\u4e2a\u50cf\u7d20\u70b9\u6709\u4e09\u4e2a\u901a\u9053\uff0c\u6bcf\u4e2a\u901a\u9053\u67098\u4f4d\uff0c\u90a3\u4e48\u8fd9\u5f20\u56fe\u7247\u7684\u5927\u5c0f\u662f\u591a\u5c11\u5b57\u8282\uff1f(8\u4f4d=1\u5b57\u8282)\n\u6587\u4ef6\u5927\u5c0f = \u6587\u4ef6\u5934\uff08\u56fa\u5b9a\uff09 + \u6570\u636e\n= 54 + (3x8\xf78)x8x8\n= 246\u5b57\u8282"),(0,a.kt)("h2",{id:"\u6570\u636e\u4e0e\u4e8c\u8fdb\u5236\u8f6c\u5316"},"\u6570\u636e\u4e0e\u4e8c\u8fdb\u5236\u8f6c\u5316"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"data = b'\\xff' # b\u4ee3\u8868\u8fd9\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\\x\u4ee3\u8868\u8fd9\u662f\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\u7684\u6570\u636e\n\nbin_data = bin(int.from_bytes(data))[2:]  # -> 11111111\n\nint(bin_data, 2) # -> 255\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class Readbmp:\n    """\n    read bmp files\n    \u56fe\u7247\u7684\u683c\u5f0f\u8bf4\u660e\uff1ahttps://en.wikipedia.org/wiki/BMP_file_format#Example_1\n    """\n\n    def __init__(self, pic_path) -> None:\n        self.pic_path = pic_path\n        self.read_color()\n\n    def read_color(self):\n        if self.pic_path.endswith(".bmp"):\n            self.read_bmp()\n        else:\n            print("\u4e0d\u652f\u6301\u7684\u683c\u5f0f")\n\n    def read_bmp(self):\n        bin_datas = []\n        """read file data to bin"""\n        with open(self.pic_path, "rb") as f:\n            while True:\n                if len(bin_datas) == f.tell():\n                    data = f.read(1)\n                    bindata = bin(int.from_bytes(data))[2:]\n                    if len(bindata) < 8:\n                        bindata = (8 - len(bindata)) * "0" + bindata\n                    bin_datas.append(bindata)\n                else:\n                    bin_datas = bin_datas[:-1]\n                    break\n\n        self.bin_pic_head = bin_datas[0:2]  # ID field\n        self.bin_pic_size = bin_datas[2:6]  # Size of the BMP file \u6587\u4ef6\u5927\u5c0f\n        self.bin_pic_exe = bin_datas[6:10]  # \u7279\u5b9a\u5e94\u7528\uff0c\u9ed8\u8ba4\u4e3a0\n        self.bin_pic_address = bin_datas[10:14]  # \u56fe\u7247\u4fe1\u606f\u5f00\u59cb\u5730\u5740\n        self.bin_pic_dib = bin_datas[14:18]  # DIB \u5934\u4e2d\u7684\u5b57\u8282\u6570\n        self.bin_pic_w = bin_datas[18:22]  # \u56fe\u7247\u50cf\u7d20\u5bbd\u5ea6\n        self.bin_pic_h = bin_datas[22:26]  # \u56fe\u7247\u50cf\u7d20\u9ad8\u5ea6\n        self.bin_pic_color_num = bin_datas[26:28]  # \u4f7f\u7528\u989c\u8272\u5e73\u9762\u6570\n        self.bin_pic_color_long = bin_datas[28:30]  # \u6bcf\u4e2a\u50cf\u7d20\u4f4d\u6570\n        self.bin_pic_bi = bin_datas[30:34]  # BI_RGB\n        self.bin_pic_big = bin_datas[34:38]  # \u539f\u59cb\u56fe\u50cf\u6570\u636e\u5927\u5c0f\n        self.bin_pic_printpix = bin_datas[38:42]  # \u6253\u5370\u5206\u8fa8\u7387\n        self.bin_pic_dpi = bin_datas[42:46]  # DPI\n        self.bin_pic_color_num = bin_datas[46:50]  # \u8c03\u8272\u677f\u4e2d\u989c\u8272\u6570\u91cf\n        self.bin_pic_color_important = bin_datas[50:54]  # \u91cd\u8981\u989c\u8272\u6570\u91cf\n        self.bin_pic_data = bin_datas[54:]  # \u56fe\u7247\u6570\u636e\n        self.bin_to_pic()\n\n    # \u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u8f6c\u5316\u6210\u5341\u8fdb\u5236\u6570\u636e\n    def bin_to_dec(self, bin_datas):\n        bin_data = ""\n        for i in reversed(bin_datas):\n            bin_data += i\n        return int(bin_data, 2)\n\n    # \u5c06\u5217\u8868\u8f6c\u4e3a3\u4e2a\u4e00\u7ec4\u7684\u4e8c\u7ef4\u5217\u8868\n    def change_data(self, data):\n        data_2d = []\n        x = []\n        for i in data:\n            x.append(int(i, 2))\n            if len(x) == 3:\n                data_2d.append(tuple(x))\n                x = []\n        return data_2d\n\n    # \u5904\u7406\u56fe\u7247\u6570\u636e\n    def bin_to_pic(self):\n        self.pic_head = chr(int(self.bin_pic_head[0], 2)) + chr(\n            int(self.bin_pic_head[1], 2)\n        )\n        self.pic_size = self.bin_to_dec(self.bin_pic_size)\n        self.pic_exe = self.bin_to_dec(self.bin_pic_exe)\n        self.pic_address = self.bin_to_dec(self.bin_pic_address)\n        self.pic_dib = self.bin_to_dec(self.bin_pic_dib)\n        self.pic_w = self.bin_to_dec(self.bin_pic_w)\n        self.pic_h = self.bin_to_dec(self.bin_pic_h)\n        self.pic_color_num = self.bin_to_dec(self.bin_pic_color_num)\n        self.pic_color_long = self.bin_to_dec(self.bin_pic_color_long)\n        self.pic_bi = self.bin_to_dec(self.bin_pic_bi)\n        self.pic_big = self.bin_to_dec(self.bin_pic_big)\n        self.pic_printpix = self.bin_to_dec(self.bin_pic_printpix)\n        self.pic_dpi = self.bin_to_dec(self.bin_pic_dpi)\n        self.pic_color_num = self.bin_to_dec(self.bin_pic_color_num)\n        self.pic_color_important = self.bin_to_dec(self.bin_pic_color_important)\n        self.pic_data = self.change_data(self.bin_pic_data)\n\n    # \u6253\u5370\u56fe\u7247\u4fe1\u606f\n    def show(self):\n        print(\n            """\n\u6587\u4ef6ID  {} \n\u56fe\u50cf\u5927\u5c0f(Byte)  {}   \n\u7279\u5b9a\u5e94\u7528  {}   \n\u56fe\u7247\u4fe1\u606f\u5f00\u59cb\u5730\u5740  {}   \nDIB \u5934\u4e2d\u7684\u5b57\u8282\u6570 {}   \n\u56fe\u7247\u50cf\u7d20\u5bbd\u5ea6  {}   \n\u56fe\u7247\u50cf\u7d20\u9ad8\u5ea6  {}   \n\u4f7f\u7528\u989c\u8272\u5e73\u9762\u6570  {}   \n\u6bcf\u4e2a\u50cf\u7d20\u4f4d\u6570  {}   \nBI_RGB  {}   \n\u539f\u59cb\u56fe\u50cf\u6570\u636e\u5927\u5c0f(Byte) {} \n\u6253\u5370\u5206\u8fa8\u7387  {}   \nDPI  {}   \n\u8c03\u8272\u677f\u4e2d\u989c\u8272\u6570\u91cf  {}   \n\u91cd\u8981\u989c\u8272\u6570\u91cf  {}   \n\u56fe\u7247\u6570\u636e  {} .... {} \n""".format(\n                self.pic_head,\n                self.pic_size,\n                self.pic_exe,\n                self.pic_address,\n                self.pic_dib,\n                self.pic_w,\n                self.pic_h,\n                self.pic_color_num,\n                self.pic_color_long,\n                self.pic_bi,\n                self.pic_big,\n                self.pic_printpix,\n                self.pic_dpi,\n                self.pic_color_num,\n                self.pic_color_important,\n                self.pic_data[:5],\n                self.pic_data[-5:],\n            )\n        )\n\n    # \u5224\u65ad\u989c\u8272\n    def color(self, color):\n        b, g, r = color[0], color[1], color[2]\n        if r == 0 and g == 0 and b == 0:\n            return "\u9ed1\u8272"\n        elif r == 0 and g == 0 and b == 255:\n            return "\u84dd\u8272"\n        elif r == 0 and g == 255 and b == 0:\n            return "\u7eff\u8272"\n        elif r == 255 and g == 0 and b == 0:\n            return "\u7ea2\u8272"\n        elif r == 255 and g == 255 and b == 255:\n            return "\u767d\u8272"\n        else:\n            return "\u5176\u4ed6\u989c\u8272"\n\n    # \u7edf\u8ba1\u989c\u8272\n    def count_color(self):\n        color_dict = {}\n        for i in self.pic_data:\n            if i in color_dict:\n                color_dict[i] += 1\n            else:\n                color_dict[i] = 1\n        return color_dict\n\n    # \u5224\u65ad\u989c\u8272\u7684\u6bd4\u4f8b\n    def color_percent(self):\n        color_dict = self.count_color()\n        color_percent_dict = {}\n        for i in color_dict:\n            color_percent_dict[self.color(i)] = int(\n                color_dict[i] / len(self.pic_data) * 100\n            )\n        for i in color_percent_dict:\n            print("{} \u5360\u6bd4\u767e\u5206\u4e4b {}".format(i, color_percent_dict[i]))\n\n\n\n\n\np = Readbmp("r.bmp")  # \u53e6\u5b58\u4e3a\u65b0\u6587\u4ef6\np.color_percent()\n# \u7ea2\u8272 \u5360\u6bd4\u767e\u5206\u4e4b 100\n"""\nr.bmp\u662f8*8\u7684\u4f4d\u56fe\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u70b9\u662f\u7ea2\u8272\uff0c\u5176\u4ed6\u90fd\u662f\u9ed1\u8272\n"""\n# \u6253\u5f00\u6587\u4ef6\u4f5c\u4e3a\u53ef\u7f16\u8f91\u5bf9\u8c61\nwith open("r.bmp", "rb") as f:\n    d = f.read()\n    data = bytearray(d)\n# \u8bd5\u7740\u628a54\u5230246\u7684\u6570\u636e\u90fd\u6539\u62100x00\uff0c\u5373\u9ed1\u8272\u3002\u8fd9\u6837\u6574\u5f20\u56fe\u7247\u90fd\u53d8\u6210\u9ed1\u8272\u4e86\uff08\u4e5f\u53ef\u4ee5\u53ea\u66f4\u6539\u67d0\u4e2a\u6570\u636e\u7aef\uff09\nfor i in range(54, 246):\n    data[i]= 0x00\n# \u4fdd\u5b58\u6587\u4ef6\nwith open("rn.bmp", "wb") as f:\n    f.write(data)\n\np = Readbmp("rn.bmp")\np.show()\np.color_percent()\n# \u9ed1\u8272 \u5360\u6bd4\u767e\u5206\u4e4b 100\n')))}f.isMDXComponent=!0}}]);
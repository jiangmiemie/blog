"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[1202],{37653:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>p,toc:()=>r});var s=t(74848),a=t(28453);const l={sidebar_position:6,title:"\u6570\u636e\u53ef\u89c6"},i=void 0,p={id:"\u9006\u5411\u6d4b\u8bd5/\u6570\u636e\u53ef\u89c6",title:"\u6570\u636e\u53ef\u89c6",description:"matplotlib\uff1a\u652f\u6301\u5341\u591a\u79cd\u5e38\u89c1\u56fe\u8868\u7684\u7ed8\u5236\uff0c\u4e00\u7ad9\u5f0f\u641e\u5b9a\u6570\u636e\u53ef\u89c6\u5316\u3002",source:"@site/docs/docs/\u9006\u5411\u6d4b\u8bd5/\u6570\u636e\u53ef\u89c6.md",sourceDirName:"\u9006\u5411\u6d4b\u8bd5",slug:"/\u9006\u5411\u6d4b\u8bd5/\u6570\u636e\u53ef\u89c6",permalink:"/docs/\u9006\u5411\u6d4b\u8bd5/\u6570\u636e\u53ef\u89c6",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"\u6570\u636e\u53ef\u89c6"},sidebar:"tutorialSidebar",previous:{title:"\u6570\u636e\u5904\u7406",permalink:"/docs/\u9006\u5411\u6d4b\u8bd5/\u6570\u636e\u5904\u7406"},next:{title:"\u4e91\u539f\u751f\u5f00\u53d1",permalink:"/docs/\u4e91\u539f\u751f\u5f00\u53d1/"}},o={},r=[{value:"matplotlib",id:"matplotlib",level:2},{value:"\u4e8c\u7ef4\u76f4\u7ebf\u56fe",id:"\u4e8c\u7ef4\u76f4\u7ebf\u56fe",level:3},{value:"\u7ed8\u5236\u591a\u6761\u6570\u636e\u7ebf",id:"\u7ed8\u5236\u591a\u6761\u6570\u636e\u7ebf",level:3},{value:"\u7ebf\u6761\u4fee\u9970",id:"\u7ebf\u6761\u4fee\u9970",level:3},{value:"\u6563\u70b9\u56fe",id:"\u6563\u70b9\u56fe",level:3},{value:"\u7ed8\u5236\u4e09\u7ef4\u6570\u636e",id:"\u7ed8\u5236\u4e09\u7ef4\u6570\u636e",level:3},{value:"\u76f4\u65b9\u56fe",id:"\u76f4\u65b9\u56fe",level:3},{value:"\u79bb\u6563\u5206\u5e03",id:"\u79bb\u6563\u5206\u5e03",level:3},{value:"\u56fe\u5185\u586b\u5145",id:"\u56fe\u5185\u586b\u5145",level:3},{value:"pyecharts",id:"pyecharts",level:2},{value:"\u7ed8\u5236\u67f1\u72b6\u5806\u53e0\u56fe",id:"\u7ed8\u5236\u67f1\u72b6\u5806\u53e0\u56fe",level:3},{value:"\u7ed8\u5236\u4f18\u96c5\u7684\u53cc\u8f74\u6298\u7ebf\u56fe",id:"\u7ed8\u5236\u4f18\u96c5\u7684\u53cc\u8f74\u6298\u7ebf\u56fe",level:3}];function d(n){const e={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:"matplotlib\uff1a\u652f\u6301\u5341\u591a\u79cd\u5e38\u89c1\u56fe\u8868\u7684\u7ed8\u5236\uff0c\u4e00\u7ad9\u5f0f\u641e\u5b9a\u6570\u636e\u53ef\u89c6\u5316\u3002"}),"\n",(0,s.jsx)(e.p,{children:"pyecharts\uff1a\u57fa\u4e8e echarts.js \u7684\u56fe\u8868\u5e93\uff0c\u652f\u6301\u5341\u51e0\u79cd\u5e38\u89c1\u56fe\u8868\u7684\u7ed8\u5236\uff0c\u652f\u6301\u4e3b\u6d41\u7684 Python Web \u6846\u67b6\uff0c\u5982 Flask\u3001Django \u7b49\u3002"}),"\n",(0,s.jsx)(e.h2,{id:"matplotlib",children:"matplotlib"}),"\n",(0,s.jsx)(e.h3,{id:"\u4e8c\u7ef4\u76f4\u7ebf\u56fe",children:"\u4e8c\u7ef4\u76f4\u7ebf\u56fe"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import numpy as np\nfrom matplotlib import pyplot as plt\n#  \u751f\u6210\u4e00\u4e2a-3\u52303\u7684\u7b49\u5dee\u6570\u5217\uff0c\u5171100\u4e2a\u6570\na = np.linspace(-3, 3, 10)\n\n# \u4e09\u89d2\u51fd\u6570\nb = np.sin(a)\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"plt.plot(a, b)\n# \u7b49\u4ef7\u4e8e plt.plot(b)\nplt.show() # \u6b63\u5f26\u56fe\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u7ed8\u5236\u591a\u6761\u6570\u636e\u7ebf",children:"\u7ed8\u5236\u591a\u6761\u6570\u636e\u7ebf"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"# \u753b\u51fa\u591a\u6761\u6570\u636e\u7ebf\uff1a\nplt.plot(a, np.sin(a))\nplt.plot(a, np.sin(2 * a))\nplt.show()\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u7ebf\u6761\u4fee\u9970",children:"\u7ebf\u6761\u4fee\u9970"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"# \u4f7f\u7528\u5b57\u7b26\u4e32\uff0c\u7ed9\u5b9a\u7ebf\u6761\u53c2\u6570\uff1a\n# b:\u84dd\u8272\n# -- : \u865a\u7ebf\n# o : \u5706\u70b9\n'''\n\u5b8c\u6574\u53c2\u6570\u53ef\u53c2\u8003\nhttps://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot\n'''\nplt.plot(a, np.sin(a), 'b--o')\nplt.show()\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u6563\u70b9\u56fe",children:"\u6563\u70b9\u56fe"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"plt.plot(a, np.sin(a), 'bo')\nplt.show()  # \u4e8c\u7ef4\u6563\u70b9\u56fe\n# \u7b49\u4ef7\u4e8e\nplt.scatter(a, np.sin(a),color='blue',marker='o')\nplt.show()\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"t = np.linspace(0, 2 * np.pi, 50)\nx = np.sin(t)\nplt.plot(t, x, 'bo', t, np.sin(2 * t), 'r-^', label='sin', color='red', )\nplt.legend()\nplt.xlabel('radians')\nplt.ylabel('amplitude', fontsize='large')\nplt.title('Sin(x)')\nplt.grid()\nplt.show()\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"# \u76f4\u65b9\u56fe\ndata = np.array([1234, 321, 400, 120, 11, 30, 2000])\nplt.hist(data, 7)\nplt.show()\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u7ed8\u5236\u4e09\u7ef4\u6570\u636e",children:"\u7ed8\u5236\u4e09\u7ef4\u6570\u636e"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"# \u9ad8\u7ef4 RBF \u63d2\u503c\n# \u4e09\u7ef4\u6570\u636e\u70b9\uff1a\nimport numpy as np\nfrom matplotlib import pyplot as plt\nx, y = np.mgrid[-np.pi / 2:np.pi / 2:5j, -np.pi / 2:np.pi / 2:5j]\nz = np.cos(np.sqrt(x ** 2 + y ** 2))\nfig = plt.figure(figsize=(12, 6))\nax = fig.add_subplot(projection='3d')\nax.scatter(x, y, z)\nfig.savefig(\"mplot3d.jpg\")\nplt.show()\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u76f4\u65b9\u56fe",children:"\u76f4\u65b9\u56fe"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import numpy as np\nfrom matplotlib import pyplot as plt\n# \u6b63\u6001\u5206\u5e03\nfrom scipy.stats import norm\nx_norm = norm.rvs(size=500)\nx_norm.shape\n\nplt.ion() #\u5f00\u542finteractive mode\n\nh = plt.hist(x_norm)\nprint('counts, ', h[0])\nprint('bin centers', h[1])\nfigure = plt.figure(1)  # \u521b\u5efa\u56fe\u88681\nplt.show()\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u5f52\u4e00\u5316\u76f4\u65b9\u56fe\uff08\u7528\u51fa\u73b0\u9891\u7387\u4ee3\u66ff\u6b21\u6570\uff09\uff0c\u5c06\u5212\u5206\u533a\u95f4\u53d8\u4e3a 20\uff08\u9ed8\u8ba4 10\uff09\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"h = plt.hist(x_norm, bins=20)\nplt.show()\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u591a\u7ec4\u76f4\u65b9\u56fe"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"from scipy.stats import norm\nfrom scipy.stats import ttest_ind\n\n# \u72ec\u7acb\u6837\u672c t \u68c0\u9a8c\n# \u4e24\u7ec4\u53c2\u6570\u4e0d\u540c\u7684\u6b63\u6001\u5206\u5e03\uff1a\nn1 = norm(loc=0.3, scale=1.0)\nn2 = norm(loc=0, scale=1.0)\n\n# \u4ece\u5206\u5e03\u4e2d\u4ea7\u751f\u4e24\u7ec4\u968f\u673a\u6837\u672c\uff1a\nn1_samples = n1.rvs(size=100)\nn2_samples = n2.rvs(size=100)\n\n# \u5c06\u4e24\u7ec4\u6837\u672c\u6df7\u5408\u5728\u4e00\u8d77\uff1a\nsamples = np.hstack((n1_samples, n2_samples))\n\n# \u6700\u5927\u4f3c\u7136\u53c2\u6570\u4f30\u8ba1\uff1a\nloc, scale = norm.fit(samples)\nn = norm(loc=loc, scale=scale)\n\n# \u6bd4\u8f83\uff1a\nx = np.linspace(-3, 3, 100)\n\nplt.hist([samples, n1_samples, n2_samples])\nplt.plot(x, n.pdf(x), 'b-')\nplt.plot(x, n1.pdf(x), 'g-')\nplt.plot(x, n2.pdf(x), 'r-')\nplt.show()\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u79bb\u6563\u5206\u5e03",children:"\u79bb\u6563\u5206\u5e03"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"# \u79bb\u6563\u5206\u5e03\nfrom scipy.stats import randint\n\n# \u79bb\u6563\u5747\u5300\u5206\u5e03\u7684\u6982\u7387\u8d28\u91cf\u51fd\u6570\uff08PMF\uff09\uff1a\nhigh = 10\nlow = -10\n\nx = np.arange(low, high + 1, 0.5)\np = plt.stem(x, randint(low, high).pmf(x))  # \u6746\u72b6\u56fe\nplt.show()\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u56fe\u5185\u586b\u5145",children:"\u56fe\u5185\u586b\u5145"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"from scipy.integrate import trapz\n\nx1 = np.linspace(-2, 2, 108)\np = trapz(norm.pdf(x1), x1)\nprint('{:.2%} of the values lie between -2 and 2'.format(p))\n\nplt.fill_between(x1, norm.pdf(x1), color='red')\nplt.plot(x, norm.pdf(x), 'k-')\nplt.show()\n"})}),"\n",(0,s.jsx)(e.h2,{id:"pyecharts",children:"pyecharts"}),"\n",(0,s.jsx)(e.h3,{id:"\u7ed8\u5236\u67f1\u72b6\u5806\u53e0\u56fe",children:"\u7ed8\u5236\u67f1\u72b6\u5806\u53e0\u56fe"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'\n\'\'\'\n\u7ed8\u5236\u67f1\u72b6\u5806\u53e0\u56fe\n\'\'\'\n\nfrom pyecharts import options as opts#\u5bfc\u5165\u6a21\u5757\nfrom pyecharts.charts import Bar\n\nx_attr = ["2018", "2019", "2020", "2021"] #x\u8f74\ndata1 = [2.691, 4.282, 12.88, 11.43] #\u7b2c1\u5b63\u5ea6\ndata2 = [9.157, 9.028, 11.46,9.507]#\u7b2c2\u5b63\u5ea6\ndata3 = [4.282, 9.484, 11.91, 16.97]#\u7b2c3\u5b63\u5ea6\ndata4 = [16.72, 22.46,26.85, 0]#\u7b2c4\u5b63\u5ea6\n\nbar=(\n    Bar()\n        .add_xaxis(x_attr) #\u8bbe\u7f6ex\u8f74\n        .add_yaxis("\u7b2c1\u5b63\u5ea6", data1, stack="stack1") #\u53e0\u52a0Y\u8f74\uff1a\u6570\u636e\u540d\u79f0\u3001\u6570\u636e\u3001\u662f\u5426\u53e0\u52a0\n        .add_yaxis("\u7b2c2\u5b63\u5ea6", data2, stack="stack1") #\u53e0\u52a0Y\u8f74\uff1a\u6570\u636e\u540d\u79f0\u3001\u6570\u636e\u3001\u662f\u5426\u53e0\u52a0\n        .add_yaxis("\u7b2c3\u5b63\u5ea6", data3, stack="stack1") #\u53e0\u52a0Y\u8f74\uff1a\u6570\u636e\u540d\u79f0\u3001\u6570\u636e\u3001\u662f\u5426\u53e0\u52a0\n        .add_yaxis("\u7b2c4\u5b63\u5ea6", data4, stack="stack1") #\u53e0\u52a0Y\u8f74\uff1a\u6570\u636e\u540d\u79f0\u3001\u6570\u636e\u3001\u662f\u5426\u53e0\u52a0\n        .set_series_opts(label_opts=opts.LabelOpts(is_show=False)) #\u662f\u5426\u76f4\u63a5\u663e\u793a\u6570\u503c\uff1a\u5426\n        .set_global_opts(title_opts=opts.TitleOpts(title="\u5b81\u5fb7\u65f6\u4ee3\u6263\u975e\u51c0\u5229\u6da6\u5b63\u5ea6\u62a5\u8868",\n        subtitle="2017-2021\u5e74"))#\u4e3b\u6807\u9898\uff0c\u526f\u6807\u9898\n    )\n\nbar.render_notebook()\n\n'})}),"\n",(0,s.jsx)(e.h3,{id:"\u7ed8\u5236\u4f18\u96c5\u7684\u53cc\u8f74\u6298\u7ebf\u56fe",children:"\u7ed8\u5236\u4f18\u96c5\u7684\u53cc\u8f74\u6298\u7ebf\u56fe"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'\'\'\'\npyecharts\u7ed8\u5236\u4f18\u96c5\u7684\u53cc\u8f74\u6298\u7ebf\u56fe\n\'\'\'\n\nimport pyecharts.options as opts  #\u5bfc\u5165\u6a21\u5757\nfrom pyecharts.charts import Line #\u5bfc\u5165\u6a21\u5757\n\n# \u8bbe\u7f6e\u5750\u6807\u8f74\n\nx_data = ["1999-1", "1999-2", "2000", "2003", "2009", "2010", "2020"]\ny_data = [820, 932, 1901, 934, 1290, 330, 1320]\ny2_data = [0.1, 0.1, 0.3, 0.5, 0.1, 0.1, 0.1]\n\n# \u8bbe\u5916\u5c42\u62ec\u53f7\u662f\u4e3a\u4e86\u8ba9\u4ee3\u7801\u53ef\u4ee5\u6362\u884c\u4e0d\u62a5\u9519\uff0c\u770b\u8d77\u6765\u66f4\u7f8e\u89c2\n\nline = (\n    Line()      #\u5b9a\u4e49\u56fe\u8868\u7c7b\u578b\u4e3a\u6298\u7ebfLine\n    .set_global_opts(  #\u56fa\u5b9a\u53c2\u6570\uff0c\u8bbe\u7f6e\u5168\u5c40\u5c5e\u6027\n        tooltip_opts=opts.TooltipOpts(is_show=False),\n        #\u8fd9\u53e5\u7684\u610f\u601d\u662f\uff1a \u63d0\u793a\u6846\u8bbe\u7f6e(\u662f\u5426\u5c55\u793a = \u5426)\n\n        # \u5750\u6807\u8f74\u7c7b\u578b\u3002\u53ef\u9009\uff1a\n        # \'value\': \u6570\u503c\u8f74\uff0c\u9002\u7528\u4e8e\u8fde\u7eed\u6570\u636e\u3002\n        # \'category\': \u7c7b\u76ee\u8f74\uff0c\u9002\u7528\u4e8e\u79bb\u6563\u7684\u7c7b\u76ee\u6570\u636e\uff0c\u4e3a\u8be5\u7c7b\u578b\u65f6\u5fc5\u987b\u901a\u8fc7 data \u8bbe\u7f6e\u7c7b\u76ee\u6570\u636e\u3002\n        # \'time\': \u65f6\u95f4\u8f74\uff0c\u9002\u7528\u4e8e\u8fde\u7eed\u7684\u65f6\u5e8f\u6570\u636e\uff0c\u4e0e\u6570\u503c\u8f74\u76f8\u6bd4\u65f6\u95f4\u8f74\u5e26\u6709\u65f6\u95f4\u7684\u683c\u5f0f\u5316\uff0c\u5728\u523b\u5ea6\u8ba1\u7b97\u4e0a\u4e5f\u6709\u6240\u4e0d\u540c\uff0c\n        # \u4f8b\u5982\u4f1a\u6839\u636e\u8de8\u5ea6\u7684\u8303\u56f4\u6765\u51b3\u5b9a\u4f7f\u7528\u6708\uff0c\u661f\u671f\uff0c\u65e5\u8fd8\u662f\u5c0f\u65f6\u8303\u56f4\u7684\u523b\u5ea6\u3002\n        # \'log\' \u5bf9\u6570\u8f74\u3002\u9002\u7528\u4e8e\u5bf9\u6570\u6570\u636e\u3002\n\n        #\u8bbe\u7f6eX\u8f74\u4e3a\u7c7b\u76ee\uff0c\u4e00\u822c\u90fd\u662f\u7528\u5b83\n        xaxis_opts=opts.AxisOpts(type_="category"),\n\n        #\u8bbe\u7f6eX\u8f74\u4e3a\u6570\u503c\u8f74\uff0c\u4e00\u822c\u90fd\u662f\u7528\u5b83\n        yaxis_opts=opts.AxisOpts(\n            type_="value",\n            axistick_opts=opts.AxisTickOpts(is_show=True), #\u9f20\u6807\u653e\u5728\u70b9\u70b9\u4e0a\u5c55\u793a\u6570\u503c\n            splitline_opts=opts.SplitLineOpts(is_show=True), #\u80cc\u666f\u52a0\u53c2\u8003\u7ebf\n        ),\n    )\n    .add_xaxis(xaxis_data=x_data)  #\u6dfb\u52a0x\u8f74\u6570\u636e\n\n    #\u6dfb\u52a0\u4e3b\u5750\u6807\u8f74\uff08\u5de6\u8fb9\u7684\uff09\n    .add_yaxis(\n        series_name="\u76c8\u5229\u7387", #\u8bbe\u7f6e\u6298\u7ebf\u7684\u6807\u7b7e\u540d\n        y_axis=y_data,    #\u6dfb\u52a0y\u8f74\u6570\u636e\n        symbol="emptyCircle", #\u8bbe\u7f6e\u6298\u7ebf\u56fe\u4e2d\u8868\u793a\u6bcf\u4e2a\u5750\u6807\u70b9\u7684\u7b26\u53f7\uff0cemptyCircle\u4ee3\u8868\u7a7a\u5fc3\u5706\n        label_opts=opts.LabelOpts(is_show=True), #\u663e\u793a\u6298\u7ebf\u4e0a\u7684\u6570\u636e\n    )\n\n    #\u6dfb\u52a0\u526f\u5750\u6807\u8f74\uff08\u53f3\u8fb9\u7684\uff09\u56fa\u5b9a\u683c\u5f0f,extend\u662f\u589e\u52a0\uff0caxis\u662f\u8f74\n    .extend_axis(\n        yaxis=opts.AxisOpts(axislabel_opts=opts.LabelOpts(formatter="{value}")))\n)\n# \u753b\u7b2c2\u6761\u7ebf\uff0c\u53c2\u6570\u91cd\u590d\uff0c\u4e0d\u518d\u591a\u8bb2\u5566-\nline2 =(Line()\n    .add_xaxis(x_data)\n    .add_yaxis("\u6362\u624b\u7387",y2_data, yaxis_index=1))\n\nline.overlap(line2) #\u53e0\u52a0\nline.render_notebook()\n'})})]})}function c(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>p});var s=t(96540);const a={},l=s.createContext(a);function i(n){const e=s.useContext(l);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function p(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:i(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);
"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[5845],{3905:(e,n,r)=>{r.d(n,{Zo:()=>o,kt:()=>u});var p=r(7294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);n&&(p=p.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,p)}return r}function d(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function f(e,n){if(null==e)return{};var r,p,t=function(e,n){if(null==e)return{};var r,p,t={},a=Object.keys(e);for(p=0;p<a.length;p++)r=a[p],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(p=0;p<a.length;p++)r=a[p],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var i=p.createContext({}),s=function(e){var n=p.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):d(d({},n),e)),r},o=function(e){var n=s(e.components);return p.createElement(i.Provider,{value:n},e.children)},m="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return p.createElement(p.Fragment,{},n)}},_=p.forwardRef((function(e,n){var r=e.components,t=e.mdxType,a=e.originalType,i=e.parentName,o=f(e,["components","mdxType","originalType","parentName"]),m=s(r),_=t,u=m["".concat(i,".").concat(_)]||m[_]||l[_]||a;return r?p.createElement(u,d(d({ref:n},o),{},{components:r})):p.createElement(u,d({ref:n},o))}));function u(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=r.length,d=new Array(a);d[0]=_;var f={};for(var i in n)hasOwnProperty.call(n,i)&&(f[i]=n[i]);f.originalType=e,f[m]="string"==typeof e?e:t,d[1]=f;for(var s=2;s<a;s++)d[s]=r[s];return p.createElement.apply(null,d)}return p.createElement.apply(null,r)}_.displayName="MDXCreateElement"},9601:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>l,frontMatter:()=>a,metadata:()=>f,toc:()=>s});var p=r(7462),t=(r(7294),r(3905));const a={tags:["python","pdf"]},d=void 0,f={unversionedId:"\u62c6\u5408PDF",id:"\u62c6\u5408PDF",title:"\u62c6\u5408PDF",description:"",source:"@site/sheets/\u62c6\u5408PDF.md",sourceDirName:".",slug:"/\u62c6\u5408PDF",permalink:"/sheets/\u62c6\u5408PDF",draft:!1,editUrl:"https://github.com/jiangmiemie/blog/blob/master/sheets/\u62c6\u5408PDF.md",tags:[{label:"python",permalink:"/sheets/tags/python"},{label:"pdf",permalink:"/sheets/tags/pdf"}],version:"current",frontMatter:{tags:["python","pdf"]},sidebar:"tutorialSidebar",previous:{title:"\u590d\u5236\u8868\u683c\u6837\u5f0f",permalink:"/sheets/\u590d\u5236\u8868\u683c\u6837\u5f0f"},next:{title:"\u63e1\u624b\u534f\u8bae",permalink:"/sheets/\u63e1\u624b\u534f\u8bae"}},i={},s=[],o={toc:s},m="wrapper";function l(e){let{components:n,...r}=e;return(0,t.kt)(m,(0,p.Z)({},o,r,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-python"},'\nfrom PyPDF2 import PdfFileWriter, PdfFileReader, PdfFileMerger\nimport os\nfrom PyPDF2 import PdfFileReader, PdfFileMerger\n\n\ndef get_reader(filename, password):\n    try:\n        old_file = open(filename, "rb")\n    except IOError as err:\n        print("\u6587\u4ef6\u6253\u5f00\u5931\u8d25\uff01" + str(err))\n        return None\n\n    pdf_reader = PdfFileReader(old_file, strict=False)  # \u521b\u5efa\u8bfb\u5b9e\u4f8b\n    # \u89e3\u5bc6\u64cd\u4f5c\n    if pdf_reader.isEncrypted:\n        if password is None:\n            print("%s\u6587\u4ef6\u88ab\u52a0\u5bc6\uff0c\u9700\u8981\u5bc6\u7801\uff01" % filename)\n            return None\n        else:\n            if pdf_reader.decrypt(password) != 1:\n                print("%s\u5bc6\u7801\u4e0d\u6b63\u786e\uff01" % filename)\n                return None\n    if old_file in locals():\n        old_file.close()\n    return pdf_reader\n\n\ndef encrypt_pdf(filename, new_password, old_password=None, encrypted_filename=None):\n    """\u5bf9filename\u6240\u5bf9\u5e94\u7684\u6587\u4ef6\u8fdb\u884c\u52a0\u5bc6,\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\n    :param filename: \u6587\u4ef6\u5bf9\u5e94\u7684\u8def\u5f84\n    :param new_password: \u5bf9\u6587\u4ef6\u52a0\u5bc6\u4f7f\u7528\u7684\u5bc6\u7801\n    :param old_password: \u5982\u679c\u65e7\u6587\u4ef6\u8fdb\u884c\u4e86\u52a0\u5bc6\uff0c\u9700\u8981\u5bc6\u7801\n    :param encrypted_filename: \u52a0\u5bc6\u4e4b\u540e\u7684\u6587\u4ef6\u540d\uff0c\u7701\u5374\u65f6\u4f7f\u7528filename_encrypted;\n    :return:"""\n\n    pdf_reader = get_reader(filename, old_password)  # \u521b\u5efa\u4e00\u4e2aReader\u5b9e\u4f8b\n    if pdf_reader is None:\n        return\n    pdf_writer = PdfFileWriter()  # \u521b\u5efa\u4e00\u4e2a\u5199\u64cd\u4f5c\u7684\u5b9e\u4f8b\n    pdf_writer.appendPagesFromReader(pdf_reader)  # \u4ece\u4e4b\u524dReader\u4e2d\u5c06\u6570\u636e\u5199\u5165\u5230Writer\u4e2d\n    pdf_writer.encrypt(new_password)  # \u91cd\u65b0\u4f7f\u7528\u65b0\u5bc6\u7801\u52a0\u5bc6\n    if encrypted_filename is None:\n        encrypted_filename = (\n            "".join(filename.split(".")[:-1]) + "_" + "encrypted" + ".pdf"\n        )  # \u4f7f\u7528\u65e7\u6587\u4ef6\u540d + encrypted \u4f5c\u4e3a\u65b0\u7684\u6587\u4ef6\u540d\n    pdf_writer.write(open(encrypted_filename, "wb"))\n\n\ndef decrypt_pdf(filename, password, decrypted_filename=None):\n    """\u5c06\u52a0\u5bc6\u7684\u6587\u4ef6\u53ca\u9006\u884c\u89e3\u5bc6\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u65e0\u9700\u5bc6\u7801pdf\u6587\u4ef6\n    :param filename: \u539f\u5148\u52a0\u5bc6\u7684pdf\u6587\u4ef6\n    :param password: \u5bf9\u5e94\u7684\u5bc6\u7801\n    :param decrypted_filename: \u89e3\u5bc6\u4e4b\u540e\u7684\u6587\u4ef6\u540d\n    :return:"""\n    pdf_reader = get_reader(filename, password)  # \u751f\u6210\u4e00\u4e2aReader\u548cWriter\n    if pdf_reader is None:\n        return\n    if not pdf_reader.isEncrypted:\n        print("\u6587\u4ef6\u6ca1\u6709\u88ab\u52a0\u5bc6\uff0c\u65e0\u9700\u64cd\u4f5c\uff01")\n        return\n    pdf_writer = PdfFileWriter()\n    pdf_writer.appendPagesFromReader(pdf_reader)\n    if decrypted_filename is None:\n        decrypted_filename = (\n            "".join(filename.split(".")[:-1]) + "_" + "decrypted" + ".pdf"\n        )\n    pdf_writer.write(open(decrypted_filename, "wb"))  # \u5199\u5165\u65b0\u6587\u4ef6\n\n\ndef split_by_pages(filename, pages, password=None):\n    """\u5c06\u6587\u4ef6\u6309\u7167\u9875\u6570\u8fdb\u884c\u5e73\u5747\u5206\u5272\n    :param filename: \u6240\u8981\u5206\u5272\u7684\u6587\u4ef6\u540d\n    :param pages: \u5206\u5272\u4e4b\u540e\u6bcf\u4e2a\u6587\u4ef6\u5bf9\u5e94\u7684\u9875\u6570\n    :param password: \u5982\u679c\u6587\u4ef6\u52a0\u5bc6\uff0c\u9700\u8981\u8fdb\u884c\u89e3\u5bc6\u64cd\u4f5c\n    :return:"""\n    pdf_reader = get_reader(filename, password)  # \u5f97\u5230Reader\n    if pdf_reader is None:\n        return\n    pages_nums = pdf_reader.numPages  # \u5f97\u5230\u603b\u7684\u9875\u6570\n    if pages <= 1:\n        print("\u6bcf\u4efd\u6587\u4ef6\u5fc5\u987b\u5927\u4e8e1\u9875\uff01")\n        return\n    pdf_num = (\n        pages_nums // pages + 1 if pages_nums % pages else int(pages_nums / pages)\n    )  # \u5f97\u5230\u5207\u5206\u4e4b\u540e\u6bcf\u4e2apdf\u6587\u4ef6\u7684\u9875\u6570\n    print("pdf\u6587\u4ef6\u88ab\u5206\u4e3a%d\u4efd\uff0c\u6bcf\u4efd\u6709%d\u9875\uff01" % (pdf_num, pages))\n    for cur_pdf_num in range(1, pdf_num + 1):  # \u4f9d\u6b21\u751f\u6210pdf\u6587\u4ef6\n        pdf_writer = PdfFileWriter()  # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5199\u5b9e\u4f8b\n        split_pdf_name = (\n            "".join(filename)[:-1] + "_" + str(cur_pdf_num) + ".pdf"\n        )  # \u751f\u6210\u5bf9\u5e94\u7684\u6587\u4ef6\u540d\u79f0\n        start = pages * (cur_pdf_num - 1)  # \u8ba1\u7b97\u51fa\u5f53\u524d\u5f00\u59cb\u7684\u4f4d\u7f6e\n        end = (\n            pages * cur_pdf_num if cur_pdf_num != pdf_num else pages_nums\n        )  # \u8ba1\u7b97\u51fa\u7ed3\u675f\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u662f\u6700\u540e\u4e00\u4efd\u5c31\u76f4\u63a5\u8fd4\u56de\u6700\u540e\u7684\u9875\u6570\uff0c\u5426\u5219\u7528\u6bcf\u4efd\u9875\u6570*\u5df2\u7ecf\u5206\u597d\u7684\u6587\u4ef6\u6570\n        # print(str(start) + \',\' + str(end))\n        for i in range(start, end):  # \u4f9d\u6b21\u8bfb\u53d6\u5bf9\u5e94\u7684\u9875\u6570\n            pdf_writer.addPage(pdf_reader.getPage(i))\n        pdf_writer.write(open(split_pdf_name, "wb"))  # \u5199\u5165\u6587\u4ef6\n\n\ndef split_by_num(filename, nums, password=None):\n    """\u5c06pdf\u6587\u4ef6\u5206\u4e3anums\u4efd\n    :param filename: \u6587\u4ef6\u540d\n    :param nums: \u8981\u5206\u6210\u7684\u4efd\u6570\n    :param password: \u5982\u679c\u9700\u8981\u89e3\u5bc6\uff0c\u8f93\u5165\u5bc6\u7801\n    :return:"""\n    pdf_reader = get_reader(filename, password)\n    if not pdf_reader:\n        return\n    if nums < 2:\n        print("\u4efd\u6570\u4e0d\u80fd\u5c0f\u4e8e2\uff01")\n        return\n    pages = pdf_reader.numPages  # \u5f97\u5230pdf\u7684\u603b\u9875\u6570\n    if pages < nums:\n        print("\u4efd\u6570\u4e0d\u5e94\u8be5\u5927\u4e8epdf\u603b\u9875\u6570\uff01")\n        return\n    each_pdf = pages // nums  # \u8ba1\u7b97\u6bcf\u4efd\u5e94\u8be5\u6709\u591a\u5c11\u9875\n    print("pdf\u5171\u6709%d\u9875\uff0c\u5206\u4e3a%d\u4efd\uff0c\u6bcf\u4efd\u6709%d\u9875\uff01" % (pages, nums, each_pdf))\n\n    for num in range(1, nums + 1):\n        pdf_writer = PdfFileWriter()  # \u751f\u6210\u5bf9\u5e94\u7684\u6587\u4ef6\u540d\u79f0\n        split_pdf_name = "".join(filename)[:-1] + "_" + str(num) + ".pdf"  # \u8ba1\u7b97\u51fa\u5f53\u524d\u5f00\u59cb\u7684\u4f4d\u7f6e\n        start = each_pdf * (num - 1)  # \u8ba1\u7b97\u51fa\u7ed3\u675f\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u662f\u6700\u540e\u4e00\u4efd\u5c31\u76f4\u63a5\u8fd4\u56de\u6700\u540e\u7684\u9875\u6570\uff0c\u5426\u5219\u7528\u6bcf\u4efd\u9875\u6570*\u5df2\u7ecf\u5206\u597d\u7684\u6587\u4ef6\u6570\n        end = each_pdf * num if num != nums else pages\n        print(str(start) + "," + str(end))\n        for i in range(start, end):\n            pdf_writer.addPage(pdf_reader.getPage(i))\n        pdf_writer.write(open(split_pdf_name, "wb"))\n\n\ndef merger_pdf(filenames, merged_name, passwords=None):\n    """\u4f20\u8fdb\u6765\u4e00\u4e2a\u6587\u4ef6\u5217\u8868\uff0c\u5c06\u5176\u4f9d\u6b21\u878d\u5408\u8d77\u6765\n    :param filenames: \u6587\u4ef6\u5217\u8868\n    :param passwords: \u5bf9\u5e94\u7684\u5bc6\u7801\u5217\u8868\n    :return:"""\n    filenums = len(filenames)  # \u8ba1\u7b97\u5171\u6709\u591a\u5c11\u6587\u4ef6\n    pdf_merger = PdfFileMerger(False)  # \u6ce8\u610f\u9700\u8981\u4f7f\u7528False \u53c2\u6570\n    for i in range(filenums):\n        if passwords is None:  # \u5f97\u5230\u5bc6\u7801\n            password = None\n        else:\n            password = passwords[i]\n        pdf_reader = get_reader(filenames[i], password)\n        if not pdf_reader:\n            return\n        pdf_merger.append(pdf_reader)  # append\u9ed8\u8ba4\u6dfb\u52a0\u5230\u6700\u540e\n    pdf_merger.write(open(merged_name, "wb"))\n\n\ndef insert_pdf(pdf1, pdf2, insert_num, merged_name, password1=None, password2=None):\n    """\u5c06pdf2\u5168\u90e8\u6587\u4ef6\u63d2\u5165\u5230pdf1\u4e2d\u7b2cinsert_num\u9875\n    :param pdf1: pdf1\u6587\u4ef6\u540d\u79f0\n    :param pdf2: pdf2\u6587\u4ef6\u540d\u79f0\n    :param insert_num: \u63d2\u5165\u7684\u9875\u6570\n    :param merged_name: \u878d\u5408\u540e\u7684\u6587\u4ef6\u540d\u79f0\n    :param password1: pdf1\u5bf9\u5e94\u7684\u5bc6\u7801\n    :param password2: pdf2\u5bf9\u5e94\u7684\u5bc6\u7801\n    :return:"""\n    pdf1_reader = get_reader(pdf1, password1)\n    pdf2_reader = get_reader(pdf2, password2)\n    if not pdf1_reader or not pdf2_reader:  # \u5982\u679c\u6709\u4e00\u4e2a\u6253\u4e0d\u5f00\u5c31\u8fd4\u56de\n        return\n    pdf1_pages = pdf1_reader.numPages  # \u5f97\u5230pdf1\u7684\u603b\u9875\u6570\n    if insert_num < 0 or insert_num > pdf1_pages:\n        print("\u63d2\u5165\u4f4d\u7f6e\u5f02\u5e38\uff0c\u60f3\u8981\u63d2\u5165\u7684\u9875\u6570\u4e3a\uff1a%d\uff0cpdf1\u6587\u4ef6\u5171\u6709\uff1a%d\u9875\uff01" % (insert_num, pdf1_pages))\n        return\n    m_pdf = PdfFileMerger(False)  # \u6ce8\u610f\u9700\u8981\u4f7f\u7528False\u53c2\u6570\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e2d\u6587\u4e71\u7801\u7684\u60c5\u51b5\n    m_pdf.append(pdf1)\n    m_pdf.merge(insert_num, pdf2)\n    m_pdf.write(open(merged_name, "wb"))\n\n\n# def auto_input(): #\u5408\u5e76PDF\u4e3a\u4e00\u4efd\n#     result_pdf= PdfFileMerger() #\u65b0\u5efa\u5b9e\u4f8b\u5bf9\u8c61\n#     for pdf in os.listdir(path):  #\u904d\u5386\u6587\u4ef6\u5939\n#         with open (pdf,\'rb\') as fp:  # \u6253\u5f00\u8981\u5408\u5e76\u7684\u5b50PDF\n#             pdf_reder = PdfFileReader(fp)  #\u8bfb\u53d6PDF\u5185\u5bb9\n#             if pdf_reder.isEncrypted:   # \u5224\u65ad\u662f\u5426\u88ab\u52a0\u5bc6\n#                 print(f\'\u5ffd\u7565\u52a0\u5bc6\u6587\u4ef6\uff1a{pdf}\')  # \u5982\u679c\u52a0\u5bc6\u5219\u8df3\u8fc7\uff0c\u5e76\u6253\u5370\u5ffd\u7565\u52a0\u5bc6\u6587\u4ef6\n#                 continue\n#             result_pdf.append(pdf_reder,import_bookmarks = True) # \u5c06\u521a\u521a\u8bfb\u53d6\u5230\u7684PDF\u5185\u5bb9\u8ffd\u52a0\u5230\u5b9e\u4f8b\u5bf9\u8c61\u5185\n\n#     result_pdf.write(result_name) # \u5199\u5165\u4fdd\u5b58\n#     result_pdf.close()    # \u5173\u95ed\u7a0b\u5e8f\n\n\nif __name__ == "__main__":\n    # \u52a0\u5bc6\n    # encrypt_pdf(\'ex1.pdf\', \'leafage\')\n\n    # \u89e3\u5bc6\n    # decrypt_pdf(\'ex1123_encrypted.pdf\', \'leafage\')\n\n    # \u6309\u9875\u6570\u62c6\u5206\n    # split_by_pages(\'ex1.pdf\', 5)\n\n    # \u6309\u62c6\u5206\u540e\u7684\u6587\u4ef6\u6570\u62c6\u5206\n    split_by_num("\u6267\u88c1\u8868.pdf", 2)\n\n    # \u5408\u5e76PDF\u6587\u4ef6\n    # merger_pdf([\'ex1.pdf\', \'ex2.pdf\'], \'merger.pdf\')\n\n    # \u63d2\u5165PDF\u81f3\u6307\u5b9a\u4f4d\u7f6e\n    # insert_pdf(\'ex1.pdf\', \'ex2.pdf\', 10, \'pdf12.pdf\')\n')))}l.isMDXComponent=!0}}]);